Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/Profiling", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/profiling/profiling_section", "API/core/profiling/scoped_region", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/min_max_clamp", "API/core/utilities/num_devices", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/swap", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "faq", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.md", "API/algorithms/std-algorithms/all/StdAllOf.md", "API/algorithms/std-algorithms/all/StdAnyOf.md", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.md", "API/algorithms/std-algorithms/all/StdCountIf.md", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.rst", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.rst", "API/algorithms/std-algorithms/all/StdMoveBackward.rst", "API/algorithms/std-algorithms/all/StdNoneOf.md", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.rst", "API/algorithms/std-algorithms/all/StdReverseCopy.rst", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.rst", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/Profiling.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/profiling/profiling_section.rst", "API/core/profiling/scoped_region.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/min_max_clamp.rst", "API/core/utilities/num_devices.rst", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/swap.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.rst", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "faq.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "Profiling", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ProfilingSection</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ScopedRegion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "Minimum/maximum operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_devices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::kokkos_swap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "FAQ", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 132, 133, 135, 136, 185, 200, 206], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 122, 128, 130, 132, 133, 135, 137, 138, 152, 162, 167, 168, 171, 172, 175, 185, 189, 190, 192, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 217, 227, 228, 233, 234, 237, 239], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 95, 135, 136, 149, 151, 189, 190, 192, 193, 196, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 221, 225, 227, 229], "sort": [0, 3, 36, 37, 82, 213], "nest": [0, 77, 87, 93, 95, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 179, 180, 193, 196, 203, 204, 205, 206, 233, 238, 240, 242], "polici": [0, 72, 83, 87, 141, 142, 143, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 194, 198, 200, 201, 205, 213, 233, 236, 238], "team": [0, 72, 85, 87, 95, 141, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 196, 201, 203, 204, 205, 212, 225, 226, 228, 229, 239, 240], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 93, 95, 130, 132, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 168, 171, 172, 173, 192, 194, 195, 196, 200, 202, 205, 206, 209, 210, 215, 216, 229, 236, 239, 242], "level": [0, 87, 88, 95, 150, 152, 153, 193, 194, 199, 202, 205, 209, 210, 211, 215, 229], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 92, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 130, 132, 133, 139, 140, 144, 145, 146, 147, 149, 155, 157, 159, 160, 161, 162, 163, 167, 171, 173, 174, 176, 177, 178, 184, 185, 186, 189, 190, 191, 207, 208, 209, 213, 237, 240], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 194, 218, 222, 237, 241], "file": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 167, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 200, 214, 216, 222, 228, 233, 241], "kokkos_cor": [1, 2, 76, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 193, 198, 200, 213, 217, 222, 235, 240, 241], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 89, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 198, 200, 207, 213, 217, 222, 232, 233, 235, 237, 240, 241], "kokkos_complex": [1, 213], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 136, 137, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 167, 170, 173, 174, 176, 177, 178, 182, 183, 184, 185, 186, 187, 193, 194, 196, 197, 198, 199, 201, 205, 207, 209, 212, 222, 232, 233, 235], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 140, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 222, 223, 234, 237, 238, 240], "struct": [1, 2, 11, 21, 22, 28, 30, 32, 33, 35, 36, 39, 40, 41, 42, 46, 48, 51, 52, 56, 67, 69, 72, 81, 84, 95, 119, 120, 122, 125, 130, 131, 133, 135, 136, 141, 142, 143, 145, 146, 163, 176, 179, 180, 193, 196, 197, 198, 199, 201, 205, 209, 213, 232, 237, 239, 240], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 21, 22, 28, 30, 32, 33, 35, 36, 39, 40, 41, 42, 46, 51, 52, 56, 75, 77, 79, 81, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 145, 146, 151, 152, 167, 179, 180, 181, 197, 198, 199, 201, 205, 209, 234], "static": [1, 74, 75, 76, 77, 85, 87, 149, 151, 153, 179, 180, 181, 185, 189, 190, 197, 199, 202, 209, 210, 213, 222, 242], "gen_func_typ": 1, "max": [1, 72, 74, 88, 103, 106, 108, 114, 117, 118, 119, 120, 122, 123, 125, 140, 146, 154, 156, 158, 170, 192, 196, 199, 205, 207, 213, 216, 241], "return": [1, 2, 13, 14, 19, 20, 29, 38, 42, 45, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 95, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 132, 134, 135, 136, 140, 145, 151, 152, 153, 155, 157, 159, 161, 162, 163, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 189, 190, 191, 192, 193, 197, 198, 199, 201, 204, 207, 209, 213, 222, 231, 232, 233, 234, 235, 236, 239], "type_valu": 1, "draw": [1, 72], "gen": [1, 189, 190], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 130, 132, 133, 135, 136, 138, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 196, 197, 198, 199, 201, 203, 205, 207, 208, 213, 222, 232, 233, 234, 236, 238, 240], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 95, 145, 146, 147, 150, 151, 154, 155, 156, 157, 158, 159, 170, 184, 199, 204, 205, 208, 209, 228, 229, 233], "start": [1, 18, 24, 50, 51, 60, 66, 69, 71, 72, 74, 82, 95, 130, 136, 137, 145, 146, 147, 149, 150, 151, 153, 160, 161, 175, 189, 193, 196, 199, 200, 201, 205, 209, 210, 225, 229, 232, 234, 236, 239], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 134, 135, 137, 146, 147, 149, 150, 151, 153, 155, 157, 159, 160, 161, 194, 200, 209, 232, 233, 239, 241], "function": [1, 2, 4, 30, 33, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 128, 129, 134, 135, 137, 138, 140, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 167, 170, 171, 173, 174, 175, 176, 177, 181, 193, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 216, 220, 225, 230, 231, 232, 233, 234, 236, 238], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 176, 177, 185, 189, 190, 195, 197, 199, 205, 207, 208, 218, 222, 232, 237], "all": [1, 2, 13, 25, 30, 33, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 93, 95, 97, 122, 133, 134, 136, 137, 138, 144, 145, 148, 152, 153, 176, 178, 181, 184, 185, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 221, 225, 227, 228, 229, 233, 235, 239, 240], "list": [1, 2, 72, 82, 98, 139, 140, 149, 184, 186, 187, 192, 200, 202, 204, 209, 210, 218, 221, 225, 226, 227, 228, 229, 233, 234, 239], "here": [1, 39, 40, 41, 72, 84, 87, 130, 134, 135, 136, 148, 153, 161, 192, 199, 200, 203, 204, 205, 207, 209, 212, 217, 221, 228, 229, 234, 236, 240], "ar": [1, 2, 4, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 95, 98, 108, 117, 118, 122, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 151, 152, 153, 154, 156, 158, 168, 169, 170, 171, 172, 176, 177, 178, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 221, 223, 225, 226, 227, 228, 229, 231, 232, 234, 236, 238, 239, 240, 241], "part": [1, 72, 83, 87, 98, 122, 130, 136, 152, 167, 169, 192, 193, 194, 201, 202, 206, 207, 209, 225, 227, 229, 238], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 158, 160, 161, 162, 166, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 212, 214, 216, 217, 218, 220, 222, 226, 230, 231, 234, 235, 236, 237, 238, 240, 242], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 137, 138, 139, 140, 162, 165, 169, 170, 189, 190, 191, 193, 197, 198, 201, 208, 209, 217], "char": [1, 2, 76, 86, 87, 122, 130, 133, 134, 135, 136, 145, 146, 147, 164, 166, 171, 173, 178, 181, 185, 189, 190, 191, 197, 198, 200, 209, 222, 227, 237, 240], "short": [1, 205], "127": 1, "0xff": 1, "256": [1, 207, 239], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 122, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 166, 168, 171, 172, 173, 176, 178, 181, 184, 185, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 213, 222, 231, 233, 234, 235, 236, 237, 238, 239, 240], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 122, 139, 194, 202, 204, 205, 209, 225], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 138, 139, 140, 163, 179, 180, 181, 204, 205, 207, 234, 237], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 105, 111, 121, 122, 131, 132, 133, 135, 137, 145, 146, 147, 150, 152, 153, 155, 157, 159, 161, 162, 163, 166, 167, 168, 171, 172, 174, 178, 181, 184, 185, 189, 190, 191, 195, 197, 198, 207, 210, 216, 217, 218, 220, 221, 222, 227, 229, 231, 232, 233, 234, 239, 242], "0f": [1, 163], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 95, 130, 133, 134, 135, 139, 144, 146, 155, 157, 159, 165, 167, 175, 176, 184, 185, 189, 190, 191, 192, 196, 199, 201, 205, 207, 208, 209, 222, 231, 232, 233, 234, 235, 236], "0": [1, 2, 11, 18, 24, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 95, 109, 110, 112, 122, 124, 130, 132, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 167, 171, 178, 179, 180, 181, 184, 185, 189, 190, 191, 192, 194, 196, 197, 198, 199, 201, 205, 206, 207, 209, 210, 216, 218, 221, 222, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240], "complex": [1, 72, 82, 87, 88, 97, 122, 194, 195, 196, 199, 204, 207, 215, 217, 221], "where": [1, 2, 4, 11, 12, 17, 22, 28, 30, 32, 33, 35, 36, 37, 40, 42, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 95, 100, 101, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 136, 145, 154, 158, 162, 166, 178, 185, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 221, 225, 229, 231, 232, 233, 236, 237, 238, 239, 240], "maximum": [1, 3, 72, 77, 78, 82, 97, 103, 105, 106, 108, 113, 114, 117, 118, 119, 120, 130, 153, 196, 199], "valu": [1, 2, 4, 11, 17, 19, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 130, 132, 135, 136, 137, 140, 145, 146, 147, 151, 152, 153, 155, 157, 159, 163, 166, 170, 174, 177, 178, 184, 185, 191, 192, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 216, 234, 237, 240], "xorshift": 1, "given": [1, 4, 33, 43, 44, 57, 58, 65, 66, 75, 78, 79, 81, 84, 85, 87, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 122, 129, 130, 137, 149, 151, 152, 153, 169, 170, 176, 178, 181, 194, 199, 200, 201, 205, 206, 207, 208, 209, 210, 228, 234, 238, 239], "follow": [1, 33, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 92, 93, 98, 122, 130, 136, 139, 152, 178, 185, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 205, 207, 208, 209, 210, 213, 216, 217, 218, 221, 223, 227, 229, 231], "enum": [1, 130, 136, 209], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 122, 131, 135, 147, 152, 154, 156, 158, 162, 163, 164, 166, 173, 174, 178, 181, 182, 183, 184, 185, 189, 195, 196, 198, 207, 216, 218, 220, 221, 222, 227, 229, 239, 240, 242], "int64_t": [1, 78, 85, 147, 149, 151, 189, 190], "kokkos_random": [1, 2, 213], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 92, 93, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 133, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 151, 152, 153, 160, 161, 162, 163, 170, 174, 177, 178, 179, 180, 181, 185, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 215, 218, 225, 226, 227, 228, 229, 232, 233, 237, 239, 240], "structur": [1, 4, 72, 76, 95, 98, 132, 185, 200, 204, 206, 208, 209, 230, 231, 233, 234, 238, 239, 242], "necessari": [1, 75, 76, 87, 92, 95, 145, 185, 194, 195, 199, 201, 205, 209, 210, 225, 229, 231, 234, 240], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 136, 151, 152, 185, 189, 191, 193, 196, 199, 202, 204, 206, 208, 209, 221, 225, 227, 228, 229, 232], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 95, 132, 160, 161, 189, 190, 193, 194, 199, 200, 202, 203, 205, 207, 208, 209, 216, 225, 226, 228, 229, 233, 234, 237, 238, 239, 240, 242], "vigna": 1, "sebastiano": 1, "2014": [1, 204, 211], "an": [1, 2, 4, 11, 18, 22, 24, 25, 28, 29, 33, 34, 43, 44, 58, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 93, 95, 108, 116, 122, 124, 128, 130, 134, 135, 136, 137, 139, 144, 145, 146, 147, 149, 151, 152, 153, 156, 161, 162, 163, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 215, 217, 225, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 94, 97, 128, 129, 137, 138, 139, 140, 162, 188, 193, 199, 200, 207, 213, 216, 221, 229, 231], "explor": [1, 87, 202, 225], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 130, 132, 146, 152, 163, 165, 176, 178, 184, 185, 189, 194, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 218, 222, 225, 229, 234, 236, 237, 238, 240], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 92, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 136, 137, 140, 145, 146, 148, 151, 152, 153, 160, 161, 162, 168, 171, 172, 185, 194, 196, 198, 199, 203, 204, 205, 208, 209, 210, 212, 216, 217, 221, 223, 229, 240], "http": [1, 84, 139, 211, 215, 227], "arxiv": 1, "org": [1, 84, 139, 194, 211], "ab": [1, 139, 189], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 92, 95, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 145, 146, 147, 148, 149, 151, 152, 153, 158, 160, 161, 162, 166, 167, 170, 173, 177, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 216, 217, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 238, 239, 241], "themselv": [1, 95, 204, 205, 206, 225], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 92, 95, 122, 130, 132, 133, 140, 144, 145, 152, 154, 155, 156, 157, 177, 181, 182, 183, 185, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 217, 221, 225, 227, 228, 229, 231, 234, 237, 238, 239, 240], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 65, 69, 75, 77, 78, 81, 87, 95, 122, 130, 132, 135, 136, 137, 151, 162, 178, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 222, 225, 226, 228, 229, 231, 232, 233, 234, 240, 241], "compon": [1, 167, 181, 204, 224, 228], "state": [1, 72, 75, 81, 87, 134, 199, 205, 207, 209], "pool": [1, 72, 199, 209], "actual": [1, 77, 130, 136, 148, 152, 153, 185, 192, 199, 201, 204, 205, 206, 209, 210, 216, 227, 228, 229], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 133, 141, 142, 143, 144, 145, 146, 147, 150, 154, 155, 156, 157, 158, 159, 165, 176, 177, 178, 179, 180, 181, 184, 185, 192, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 218, 222, 225, 229, 232, 236, 238, 239, 240], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 88, 98, 128, 129, 160, 185, 194, 204, 210, 215, 226, 234, 242], "so": [1, 2, 82, 87, 92, 95, 130, 192, 193, 194, 199, 200, 201, 203, 204, 205, 207, 208, 209, 212, 221, 226, 227, 229, 232, 236, 240], "each": [1, 2, 4, 11, 23, 30, 31, 32, 33, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 95, 139, 145, 146, 153, 154, 156, 158, 162, 163, 179, 180, 181, 185, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 223, 225, 227, 228, 229, 231, 233, 234, 237, 239, 240], "activ": [1, 23, 24, 53, 56, 88, 194, 199, 205, 210, 216, 229], "abl": [1, 76, 95, 130, 136, 185, 186, 192, 199, 202, 204, 207, 209, 213, 234], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 133, 137, 152, 162, 163, 166, 182, 185, 192, 193, 194, 196, 199, 200, 201, 202, 204, 205, 208, 209, 210, 225, 226, 228, 229, 231, 238], "own": [1, 75, 162, 192, 208, 209, 210, 225, 227, 234], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 33, 35, 43, 44, 45, 53, 57, 58, 60, 65, 75, 76, 77, 79, 81, 82, 87, 92, 95, 122, 130, 133, 134, 135, 136, 139, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 167, 174, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 95, 130, 132, 135, 136, 146, 148, 152, 153, 154, 156, 158, 177, 179, 180, 181, 185, 186, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 225, 228, 235, 236, 238, 240], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 95, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 160, 162, 173, 174, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 225, 226, 229, 232, 234, 235, 236, 237, 238, 240], "independ": [1, 72, 100, 136, 153, 205, 209, 225, 229, 242], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 93, 98, 152, 162, 170, 177, 178, 185, 193, 194, 199, 202, 204, 207, 209, 217, 222, 225, 227, 233, 234, 235, 236], "note": [1, 33, 37, 43, 44, 57, 58, 65, 76, 77, 78, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 144, 145, 151, 152, 153, 162, 178, 185, 192, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 225, 229, 232, 236, 239, 240], "contrast": [1, 137, 150, 155, 157, 159, 166, 199, 209, 225], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 127, 141, 142, 143, 190, 194, 202, 204, 229, 232, 240], "collect": [1, 152, 199, 202, 205, 206, 208, 225, 229, 234, 237], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 114, 116, 118, 119, 122, 125, 127, 128, 129, 130, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 173, 177, 178, 181, 182, 183, 185, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 214, 221, 222, 225, 229, 233, 234, 236, 238], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 93, 122, 127, 128, 129, 130, 132, 134, 136, 138, 140, 144, 146, 147, 148, 152, 153, 154, 155, 156, 157, 161, 177, 178, 182, 183, 185, 189, 190, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 221, 222, 225, 227, 228, 229, 235, 240], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 95, 122, 130, 131, 132, 135, 136, 140, 145, 146, 149, 150, 151, 152, 153, 158, 159, 181, 182, 183, 185, 186, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 214, 215, 223, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 238, 240], "call": [1, 2, 11, 17, 21, 22, 28, 30, 33, 35, 36, 40, 42, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 95, 105, 122, 128, 129, 130, 132, 133, 134, 135, 139, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 171, 173, 174, 175, 176, 177, 178, 182, 183, 185, 189, 190, 191, 192, 194, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 217, 229, 232, 234, 236, 240], "insid": [1, 2, 33, 43, 44, 57, 58, 65, 81, 85, 87, 95, 144, 145, 146, 147, 150, 154, 155, 156, 157, 158, 159, 169, 193, 194, 199, 201, 204, 205, 209, 238, 239, 240, 241], "condit": [1, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 60, 76, 166, 185, 192, 199, 201, 204, 205, 218, 228, 236], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 87, 88, 93, 130, 132, 136, 138, 139, 163, 166, 168, 171, 172, 177, 178, 185, 194, 200, 201, 202, 203, 205, 209, 210, 217, 228, 229, 230, 234, 235], "public": [1, 75, 76, 77, 79, 81, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 130, 136, 146, 150, 152, 153, 155, 157, 159, 167, 169, 181, 191, 193, 198, 203, 205, 212, 222, 225, 234, 238, 240], "typedef": [1, 75, 76, 77, 79, 81, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 150, 151, 152, 153, 155, 157, 159, 167, 175, 179, 180, 181, 193, 196, 197, 198, 199, 201, 205, 209, 232, 236], "device_typ": [1, 75, 76, 77, 81, 87, 130, 136, 177, 185, 209], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 95, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 136, 138, 139, 144, 145, 146, 147, 149, 151, 152, 160, 161, 162, 164, 166, 167, 173, 174, 175, 178, 182, 183, 185, 189, 191, 192, 193, 198, 199, 201, 203, 205, 207, 209, 213, 217, 222, 232, 234, 235, 236, 238, 239, 240], "init": [1, 22, 34, 67, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 146, 147, 198, 234], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": 1, "us": [1, 2, 4, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 134, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 168, 171, 172, 176, 177, 182, 183, 184, 185, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 229, 231, 234, 236, 237, 238, 240, 241], "establish": [1, 229, 233], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 94, 149, 151, 194, 200, 202, 205, 207, 209, 216, 221, 227, 229], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 131, 132, 133, 134, 145, 146, 147, 163, 166, 167, 168, 171, 172, 173, 178, 181, 185, 186, 189, 190, 191, 194, 195, 197, 198, 199, 201, 203, 204, 205, 220, 222, 225, 227, 229, 235, 236, 240], "make": [1, 75, 76, 87, 95, 137, 152, 170, 185, 192, 193, 194, 196, 199, 203, 204, 205, 207, 210, 212, 225, 227, 232, 234, 235, 238, 240], "process": [1, 89, 136, 194, 200, 206, 207, 208, 210, 215, 224, 229], "platform": [1, 83, 189, 190, 215, 226, 228, 237], "determinist": [1, 48, 69, 206], "request": [1, 75, 77, 130, 141, 142, 143, 146, 152, 153, 199, 200, 204, 206, 212, 216, 225, 226, 227, 229], "lock": [1, 201, 204, 206, 207, 209], "guarante": [1, 75, 76, 79, 93, 95, 130, 136, 145, 146, 147, 169, 185, 193, 194, 201, 204, 205, 206, 207, 235, 239], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 95, 100, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 135, 136, 139, 145, 146, 147, 148, 161, 177, 185, 189, 190, 192, 194, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 225, 228, 229, 231, 232, 238, 239, 240], "privat": [1, 79, 87, 152, 167, 193, 195, 198, 199, 205, 225, 234], "get": [1, 75, 87, 95, 98, 134, 152, 153, 181, 192, 199, 200, 201, 203, 204, 207, 208, 210, 212, 225, 227, 237, 239, 240], "cuda": [1, 72, 75, 85, 87, 88, 94, 136, 149, 151, 153, 162, 178, 199, 200, 202, 205, 206, 207, 209, 215, 216, 221, 227, 228, 229, 235, 236], "involv": [1, 87, 148, 228, 233], "atom": [1, 72, 76, 81, 83, 100, 101, 102, 103, 104, 105, 106, 107, 185, 199, 201, 204, 206, 220, 239, 242], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 135, 137, 160, 161, 178, 185, 191, 192, 194, 199, 204, 205, 206, 207, 209, 213, 216, 227, 236, 238], "upon": [1, 84, 87, 130, 144, 161, 193, 202, 225], "complet": [1, 77, 95, 130, 144, 194, 195, 199, 204, 209, 210, 225, 229, 236, 239], "unlock": 1, "updat": [1, 72, 75, 82, 100, 101, 102, 103, 104, 105, 106, 107, 192, 194, 199, 205, 209, 221, 225, 227, 229, 234, 236, 239], "statu": 1, "onc": [1, 72, 95, 134, 135, 199, 200, 206, 209, 210, 216, 225, 234, 236], "again": [1, 87, 194, 201, 209, 210, 216, 229], "becom": [1, 59, 60, 79, 95, 136, 204, 225, 229, 233], "avail": [1, 74, 77, 81, 82, 87, 88, 98, 130, 132, 136, 137, 138, 139, 140, 153, 166, 168, 170, 171, 172, 189, 190, 194, 199, 200, 202, 204, 205, 207, 209, 210, 225, 228, 229, 231, 233, 234], "within": [1, 2, 4, 79, 82, 93, 130, 135, 145, 146, 147, 149, 152, 194, 199, 204, 206, 209, 232, 233, 234], "select": [1, 72, 74, 92, 132, 165, 184, 191, 200, 202, 204, 209, 221, 225, 228, 229, 239], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 93, 95, 98, 119, 120, 122, 125, 130, 131, 132, 135, 136, 137, 138, 139, 140, 145, 146, 147, 151, 152, 153, 163, 166, 167, 170, 173, 174, 176, 177, 178, 181, 185, 186, 187, 189, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 218, 221, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240], "next": [1, 225, 227, 229, 236, 239], "step": [1, 4, 199, 201, 202, 207, 209, 225, 227, 228, 229, 234], "develop": [1, 92, 145, 199, 202, 204, 206, 209, 212, 215, 221, 226, 227, 228, 229], "functor": [1, 2, 11, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 48, 67, 69, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 189, 190, 199, 201, 204, 209, 233, 234, 236, 238], "desir": [1, 48, 67, 69, 77, 147, 162, 177, 194, 205, 209, 225, 227, 228, 229], "type": [1, 11, 17, 22, 28, 30, 32, 33, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 93, 95, 96, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 132, 136, 137, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 167, 173, 176, 177, 178, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 215, 220, 222, 227, 229, 232, 233, 234, 237, 240], "devicetyp": [1, 130, 136], "respect": [1, 76, 122, 139, 170, 177, 178, 182, 183, 185, 196, 199, 204, 209], "x": [1, 72, 138, 139, 181, 182, 183, 189, 191, 196, 201, 205, 207, 209, 215, 222, 232, 236], "idx": [1, 232], "just": [1, 2, 75, 87, 88, 95, 130, 136, 148, 174, 178, 181, 192, 200, 205, 207, 209, 210, 212, 216, 227, 231, 234], "give": [1, 88, 95, 193, 200, 201, 205, 206, 207, 209, 227], "argument": [1, 11, 17, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 93, 95, 98, 131, 132, 133, 135, 139, 144, 146, 147, 152, 153, 155, 157, 159, 166, 176, 177, 178, 184, 185, 186, 189, 190, 191, 193, 198, 199, 205, 208, 209, 213, 217, 233, 235], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 189, 190, 213], "urand": 1, "For": [1, 2, 59, 75, 76, 95, 122, 130, 136, 137, 140, 151, 154, 156, 158, 162, 178, 184, 185, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 223, 225, 229, 233, 234, 235, 240], "32": [1, 2, 199, 201, 209, 229], "bit": [1, 72, 74, 87, 89, 185, 190, 203, 205, 207, 208, 209, 240], "unsign": [1, 74, 75, 76, 77, 80, 103, 106, 137, 185, 208, 209, 235], "integ": [1, 59, 60, 75, 76, 81, 85, 95, 137, 139, 149, 151, 184, 185, 199, 205, 207, 209, 232], "three": [1, 75, 87, 139, 144, 192, 193, 194, 199, 202, 204, 205, 207, 209, 210, 225, 228, 233], "option": [1, 72, 75, 76, 81, 85, 95, 130, 132, 145, 146, 147, 149, 185, 193, 194, 196, 199, 200, 201, 202, 205, 209, 210, 225, 227, 228, 229, 233, 235, 237, 238], "shown": [1, 55, 87, 122, 199, 204, 233], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 93, 95, 128, 130, 135, 152, 162, 163, 179, 184, 185, 189, 190, 191, 194, 196, 199, 201, 203, 204, 205, 209, 212, 213, 225, 232, 233, 236, 240], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 128, 129, 131, 132, 136, 141, 142, 143, 146, 149, 151, 152, 153, 163, 167, 175, 178, 179, 180, 181, 182, 183, 185, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 210, 216, 222, 225, 229, 233, 237, 240], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 95, 130, 149, 150, 152, 154, 155, 156, 157, 158, 159, 189, 190, 192, 196, 199, 205, 207, 208, 209, 210, 228, 231, 233, 238], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 95, 133, 146, 153, 185, 193, 200, 201, 205, 206, 207, 208, 209, 218, 221, 225, 228, 234], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 95, 98, 130, 131, 132, 144, 163, 167, 173, 177, 178, 192, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 215, 218, 222, 225, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242], "defin": [1, 33, 42, 65, 72, 76, 78, 83, 87, 88, 93, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 149, 151, 152, 155, 157, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 185, 187, 189, 190, 194, 197, 198, 199, 201, 204, 205, 209, 213, 228, 229, 231, 232, 237, 241], "abov": [1, 86, 130, 137, 139, 192, 194, 199, 202, 205, 207, 208, 209, 218, 229, 233, 234, 239], "And": [1, 72, 108, 201, 211, 238], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 95, 122, 130, 136, 140, 145, 146, 152, 153, 160, 161, 163, 168, 171, 172, 181, 185, 192, 193, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 221, 225, 226, 227, 228, 229, 233, 236, 238], "64": [1, 2, 205, 207, 209], "latter": [1, 95, 146, 185, 199, 204, 209, 229], "cover": [1, 76, 185, 205, 227, 228], "user": [1, 75, 76, 77, 81, 87, 90, 95, 128, 130, 131, 134, 135, 145, 146, 147, 149, 153, 160, 161, 185, 187, 194, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 225, 228, 234, 235, 239, 240, 241], "more": [1, 76, 77, 78, 87, 95, 122, 133, 136, 145, 148, 161, 185, 192, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 233, 238, 239], "other": [1, 46, 75, 76, 77, 78, 82, 87, 93, 95, 135, 136, 145, 146, 147, 152, 154, 155, 156, 157, 162, 166, 177, 178, 179, 180, 181, 192, 194, 199, 201, 203, 204, 205, 206, 207, 208, 210, 215, 216, 218, 221, 222, 225, 227, 229, 232, 234, 235, 238, 240], "scalar": [1, 75, 76, 77, 78, 82, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 146, 167, 178, 185, 189, 190, 192, 195, 196, 198, 199, 201, 205, 217], "uint64_t": [1, 189, 190], "int32_t": [1, 189, 190, 191], "normal": [1, 72, 192, 194, 205, 209, 229], "distribut": [1, 72, 202, 208, 211, 218, 229, 234], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 133, 134, 135, 146, 147, 152, 165, 176, 177, 179, 180, 181, 182, 183, 184, 186, 192, 194, 196, 198, 199, 200, 202, 204, 205, 207, 213, 216, 220, 222, 229, 231, 232, 233, 234, 235, 236, 242], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 189, 190, 196, 199, 201, 203, 205, 209, 240], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 95, 122, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 161, 164, 166, 170, 171, 173, 174, 177, 178, 181, 182, 183, 185, 187, 189, 190, 191, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 217, 218, 222, 225, 227, 228, 229, 232, 235, 237, 240, 241], "main": [1, 2, 76, 86, 98, 122, 131, 132, 133, 134, 135, 145, 146, 147, 166, 169, 171, 173, 178, 181, 185, 189, 190, 191, 194, 197, 198, 200, 207, 209, 210, 222, 225, 232, 235, 236, 240], "argc": [1, 2, 76, 86, 122, 132, 133, 134, 135, 145, 146, 147, 166, 171, 173, 178, 181, 185, 189, 190, 191, 197, 198, 200, 222, 240], "argv": [1, 2, 76, 86, 122, 132, 133, 134, 135, 145, 146, 147, 166, 171, 173, 178, 181, 185, 189, 190, 191, 197, 198, 200, 222, 240], "scopeguard": [1, 72, 135, 213], "guard": [1, 133], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 153, 185, 192, 197, 198, 199, 200, 233], "1000000": [1, 178], "count": [1, 7, 13, 14, 27, 33, 45, 62, 74, 76, 77, 87, 95, 137, 145, 146, 147, 150, 155, 157, 159, 185, 192, 199, 205, 208, 238], "parallel_reduc": [1, 72, 79, 87, 90, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 142, 144, 148, 150, 153, 154, 155, 156, 157, 158, 159, 196, 197, 198, 199, 205, 206, 213, 233, 234, 235], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 122, 130, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 166, 173, 185, 192, 196, 197, 198, 199, 201, 203, 205, 209, 222, 231, 232, 233, 234, 236, 238, 240], "local_count": 1, "acquir": [1, 76, 87, 185, 200, 201, 206, 209], "engin": [1, 194, 204, 206, 209, 211, 218], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 95, 132, 133, 138, 140, 145, 146, 150, 153, 154, 155, 156, 157, 158, 159, 162, 165, 177, 178, 184, 191, 196, 199, 207, 208, 217, 231, 232, 233, 239, 240], "drand": 1, "y": [1, 189, 201, 207, 209, 232, 236], "do": [1, 2, 24, 25, 33, 43, 44, 46, 53, 56, 57, 58, 65, 69, 75, 83, 87, 95, 100, 101, 102, 130, 133, 134, 136, 144, 148, 171, 185, 192, 193, 194, 196, 199, 200, 203, 204, 205, 206, 207, 208, 210, 212, 214, 217, 225, 227, 232, 234, 235, 236, 238], "forget": 1, "releas": [1, 86, 87, 88, 134, 173, 193, 194, 199, 202, 204, 221, 226, 227, 229], "printf": [1, 95, 97, 122, 145, 146, 147, 181, 189, 190, 196, 197, 198, 240], "pi": [1, 89, 138, 217], "f": [1, 87, 95, 139, 152, 153, 163, 213, 227, 232, 233, 239], "n": [1, 2, 18, 24, 31, 63, 64, 74, 75, 77, 81, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 173, 174, 178, 181, 182, 183, 185, 189, 196, 197, 198, 199, 201, 205, 207, 208, 209, 215, 235, 236, 238, 240], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 130, 131, 136, 137, 138, 139, 140, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 168, 170, 171, 172, 173, 174, 181, 184, 185, 197, 198, 207, 208, 211, 216, 220, 222, 225, 227, 229, 233, 235, 242], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 213], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 130, 176, 177, 184, 185, 209], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 128, 129, 174, 179, 180, 181, 182, 183, 185, 189, 190, 191, 199, 205, 207, 208, 209, 232, 240], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 128, 129, 149, 150, 151, 153, 155, 157, 159, 209, 225, 229, 232, 233, 241], "parallel": [2, 33, 43, 44, 57, 58, 65, 72, 77, 81, 83, 85, 87, 92, 93, 122, 130, 132, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 192, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 215, 220, 231, 234, 236, 238, 239, 240, 242], "teampolici": [2, 33, 43, 44, 57, 58, 65, 72, 76, 85, 87, 95, 130, 141, 142, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 158, 159, 185, 196, 199, 201, 205], "kernel": [2, 11, 15, 16, 18, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 95, 145, 149, 151, 152, 153, 162, 173, 178, 185, 192, 194, 201, 204, 205, 206, 209, 210, 215, 216, 217, 229, 235, 239, 242], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 90, 95, 109, 110, 111, 112, 121, 122, 124, 146, 147, 152, 153, 173, 185, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 209, 211, 216, 222, 225, 226, 228, 232, 233, 237, 242], "teamthreadrang": [2, 72, 85, 87, 145, 146, 158, 159, 196, 199, 201], "threadvectorrang": [2, 72, 85, 87, 145, 146, 147, 199], "kokkos_nestedsort": 2, "teammemb": [2, 95, 153, 199], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 72, 75, 84, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 140, 144, 146, 152, 153, 162, 167, 174, 177, 182, 183, 185, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 205, 206, 207, 208, 210, 213, 221, 225, 227, 239], "compar": [2, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 100, 101, 132, 185, 205, 207, 209, 221, 227, 229], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 33, 43, 44, 57, 58, 65, 81, 82, 86, 87, 88, 132, 133, 153, 194, 199, 200, 201, 225, 233], "entir": [2, 75, 87, 150, 181, 205, 206, 208, 210, 225, 228, 229, 238, 240], "thei": [2, 75, 78, 87, 88, 95, 130, 133, 134, 136, 138, 145, 148, 162, 178, 192, 193, 199, 200, 203, 205, 206, 207, 209, 221, 225, 226, 227, 228, 229, 231, 234, 238, 240, 241], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 95, 129, 130, 133, 134, 135, 145, 146, 147, 153, 162, 164, 170, 171, 173, 185, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 221, 223, 225, 227, 229, 233, 234, 236, 237, 238, 239], "top": [2, 95, 193, 194, 199, 223, 229], "lambda": [2, 88, 95, 144, 145, 146, 199, 201, 216, 232, 233, 238], "vector": [2, 72, 73, 85, 88, 145, 146, 147, 150, 153, 156, 157, 158, 159, 162, 189, 190, 191, 196, 205, 206, 209, 213, 216, 232, 237], "lane": [2, 72, 85, 150, 156, 157, 158, 159, 189, 199, 206, 207], "either": [2, 75, 76, 80, 81, 85, 95, 114, 116, 118, 132, 145, 146, 152, 178, 182, 183, 185, 191, 193, 194, 197, 198, 199, 200, 205, 209, 210, 227, 229, 239, 241], "loop": [2, 85, 88, 95, 150, 151, 192, 201, 204, 207, 209, 216, 231, 233, 236, 238, 242], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 95, 136, 150, 183, 185, 192, 193, 194, 195, 199, 201, 202, 203, 204, 207, 208, 209, 210, 229, 240], "simultan": [2, 192], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 95, 146, 152, 192, 194, 197, 198, 205, 226, 240], "same": [2, 17, 18, 24, 28, 29, 31, 34, 37, 39, 41, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 129, 133, 135, 139, 145, 146, 147, 152, 153, 154, 155, 156, 157, 162, 174, 177, 178, 185, 192, 194, 199, 200, 201, 204, 205, 207, 208, 209, 210, 227, 228, 229, 233, 234, 235, 237, 239, 240], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 122, 135, 146, 147, 162, 163, 165, 170, 178, 179, 180, 181, 183, 185, 199, 201, 206, 209, 230, 233, 234, 237], "It": [2, 71, 75, 76, 77, 78, 87, 129, 130, 131, 132, 133, 146, 150, 171, 174, 185, 189, 190, 192, 193, 194, 199, 201, 204, 205, 207, 208, 209, 215, 217, 225, 229, 237, 238], "equival": [2, 39, 40, 41, 70, 71, 78, 93, 130, 152, 184, 185, 199, 205, 207, 208, 209, 232, 237], "kei": [2, 81, 207, 234], "tupl": [2, 149, 237], "accord": [2, 35, 87, 103, 105, 106, 145, 146, 147], "commonli": [2, 204], "entri": [2, 75, 77, 80, 95, 197, 198, 201, 205, 208, 225, 231], "row": [2, 80, 196, 201, 208, 209], "cr": [2, 72, 80], "compress": [2, 80, 209, 234], "spars": [2, 209, 215, 228, 242], "matrix": [2, 196, 208, 209], "requir": [2, 75, 76, 77, 81, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 136, 137, 150, 154, 155, 156, 157, 158, 159, 177, 185, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 209, 210, 213, 215, 224, 227, 229, 230, 233, 236, 237, 239], "extent": [2, 75, 76, 77, 78, 80, 130, 154, 156, 158, 178, 179, 180, 181, 182, 183, 184, 185, 192, 205, 209, 222, 225, 231, 232, 238], "version": [2, 33, 43, 44, 57, 58, 65, 72, 76, 84, 92, 130, 131, 132, 133, 135, 138, 139, 164, 166, 170, 185, 193, 194, 203, 205, 207, 210, 216, 222, 225, 227, 228, 229, 240], "take": [2, 76, 77, 78, 85, 87, 93, 95, 103, 105, 106, 130, 135, 136, 138, 146, 148, 153, 179, 180, 181, 192, 193, 198, 199, 200, 204, 205, 206, 207, 209, 213, 217, 222, 227, 229, 231, 233, 236, 242], "object": [2, 11, 22, 30, 33, 75, 76, 81, 86, 87, 88, 108, 132, 133, 134, 135, 136, 137, 150, 152, 160, 161, 181, 185, 191, 194, 198, 199, 200, 201, 205, 207, 209, 213, 238, 240], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 145, 146, 147, 149, 150, 151, 155, 157, 159, 181, 185, 192, 193, 197, 199, 200, 201, 204, 205, 206, 208, 209, 210, 215, 225, 228, 229, 231, 234, 235, 236, 238], "oper": [2, 4, 11, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 87, 95, 97, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 133, 136, 139, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 167, 178, 179, 180, 181, 185, 187, 191, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 217, 220, 222, 229, 230, 234, 239, 240, 242], "should": [2, 4, 17, 30, 55, 59, 60, 74, 75, 87, 93, 95, 119, 120, 122, 125, 130, 134, 135, 136, 145, 147, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 208, 209, 210, 213, 221, 225, 227, 229, 234, 240], "member": [2, 75, 77, 79, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 132, 140, 145, 146, 147, 152, 154, 155, 156, 157, 167, 179, 180, 181, 186, 191, 193, 196, 198, 199, 203, 205, 209, 223, 225, 228, 229, 238, 239, 240], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 149, 151, 163, 189, 190, 199, 200, 202, 209, 227, 229, 233], "b": [2, 11, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 144, 145, 154, 155, 156, 157, 158, 159, 167, 174, 177, 185, 189, 190, 191, 199, 201, 205, 207, 209, 222, 239], "bool": [2, 13, 14, 17, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 93, 101, 130, 131, 132, 136, 147, 159, 166, 179, 180, 181, 185, 190, 191, 198, 205, 207, 213, 222, 234], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 93, 95, 101, 130, 131, 132, 135, 136, 154, 155, 156, 157, 158, 159, 162, 174, 178, 179, 180, 184, 185, 190, 191, 192, 194, 198, 200, 201, 207, 209, 222], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 130, 133, 136, 144, 145, 146, 147, 152, 163, 168, 171, 178, 185, 186, 189, 191, 192, 194, 195, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 216, 221, 222, 225, 227, 228, 229, 231, 234, 235, 240], "goe": [2, 209, 225], "befor": [2, 35, 69, 74, 75, 76, 86, 100, 101, 102, 133, 134, 135, 152, 171, 178, 185, 199, 201, 202, 203, 204, 205, 208, 209, 216, 225, 228, 234, 236, 239, 240], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 33, 43, 44, 48, 57, 58, 65, 67, 69, 138, 139, 140, 145, 164, 166, 173, 174, 203, 205, 207, 209, 213, 217, 238, 240], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 136, 137, 138, 140, 163, 165, 174, 179, 180, 181, 185, 189, 190, 207, 216], "preced": [2, 229], "larger": [2, 74, 76, 77, 153, 170, 181, 185, 192, 209, 212], "final": [2, 72, 76, 79, 83, 87, 131, 132, 133, 135, 145, 146, 147, 159, 166, 171, 173, 178, 181, 183, 185, 189, 190, 191, 195, 197, 198, 199, 202, 205, 209, 213, 222, 231, 234, 235, 240], "barrier": [2, 152, 206, 236], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 94, 119, 120, 125, 129, 130, 132, 136, 152, 177, 178, 186, 192, 196, 199, 201, 203, 204, 205, 206, 208, 210, 211, 227, 229, 231, 233, 235, 236, 237, 238, 240, 242], "immedi": [2, 145, 194, 202, 209, 210, 236], "after": [2, 11, 15, 17, 18, 22, 24, 34, 47, 49, 50, 51, 52, 54, 55, 60, 66, 67, 68, 70, 71, 75, 77, 86, 87, 95, 132, 134, 135, 152, 171, 178, 182, 183, 191, 192, 194, 200, 201, 202, 204, 205, 206, 208, 209, 210, 225, 226, 227, 228, 229, 235, 236, 239], "both": [2, 72, 75, 76, 79, 82, 87, 95, 108, 117, 118, 136, 162, 163, 178, 185, 192, 193, 196, 199, 200, 201, 202, 204, 205, 207, 209, 215, 225, 226, 227, 228, 229, 233, 234], "global": [2, 83, 87, 150, 152, 155, 157, 159, 199, 209, 236], "scratch": [2, 76, 130, 152, 153, 185, 204, 206, 242], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 93, 94, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 144, 152, 153, 177, 179, 180, 181, 182, 183, 185, 186, 189, 194, 196, 198, 202, 203, 207, 208, 210, 211, 215, 216, 217, 229, 234, 235, 236, 237, 239, 240, 242], "space": [2, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 96, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 159, 162, 177, 178, 182, 183, 185, 186, 196, 198, 199, 200, 201, 210, 215, 227, 229, 233, 234, 236, 237, 238, 239, 242], "biton": 2, "algorithm": [2, 81, 87, 90, 170, 192, 194, 199, 200, 202, 204, 205, 206, 209, 215, 229, 231, 236, 237], "stabl": [2, 225], "mean": [2, 22, 34, 67, 68, 76, 81, 93, 95, 130, 133, 136, 144, 145, 148, 185, 187, 194, 199, 201, 204, 205, 206, 207, 208, 209, 210, 212, 216, 234, 241], "repeat": [2, 199, 227, 236, 239], "input": [2, 22, 34, 67, 68, 76, 77, 79, 95, 146, 147, 194, 196, 200, 201, 205, 209, 229, 233, 234], "correspond": [2, 76, 79, 87, 118, 122, 135, 163, 179, 180, 181, 184, 185, 199, 205, 206, 209, 226, 227, 238], "might": [2, 130, 169, 191, 192, 199, 201, 202, 203, 204, 205, 208, 209, 233, 240, 241], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 93, 95, 98, 128, 129, 130, 132, 135, 136, 139, 145, 149, 151, 162, 169, 178, 185, 190, 193, 194, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 218, 225, 227, 228, 229, 235, 240], "execspac": [2, 79, 130, 151, 162, 177, 178, 209], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 94, 127, 128, 129, 148, 149, 151, 162, 168, 185, 199, 200, 234], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 151, 152, 154, 156, 158, 173, 177, 178, 182, 183, 201, 209, 232, 237], "member_typ": [2, 72, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 196, 199, 201], "10": [2, 24, 34, 48, 69, 77, 78, 82, 86, 133, 134, 135, 147, 178, 185, 194, 199, 205, 209, 211, 220, 221, 227, 229, 240], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 122, 147, 199, 201, 205, 206, 209, 235], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 95, 130, 141, 144, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 166, 173, 185, 192, 199, 201, 203, 204, 205, 206, 209, 222, 231, 232, 233, 234, 235, 236, 238, 240], "whole": [2, 152, 192, 194, 196, 208, 238], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 98, 165, 178, 181, 183, 185, 220, 233, 242], "league_rank": [2, 145, 146, 150, 152, 154, 155, 156, 157, 158, 159, 196, 199], "ahost": 2, "create_mirror_view_and_copi": [2, 177], "hostspac": [2, 72, 75, 87, 94, 177, 178, 181, 185, 198, 201, 209, 232], "cout": [2, 130], "j": [2, 80, 150, 156, 159, 162, 199, 201, 204, 205, 209, 211, 233, 236, 238], "vectorlen": 2, "vector_length_max": [2, 153], "now": [2, 87, 130, 136, 148, 162, 178, 185, 191, 193, 199, 201, 203, 204, 207, 209, 213, 231, 240], "column": [2, 80, 201, 205, 208, 209, 229], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 93, 98, 130, 136, 144, 177, 185, 192, 201, 209, 236], "na": [2, 221, 229], "9": [2, 34, 48, 69, 78, 88, 194, 208, 216, 217, 220, 221, 227, 229], "38": 2, "68": 2, "74": [2, 211], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 194, 221], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 199], "13": [2, 4, 23, 24, 39, 40, 53, 56, 146, 209, 220, 227], "16": [2, 77, 194, 201, 221, 229], "17": [2, 84, 88, 133, 140, 146, 194, 221, 227, 228], "40": [2, 78], "44": [2, 227], "54": 2, "96": [2, 201], "18": [2, 194, 210, 211, 221, 225, 227], "77": 2, "80": [2, 181], "82": 2, "94": 2, "14": [2, 23, 88, 140, 194, 220, 221, 229], "34": [2, 53, 56, 152], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 21, 22, 26, 27, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 57, 58, 61, 62, 65, 66, 68, 69, 70, 71, 76, 77, 88, 138, 140, 147, 154, 156, 158, 178, 185, 205, 216, 220, 221, 225, 227, 242], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 131, 132, 133, 135, 138, 139, 140, 147, 149, 151, 152, 154, 156, 158, 170, 171, 174, 176, 178, 181, 182, 183, 184, 185, 195, 196, 197, 210, 211, 212, 215, 216, 218, 220, 222, 225, 227, 229, 233, 237, 242], "5": [2, 11, 12, 21, 22, 25, 26, 27, 28, 30, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 57, 58, 61, 62, 65, 66, 68, 69, 70, 71, 76, 77, 88, 140, 149, 151, 152, 154, 156, 158, 165, 167, 176, 178, 181, 184, 185, 196, 199, 208, 211, 217, 220, 221, 222, 227, 240, 242], "20": [2, 78, 88, 89, 130, 136, 137, 138, 148, 181, 194, 210, 214, 221, 229], "33": [2, 211], "39": 2, "60": [2, 209], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 131, 132, 133, 135, 139, 170, 185, 194, 196, 204, 208, 210, 216, 217, 220, 221, 222, 225, 227, 229, 242], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 132, 135, 151, 153, 154, 156, 158, 179, 180, 181, 185, 192, 194, 200, 204, 205, 206, 209, 216, 217, 220, 221, 227, 229, 237, 242], "15": [2, 4, 21, 25, 28, 30, 35, 42, 152, 176, 184, 205, 220], "31": [2, 78], "42": [2, 130, 148, 234], "86": 2, "29": [2, 194, 221], "56": 2, "63": 2, "90": [2, 208, 225, 232], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 145, 146, 147, 149, 151, 153, 185, 199, 204, 205, 206, 207, 209, 213, 222, 231, 233, 236], "minimum": [3, 72, 77, 97, 103, 105, 106, 108, 115, 116, 117, 118, 119, 120, 146, 147, 194, 195, 196, 221, 225], "modifi": [3, 4, 11, 17, 22, 24, 28, 30, 32, 35, 36, 40, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 146, 147, 189, 190, 192, 193, 199, 201, 227, 237], "sequenc": [3, 26, 61, 74, 89, 199, 204, 206], "numer": [3, 83, 138, 139, 194, 202, 204, 210, 229, 233, 238], "partit": [3, 35, 47, 213], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 213], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 122, 185, 189, 222, 232, 237], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 145, 146, 147, 153, 177, 182, 183, 185, 204, 205, 208, 209], "qualifi": [4, 87, 213, 221, 240], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 95, 131, 203, 205, 206, 207, 209, 210, 225, 235, 238, 240], "taken": [4, 193, 196, 227], "becaus": [4, 139, 162, 174, 201, 203, 204, 205, 207, 209, 210, 225, 236, 240], "we": [4, 39, 40, 41, 76, 84, 87, 95, 133, 139, 178, 185, 191, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 221, 227, 231, 232, 234, 235, 240], "chang": [4, 72, 75, 81, 133, 152, 169, 185, 193, 202, 205, 207, 208, 209, 210, 222, 224, 225, 226, 227, 229, 235, 240], "itself": [4, 76, 77, 95, 130, 136, 148, 181, 185, 192, 194, 196, 202, 204, 208, 209, 210, 227, 238, 239], "without": [4, 72, 75, 77, 86, 87, 95, 132, 144, 146, 169, 178, 182, 183, 193, 194, 195, 207, 208, 209, 210, 213, 218, 221, 233, 235, 236, 239, 240], "dereferenc": [4, 11, 22, 30, 31, 86, 238], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 129, 132, 134, 135, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 161, 177, 182, 183, 184, 185, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 208, 209, 210, 218, 225, 226, 227, 228, 229, 233, 234, 236, 239], "done": [4, 37, 54, 69, 87, 95, 136, 194, 199, 200, 207, 209, 210, 225, 227, 234], "execut": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 122, 127, 128, 129, 132, 134, 135, 136, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 162, 167, 168, 171, 172, 177, 178, 183, 185, 186, 191, 192, 200, 201, 202, 207, 210, 215, 216, 225, 228, 229, 233, 238, 239, 240, 242], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 132, 145, 146, 149, 152, 154, 156, 158, 176, 178, 181, 182, 183, 184, 185, 199, 200, 209, 210, 213, 222, 232, 233, 234], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 98, 178, 182, 183, 185, 201, 209, 222, 233], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 98, 178, 182, 183, 185, 201, 205, 208, 209, 233], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 98, 185, 208, 209, 232], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 176], "proper": [4, 86, 194, 201, 210], "content": [4, 72, 75, 132, 146, 147, 163, 182, 183, 201, 203, 205, 209, 234, 236, 239, 240], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 104, 130, 192, 201, 204, 205, 208, 209, 235], "iteratortyp": [4, 12, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 82, 135, 175, 180, 185, 199, 200, 201, 204, 208, 209, 225, 229], "need": [4, 28, 30, 76, 77, 84, 87, 95, 129, 130, 133, 137, 139, 146, 147, 162, 178, 185, 193, 194, 195, 199, 200, 201, 202, 203, 205, 207, 208, 210, 225, 226, 227, 229, 234, 236, 237], "go": [4, 86, 145, 146, 147, 149, 151, 152, 153, 193, 194, 199, 204, 208, 225, 227], "calcul": [4, 141, 142, 143, 153, 181, 199, 201, 209, 232, 238], "neg": [4, 18, 24, 33, 63, 64, 135, 191, 192, 207], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 20, 25, 26, 27, 33, 38, 43, 44, 49, 50, 53, 54, 58, 61, 62, 65, 71, 76, 93, 100, 101, 132, 162, 184, 185, 189, 190, 200], "stepsb": 4, "swap": [4, 59, 65, 174, 199], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 95, 130, 135, 136, 139, 150, 166, 185, 193, 194, 203, 204, 207, 208, 209, 216, 225, 229, 233, 234, 235, 240], "current": [4, 33, 43, 44, 57, 58, 65, 74, 76, 77, 81, 87, 95, 100, 101, 130, 136, 139, 162, 167, 185, 189, 190, 194, 199, 205, 206, 207, 208, 209, 210, 215, 225, 228, 229, 234], "api": [4, 17, 55, 81, 88, 134, 135, 152, 169, 200, 212, 215, 223, 233, 239], "doe": [4, 47, 75, 77, 81, 87, 92, 95, 127, 132, 144, 146, 147, 166, 174, 185, 193, 194, 199, 200, 201, 203, 204, 208, 209, 210, 221, 222, 225, 228, 229], "fenc": [4, 72, 87, 90, 130, 136, 145, 146, 152, 162, 183, 185, 204, 209, 210, 236, 240], "min_el": [5, 39, 41, 170], "max_el": [5, 170], "minmax_el": [5, 170], "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 93, 95, 98, 133, 136, 145, 152, 153, 162, 167, 177, 179, 180, 181, 183, 185, 195, 197, 198, 199, 201, 203, 204, 205, 210, 217, 222, 227, 229, 234, 236, 238, 240], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 76, 77, 81, 133, 136, 152, 153, 179, 180, 181, 185, 193, 203, 222, 230, 240], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 206], "generate_n": 6, "remov": [6, 52, 88, 131, 135, 138, 139, 140, 169, 193, 200, 213, 216, 225, 227], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 131, 132, 140, 194, 200, 201, 205, 213, 241], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 137], "reverse_copi": 6, "rotat": [6, 60, 137], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 130, 144, 185, 194, 200, 204, 210, 242], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 190, 207], "any_of": [7, 190, 207], "none_of": [7, 190, 207], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 137, 192, 194, 195, 196, 203, 205, 210, 214, 215, 216, 225, 240], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 209], "search": [7, 12, 19, 20, 25, 26, 27, 35, 53, 62, 74, 81, 132, 200, 239], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 95, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 130, 146, 147, 152, 195, 199, 202, 204, 206, 208, 209], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 93, 130, 136, 149, 151, 162, 178, 199, 201, 235], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 128, 132, 133, 135, 144, 145, 146, 147, 160, 161, 164, 185, 186, 194, 200, 209, 213, 241], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 128, 130, 136, 144, 145, 146, 147, 160, 161, 177, 181, 182, 183, 185, 186, 209, 213, 227, 229], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 130, 136, 199, 201, 204, 218, 226, 238], "second": [11, 36, 38, 40, 42, 72, 74, 93, 95, 135, 144, 162, 163, 175, 184, 189, 190, 191, 192, 196, 199, 201, 203, 204, 205, 209, 240], "comput": [11, 22, 34, 37, 59, 67, 68, 137, 146, 194, 196, 197, 198, 199, 202, 205, 206, 207, 209, 210, 211, 225, 228, 232, 233, 238], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 95, 98, 178, 193, 194, 196, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 225, 227, 229, 234, 236, 240], "adjac": 11, "pair": [11, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 92, 170, 176, 184, 196, 208, 213, 229], "write": [11, 22, 34, 58, 66, 67, 68, 84, 95, 130, 136, 194, 195, 199, 202, 204, 205, 207, 208, 209, 215, 225, 229], "them": [11, 58, 87, 130, 192, 193, 194, 199, 201, 203, 205, 206, 207, 209, 225, 234, 240], "binari": [11, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 108, 122, 193, 196, 205, 209, 216, 218], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 79, 87, 93, 95, 130, 136, 144, 151, 153, 162, 178, 182, 183, 185, 186, 191, 193, 196, 203, 205, 208, 209, 238, 240], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 93, 95, 130, 132, 136, 145, 146, 147, 148, 152, 185, 192, 193, 194, 197, 199, 200, 204, 213, 215, 218, 229, 231, 232, 235, 240, 241], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 63, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 137, 139, 140, 146, 149, 150, 151, 155, 157, 159, 160, 161, 163, 165, 177, 184, 185, 189, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 215, 225, 226, 229, 232, 236, 239, 240], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 128, 145, 146, 147, 185, 193, 194, 199, 209, 215, 216, 228, 229, 235], "purpos": [11, 15, 16, 18, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 95, 149, 151, 185, 202, 204, 206, 208, 209, 212, 215, 218, 225], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 95, 130, 135, 136, 137, 148, 167, 184, 185, 189, 204, 207, 208, 209, 222], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 129, 130, 132, 133, 145, 146, 147, 153, 184, 185, 186, 189, 191, 194, 199, 201, 204, 205, 206, 209], "check": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 45, 46, 48, 49, 50, 53, 54, 59, 60, 63, 69, 70, 71, 81, 84, 88, 130, 132, 136, 137, 166, 196, 200, 201, 209, 210, 216, 225, 228, 229, 233], "mode": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 45, 46, 48, 49, 50, 53, 54, 59, 60, 63, 69, 70, 71, 193, 201, 206, 207, 221, 227], "pass": [11, 17, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 95, 130, 131, 132, 133, 135, 138, 184, 194, 200, 201, 202, 205, 208, 209, 210, 221, 227, 228, 229, 233, 234], "callabl": [11, 22, 48, 67, 69, 166, 185, 189, 190, 193], "value_typ": [11, 17, 22, 28, 30, 32, 33, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 146, 147, 167, 178, 185, 189, 190, 196, 198, 205, 222, 234, 236], "conform": [11, 22, 28, 30, 33, 35, 36, 40, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 33, 69, 239], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 93, 119, 120, 122, 130, 132, 133, 136, 145, 146, 152, 153, 167, 179, 180, 181, 189, 190, 192, 200, 201, 206, 208, 209, 225, 226, 234], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "consecut": [12, 70, 71, 137, 153, 209, 234], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 57, 58, 76, 79, 87, 88, 93, 128, 129, 132, 134, 136, 140, 144, 148, 153, 161, 177, 182, 183, 185, 189, 190, 193, 194, 199, 200, 204, 205, 206, 209, 210, 222, 227, 228, 229, 235, 240], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 57, 58, 69, 72, 75, 76, 77, 83, 84, 87, 89, 92, 98, 122, 130, 133, 135, 136, 137, 138, 139, 140, 145, 148, 154, 156, 158, 166, 180, 185, 186, 189, 190, 191, 194, 195, 199, 200, 202, 204, 205, 206, 207, 209, 210, 214, 216, 222, 228, 232, 233, 236, 239, 240], "similar": [12, 13, 14, 20, 26, 27, 38, 45, 61, 62, 72, 76, 78, 82, 87, 95, 185, 193, 203, 204, 207, 229, 234, 240], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 50, 51, 57, 58, 60, 66, 71], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 95], "satisfi": [13, 14, 35, 45, 46, 47, 82, 146, 177, 226], "unari": [13, 14, 17, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 95, 139], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [14, 17, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 156, 163, 167, 177, 182, 183, 184, 201, 213, 218, 222, 236], "least": [14, 78, 81, 87, 136, 137, 201, 207, 228], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 95, 132, 135, 136, 137, 139, 144, 152, 154, 155, 156, 157, 162, 164, 170, 171, 177, 179, 180, 182, 183, 184, 185, 189, 190, 192, 193, 194, 195, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 222, 225, 227, 229, 231, 232, 234, 238, 239, 240], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 50, 51, 54, 55, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 95, 137, 152, 154, 155, 156, 157, 177, 184, 192, 199, 200, 201, 206, 207, 208, 209, 229, 234, 238], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 34, 36, 37, 39, 40, 41, 48, 53, 54, 55, 56, 61, 62, 66, 69, 70, 71, 89, 90, 135, 139, 145, 146, 174, 193, 207, 208, 209, 213, 238], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 152, 166, 176, 185, 194, 204, 207, 210, 212, 218, 223, 227, 229, 241], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 185, 201, 234], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 162, 194, 206], "preserv": [16, 49, 52, 78, 87, 182, 183], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "convert": [17, 28, 35, 36, 40, 46, 51, 52, 55, 56, 84, 93, 95, 130, 132, 135, 163, 166, 185, 189, 190, 201, 207, 232, 233], "everi": [17, 28, 30, 35, 36, 40, 46, 51, 52, 55, 56, 70, 76, 81, 95, 152, 154, 155, 156, 157, 178, 184, 185, 192, 193, 194, 196, 199, 203, 207, 208, 209, 210, 225, 226, 229, 235, 239, 240], "sizetyp": [18, 24, 31, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "If": [18, 24, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 127, 128, 129, 133, 136, 145, 146, 147, 153, 166, 177, 178, 183, 184, 185, 192, 193, 194, 195, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 225, 226, 227, 233, 234, 236, 237, 238, 240], "otherwis": [18, 21, 24, 35, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 93, 95, 129, 130, 132, 153, 177, 185, 193, 200, 201, 205, 209, 210, 218, 227], "count_iterator_api_default": 19, "count_view_api_default": 19, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 44, 61, 65, 69], "iteratortype2": [21, 26, 27, 38, 42, 44, 61, 65, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "fals": [21, 29, 35, 42, 74, 77, 81, 130, 132, 133, 134, 136, 166, 177, 181, 200, 207, 209], "via": [21, 26, 27, 37, 49, 52, 69, 85, 86, 95, 119, 120, 125, 128, 136, 145, 146, 147, 149, 150, 151, 153, 155, 157, 159, 185, 192, 194, 197, 199, 200, 201, 209, 210, 225, 226, 227, 228, 232, 234, 239], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 95, 98, 160, 161, 162, 177, 178, 181, 184, 186, 191, 192, 193, 194, 196, 201, 204, 216, 225, 226, 227, 229, 234, 238], "p": [21, 28, 30, 42, 46, 75, 77, 79, 163, 182, 183, 194, 202, 209, 210, 213, 229, 233], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 95, 122, 132, 199, 201, 204, 205, 208, 209, 231, 234], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 94, 149, 151, 153, 178, 194, 200, 202, 205, 206, 209, 210, 213, 215, 216, 221, 227, 228, 229, 236], "enabl": [21, 25, 28, 30, 42, 86, 88, 136, 150, 155, 157, 159, 168, 171, 194, 199, 200, 205, 206, 209, 211, 225, 229, 235, 237, 239], "you": [21, 25, 28, 30, 42, 75, 95, 130, 133, 136, 139, 140, 148, 181, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 213, 214, 216, 217, 223, 227, 238, 240], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 130, 163, 185, 194, 196, 199, 200, 201, 205, 207, 208, 228, 229], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 98, 100, 101, 102, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 132, 135, 139, 151, 152, 153, 163, 167, 168, 171, 172, 175, 179, 180, 181, 185, 187, 189, 190, 191, 192, 193, 194, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 214, 216, 217, 221, 225, 227, 228, 229, 232, 236, 239, 240], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 197, 198], "init_valu": [22, 34, 67, 68, 199], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 147, 152, 166, 205, 208, 234], "prefix": [22, 34, 67, 68, 90, 199, 200, 205, 206, 216], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 108, 122, 146, 155, 157, 159, 195, 196, 197, 198, 199, 205], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 137, 146, 147, 153, 162, 176, 185, 195, 196, 197, 198, 199, 201, 203, 204, 206, 208, 209, 229, 232, 233, 239, 240, 241], "scan": [22, 34, 67, 68, 72, 74, 147, 152, 153, 199, 204, 206, 209, 234], "combin": [22, 34, 81, 87, 103, 105, 106, 122, 136, 146, 147, 185, 196, 199, 202, 206, 209, 221, 227, 239], "th": [22, 34, 67, 68, 74, 184], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 95, 130, 136, 193, 194, 199, 200, 201, 206, 207, 209, 228], "22": [23, 221, 229], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 144, 148, 189, 190, 192, 194, 203, 204, 225, 238, 240], "newvalu": [24, 53, 56], "forward": [25, 33, 43, 44, 57, 58, 65, 74, 133, 193, 201, 206, 227, 234], "find_iterator_api_default": 25, "find_view_api_default": 25, "found": [25, 28, 37, 74, 78, 81, 84, 103, 106, 122, 192, 193, 194, 203, 204, 206, 207, 225, 229, 240], "cbegin": [25, 35, 58], "cend": [25, 35, 58], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 130, 132, 136, 139, 166, 168, 171, 177, 178, 185, 194, 199, 200, 201, 203, 205, 206, 209, 210, 225, 229, 230, 234, 235, 239, 240], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 130, 166, 185, 201, 205, 225, 229, 233], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 139], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 145, 146, 147, 205, 233], "incrementvalsfunctor": 30, "increment": [30, 37, 192, 201, 204, 209], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": 32, "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 33, 95, 130, 132, 134, 146, 147, 191, 202, 204, 206, 209, 218, 236, 239], "being": [32, 33, 81, 87, 89, 95, 122, 140, 141, 142, 143, 153, 164, 184, 192, 199, 204, 207, 209, 225, 241], "size": [33, 49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 128, 129, 136, 141, 142, 143, 149, 151, 153, 179, 180, 181, 185, 189, 190, 199, 201, 205, 206, 207, 209, 233, 234, 237, 239], "ex": [33, 43, 44, 57, 65, 87, 93, 130, 200], "new": [33, 43, 44, 49, 50, 51, 52, 57, 58, 59, 60, 65, 70, 74, 75, 79, 81, 87, 89, 95, 100, 101, 102, 105, 107, 129, 130, 132, 133, 136, 140, 148, 162, 177, 181, 182, 183, 184, 187, 192, 193, 196, 199, 201, 202, 203, 204, 205, 209, 210, 214, 217, 222, 223, 225, 226, 227, 228, 235, 239, 240], "teamhandletyp": [33, 43, 44, 57, 58, 65], "teamhandl": [33, 43, 44, 57, 58, 65, 72, 150, 154, 155, 156, 157, 158, 159], "region": [33, 43, 44, 57, 58, 65, 77, 85, 144, 145, 146, 147, 160, 161, 199, 200, 201, 203, 204, 209, 240], "when": [33, 43, 44, 57, 58, 65, 74, 78, 81, 82, 86, 87, 92, 95, 130, 135, 136, 146, 150, 153, 160, 161, 179, 180, 181, 191, 192, 193, 194, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 214, 216, 217, 221, 222, 225, 229, 232, 233, 235, 236, 239, 240, 241], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "associ": [33, 43, 44, 48, 57, 58, 65, 69, 72, 76, 95, 108, 122, 130, 134, 136, 148, 152, 162, 184, 185, 196, 199, 204, 205, 209, 234, 236, 238], "11": [34, 41, 48, 69, 78, 193, 194, 205, 220, 221, 227, 229], "12": [34, 48, 69, 72, 178, 194, 210, 211, 220, 221, 225, 234], "inclus": [34, 68, 147, 205, 208, 225, 228], "op": [34, 72, 79, 81, 84, 99, 122, 178, 192, 209], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 137, 185, 192, 209, 234], "don": [35, 72, 75, 87, 177, 185, 192, 193, 205, 221, 227], "empti": [35, 39, 40, 41, 75, 82, 213, 239], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 95, 132, 136, 152, 185, 199, 208, 209, 210], "re": [35, 39, 40, 41, 87, 95, 130, 136, 148, 167, 194, 203, 205, 209, 239, 240], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 229], "less": [36, 38, 39, 40, 41, 63, 64, 87, 137, 162, 195, 207, 209, 221, 225, 233, 234], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 95, 130, 132, 136, 137, 149, 151, 153, 184, 185, 192, 194, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 221, 225, 233, 238], "your": [36, 40, 75, 130, 193, 194, 195, 200, 205, 207, 209, 210, 212, 214, 234, 240], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 108, 110, 111, 112, 185, 192, 194, 196, 199, 204, 206, 207, 209, 239], "largest": [37, 39, 41, 79, 82, 137, 170, 206], "comparison": [37, 54, 72, 139, 192, 195], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 140, 176, 177, 178, 184, 208], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 87, 92, 95, 146, 148, 177, 178, 185, 194, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 213, 215, 216, 225, 231, 234, 236, 237, 238], "sever": [39, 40, 41, 87, 89, 194, 204, 205, 215, 226, 228, 229, 235], "custom": [39, 40, 41, 76, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 146, 185, 199, 205, 209, 220, 225, 226, 233, 242], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 193, 201, 205, 206, 225, 241], "smallest": [40, 41, 137, 170], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 94, 95, 139, 148, 192, 194, 195, 196, 199, 201, 202, 203, 206, 208, 209, 210, 215, 216, 229, 232, 233, 234, 235, 240], "cpp": [42, 132, 194, 213], "mismatchfunctor": 42, "mismatch_index": 42, "d_first": [43, 58, 66], "target": [43, 44, 49, 50, 58, 72, 75, 95, 130, 145, 194, 201, 202, 204, 206, 215, 216, 229], "outputiter": [43, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 178, 198], "move_iterator_api_default": 43, "move_view_api_default": 43, "distanc": [43, 44, 58, 65], "d_last": 44, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 152, 154, 156, 158, 162, 205, 218, 227], "contain": [46, 49, 52, 74, 75, 81, 95, 132, 135, 145, 146, 147, 152, 169, 177, 179, 180, 181, 182, 183, 185, 186, 193, 194, 196, 199, 200, 201, 203, 204, 207, 215, 225, 229, 234, 238, 240, 241], "locat": [47, 75, 76, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 136, 185, 194, 199, 204, 206, 209, 210, 216, 229, 232, 237], "alreadi": [47, 76, 78, 81, 85, 87, 178, 185, 193, 202, 205, 227, 231], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 146, 147, 152, 153, 196, 197, 198, 199, 204, 206, 213, 220, 236, 242], "account": [48, 68, 153, 214, 225], "join": [48, 69, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 146, 147, 195, 196, 198, 199, 204, 213, 214, 225, 229, 234], "dure": [48, 86, 122, 151, 153, 184, 192, 199, 200, 201, 206, 209, 210, 225, 226, 228, 229, 231, 234, 238], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 95, 128, 129, 130, 132, 133, 151, 173, 185, 193, 206, 207, 209, 210, 240], "commut": [48, 69, 122], "shift": [49, 52, 63, 64, 103, 106], "remain": [49, 52, 87, 129, 204, 225], "physic": [49, 52, 74, 153, 199, 203, 206, 209, 240], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "ther": [50, 57], "omit": [50, 51, 75, 76, 127, 128, 129, 185], "those": [50, 51, 74, 75, 78, 93, 95, 146, 163, 185, 193, 194, 199, 201, 208, 209, 227, 231, 234], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 100, 101, 102, 103, 106], "new_valu": [53, 54, 55, 56, 100, 101, 102, 107], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 136], "explanatori": [53, 54, 164], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 196, 198, 209], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 95, 187, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 218, 233, 234, 237, 238, 240], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 144, 152, 194, 199, 203, 210, 217, 229, 231, 240], "about": [59, 60, 85, 87, 88, 93, 130, 136, 139, 148, 149, 151, 162, 185, 193, 203, 204, 205, 206, 207, 209, 210, 213, 225, 237, 240], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 184, 208, 239], "toward": [63, 64, 202, 204], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 95, 100, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133, 146, 185, 192, 195, 196, 199, 204, 205, 206, 207, 209, 231, 233, 234, 237], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 128, 130, 133, 134, 135, 136, 163, 193, 205, 209, 210, 225, 229], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 185, 196, 199, 203, 208, 209, 218, 228, 233, 240], "along": [69, 87, 208, 232], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 185], "group": [70, 199, 204, 206, 225, 229], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 92, 132, 137, 139, 140, 163, 166, 170, 192, 193, 194, 200, 202, 204, 209, 210, 225, 229, 234, 237, 238, 241, 242], "categori": [72, 187, 192, 194, 202, 204, 225, 228, 229], "descript": [72, 73, 83, 85, 88, 90, 98, 108, 122, 123, 130, 132, 192, 194, 200, 216, 227, 229], "rand": 72, "plu": [72, 123, 125, 128, 192, 199, 205, 233], "random_xorshift1024_pool": 72, "1024": [72, 77, 152, 197, 198, 199], "random_xorshift1024": 72, "sampl": [72, 197, 198], "fit": [72, 95, 199, 206, 218], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 130, 145, 146, 147, 162, 172, 194, 196, 204, 205, 206, 239], "dualview": [72, 73, 82, 87, 88, 187, 242], "mirror": [72, 73, 75, 78, 177], "dynamicview": [72, 73, 187], "dynam": [72, 76, 77, 85, 88, 95, 132, 149, 151, 153, 182, 183, 185, 204, 209, 210, 239], "dynrankview": [72, 73, 178, 187], "determin": [72, 73, 76, 88, 149, 153, 156, 171, 184, 185, 189, 190, 194, 199, 200, 204, 205, 206, 209, 210, 216, 225, 226, 228, 233, 234, 239], "runtim": [72, 73, 76, 78, 79, 85, 130, 132, 149, 151, 153, 171, 185, 196, 199, 200, 201, 206, 209, 216, 225, 238, 240], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 95, 130, 132, 133, 136, 138, 139, 189, 190, 193, 194, 195, 199, 200, 201, 205, 207, 209, 210, 216, 217, 228, 229, 234, 236, 242], "error": [72, 139, 164, 185, 201, 204, 208, 209, 210, 217, 221, 227, 229, 238], "record": [72, 87, 225], "code": [72, 77, 87, 88, 90, 95, 130, 136, 138, 152, 160, 161, 166, 178, 185, 192, 193, 194, 195, 197, 199, 204, 205, 206, 208, 209, 210, 215, 216, 217, 218, 220, 221, 225, 226, 228, 229, 230, 233, 234, 238, 239, 241], "offsetview": [72, 73, 87, 187, 213], "indici": [72, 118, 192], "scatterview": [72, 73, 187, 230, 242], "transpart": 72, "replic": [72, 192, 201, 229], "strategi": [72, 87, 95, 132, 192, 200, 240], "scatter": [72, 79, 192], "staticcrsgraph": [72, 73, 209], "resiz": [72, 75, 77, 79, 82, 98, 182, 201], "graph": [72, 80, 83, 95, 242], "semant": [72, 76, 78, 82, 95, 185, 193, 199, 201, 205, 209, 215, 234], "unorderedmap": [72, 73, 209], "map": [72, 73, 76, 80, 81, 185, 199, 200, 201, 206, 209, 231, 233, 234], "optim": [72, 88, 151, 192, 194, 199, 201, 202, 204, 206, 209, 210, 216, 234, 237, 240], "insert": [72, 206, 209], "interfac": [72, 82, 87, 94, 95, 150, 155, 157, 159, 187, 193, 199, 201, 202, 204, 208, 209, 232, 238, 240], "abort": [72, 97, 166], "util": [72, 83, 130, 163, 194, 199, 204, 229, 232, 237], "caus": [72, 139, 164, 166, 193, 201, 204, 209, 217, 218], "abnorm": [72, 164, 166], "program": [72, 82, 93, 95, 98, 134, 135, 136, 148, 164, 166, 200, 201, 202, 203, 207, 208, 209, 211, 216, 229, 231, 234, 239, 240, 241], "termin": [72, 133, 134, 135, 164, 166], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 149, 165, 179, 180, 181, 182, 183, 184, 186, 199, 201, 232, 233], "atomic_exchang": [72, 99, 192], "exchang": [72, 100, 101, 102, 192, 230], "old": [72, 75, 79, 81, 133, 183, 192, 205, 209], "atomic_compare_exchang": [72, 99, 192], "match": [72, 75, 76, 78, 82, 98, 145, 146, 147, 149, 163, 177, 179, 180, 185, 192, 194, 199, 209, 222], "atomic_compare_exchange_strong": [72, 99, 192], "atomic_load": [72, 99, 192], "load": [72, 76, 87, 95, 132, 185, 192, 199, 200, 205, 206, 207, 227, 229], "atomic_": [72, 99, 192], "anyth": [72, 95, 169, 192, 193], "atomic_fetch_": [72, 99, 192], "variou": [72, 75, 83, 192, 194, 228, 229], "_fetch": [72, 99, 192], "atomic_stor": [72, 99, 192], "band": [72, 108, 122, 196, 199], "bor": [72, 108, 122, 196, 199], "Or": [72, 108, 239], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 93, 130, 135, 136, 146, 147, 163, 178, 185, 194, 200, 201, 203, 209, 217, 220, 232, 240], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 92, 122, 130, 133, 139, 144, 145, 146, 147, 149, 151, 153, 163, 178, 185, 190, 192, 193, 194, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 225, 227, 229, 230, 233, 234, 235, 238], "create_mirror": [72, 98, 209], "relat": [72, 83, 170, 194, 199, 210, 225, 234], "create_mirror_view": [72, 177, 178, 201, 209, 213, 236], "cudaspac": [72, 87, 88, 94, 185, 201, 209, 213, 236], "primari": [72, 84, 95, 193, 194, 200, 221, 225, 227, 228, 229], "cudauvmspac": [72, 87, 88, 94, 201, 203, 209, 210, 213, 240], "unifi": [72, 87, 136, 216], "page": [72, 95, 122, 130, 136, 148, 194, 209, 211, 212, 216, 217, 223], "migrat": [72, 136, 217, 235], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 93, 95, 98, 126, 127, 128, 129, 130, 136, 153, 162, 177, 179, 180, 181, 183, 185, 186, 192, 194, 199, 202, 203, 204, 206, 207, 209, 210, 234, 235, 236, 237, 240], "cudahostpinnedspac": [72, 94, 185, 209], "memrori": 72, "pin": [72, 136, 194], "gpu": [72, 76, 88, 92, 132, 136, 177, 185, 194, 199, 200, 201, 202, 204, 206, 207, 209, 210, 213, 216, 217, 225, 229, 234, 235, 237], "executionpolici": [72, 96, 145, 146, 147], "concept": [72, 83, 95, 96, 108, 122, 130, 136, 146, 148, 152, 179, 180, 181, 193, 195, 198, 199, 202, 204, 206, 211, 242], "hpx": [72, 85, 87, 88, 94, 149, 151, 200, 213, 215, 216], "system": [72, 87, 95, 130, 136, 171, 193, 199, 200, 204, 206, 209, 210, 211, 225, 228, 229, 238], "mechan": [72, 87, 148, 160, 199, 201, 202, 206, 209], "initargu": [72, 132, 133, 135, 213], "programmat": [72, 131, 132, 135], "how": [72, 76, 85, 122, 130, 136, 148, 149, 185, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 206, 207, 210, 214, 222, 234], "deprec": [72, 77, 87, 88, 131, 132, 135, 215, 216, 222, 225, 235], "initializationset": [72, 131, 133, 135, 168, 171, 172, 200, 213], "is_array_layout": [72, 87, 213], "trait": [72, 75, 76, 77, 83, 84, 89, 93, 130, 138, 139, 151, 176, 185, 199, 222, 237], "detect": [72, 83, 96, 140, 179, 180, 181, 210], "model": [72, 93, 95, 96, 154, 155, 156, 157, 158, 159, 179, 180, 181, 194, 201, 202, 205, 207, 209, 211, 216, 220, 234], "layout": [72, 75, 76, 77, 78, 79, 96, 98, 177, 179, 180, 181, 182, 183, 201, 202, 204, 208], "is_execution_polici": [72, 213], "is_execution_spac": [72, 87, 130, 213], "is_memory_spac": [72, 87, 136, 213], "memoryspac": [72, 76, 93, 96, 127, 128, 129, 130, 136, 185, 209, 237], "is_memory_trait": [72, 213], "memorytrait": [72, 75, 76, 87, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 185, 192, 199, 209, 237], "is_reduc": [72, 213], "is_spac": [72, 130, 213], "fortran": [72, 76, 98, 179, 185, 194, 208, 209, 221, 230, 242], "arbitrari": [72, 76, 85, 98, 149, 151, 181, 185, 195, 198, 199, 206, 208, 209], "stride": [72, 75, 76, 77, 79, 98, 181, 201, 208, 232], "kokkos_fre": [72, 126, 128, 129, 201, 235], "delloc": 72, "previous": [72, 100, 102, 126, 127, 129, 136, 185, 194, 195, 199, 206, 241], "kokkos_malloc": [72, 126, 127, 129, 201, 203, 235, 240], "kokkos_realloc": [72, 126, 127, 128, 201], "expand": [72, 95, 126, 205], "block": [72, 95, 126, 128, 144, 162, 194, 199, 201, 202, 208, 225, 236], "land": [72, 108, 109, 110, 112, 122, 196, 199, 229], "built": [72, 76, 83, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 185, 194, 195, 198, 199, 200, 209, 229], "lor": [72, 108, 122, 196, 199], "maxloc": [72, 108, 119, 122, 125, 196, 199], "index": [72, 74, 76, 77, 78, 81, 82, 108, 114, 116, 117, 118, 119, 123, 125, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 179, 180, 184, 185, 191, 192, 196, 199, 201, 203, 205, 208, 240], "u": [72, 163, 189, 191, 194, 218, 222], "mdrangepolici": [72, 76, 85, 87, 145, 146, 185, 213, 222, 230, 242], "multidimension": [72, 76, 83, 85, 98, 149, 179, 180, 181, 196, 199, 201, 208, 220, 233], "min": [72, 103, 106, 108, 114, 116, 117, 118, 119, 120, 122, 123, 125, 140, 146, 170, 192, 196, 199, 213, 241], "minloc": [72, 108, 119, 122, 196, 199], "minmax": [72, 108, 120, 122, 170, 195, 196, 199, 213], "minmaxloc": [72, 108, 119, 122, 196, 199], "openmptarget": [72, 87, 88, 94, 194, 200], "targetoffload": 72, "analogu": 72, "bulk": [72, 206], "item": [72, 85, 130, 147, 149, 151, 153, 199, 204, 225, 234, 238], "parallelfortag": [72, 90, 153], "tag": [72, 76, 85, 87, 141, 142, 143, 146, 149, 151, 153, 179, 180, 181, 185, 198, 199, 207, 225, 227, 230, 234], "team_siz": [72, 152, 153, 199], "contribut": [72, 79, 146, 147, 192, 196, 199, 215, 226, 231, 236], "parallelreducetag": [72, 90, 153], "parallel_scan": [72, 90, 143, 144, 159, 199, 205, 206, 234, 235], "simpl": [72, 122, 130, 175, 192, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 232, 233, 234, 238], "pre": [72, 147, 162, 189, 190, 194, 225, 231], "postfix": [72, 206], "depend": [72, 88, 95, 136, 153, 154, 158, 166, 192, 193, 194, 195, 199, 204, 205, 206, 207, 210, 233, 235, 236, 240], "parallelscantag": [72, 90], "partition_spac": [72, 94], "split": [72, 85, 150, 154, 155, 156, 157, 158, 159, 162, 199, 205, 239], "exist": [72, 75, 81, 84, 87, 88, 144, 146, 152, 162, 178, 182, 183, 193, 194, 204, 206, 207, 208, 209, 225, 226, 229, 234], "multipl": [72, 87, 88, 95, 108, 146, 192, 194, 199, 201, 204, 205, 207, 209, 210, 215, 216, 225, 228, 229, 234, 238], "perteam": [72, 152, 153, 154, 155, 156, 157, 159, 196, 199], "singl": [72, 95, 146, 150, 151, 154, 155, 156, 157, 159, 189, 190, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 233], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 135, 136, 160, 175, 179, 180, 181, 182, 183, 185, 191, 195, 199, 201, 204, 205, 207, 208], "indic": [72, 76, 78, 79, 80, 81, 87, 108, 119, 123, 130, 141, 142, 143, 185, 192, 196, 199, 206, 208, 209, 233, 239], "per": [72, 95, 153, 196, 199, 201, 205, 206, 208, 209, 231, 234, 237], "perthread": [72, 153, 159, 199], "prod": [72, 108, 122, 196, 199], "rangepolici": [72, 85, 87, 130, 145, 146, 147, 148, 162, 199, 201, 205, 209, 236, 238], "1d": [72, 76, 145, 146, 147, 151, 153, 185, 201, 209, 232], "realloc": [72, 75, 79, 98, 129, 183, 209], "maintain": [72, 87, 193, 214, 228], "reducerconcept": [72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 198], "cpu": [72, 88, 130, 136, 177, 192, 194, 199, 200, 206, 207, 213, 216, 217, 221, 227, 229], "aggreg": [72, 86, 199], "spaceaccess": [72, 93, 130, 136, 177, 178, 209, 213], "facil": [72, 89, 98, 137, 140, 177, 187, 225, 228], "queri": [72, 75, 132, 152, 153, 200, 209, 213], "rule": [72, 77, 193], "multi": [72, 76, 145, 146, 185, 196, 202, 210], "dimension": [72, 76, 145, 146, 185, 208, 209], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 95, 98, 133, 135, 146, 149, 174, 179, 180, 181, 185, 192, 196, 197, 198, 199, 201, 208, 213, 220, 229, 230, 231, 234], "crate": [72, 229], "slice": [72, 98, 176, 237, 242], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 158], "teamvectorrang": [72, 85, 158, 159], "threadvectormdrang": [72, 85], "timer": [72, 97, 144], "basic": [72, 76, 87, 139, 148, 185, 194, 201, 202, 210, 211, 235], "like": [72, 75, 76, 87, 95, 98, 130, 136, 145, 148, 178, 185, 192, 193, 194, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 225, 231, 238, 240], "act": [72, 87, 202, 208], "comment": [73, 194], "offset": [73, 78, 199, 206, 209], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 201, 204, 205, 206, 209], "fix": [74, 81, 86, 193, 201, 209, 225, 226, 227, 237], "run": [74, 88, 95, 135, 136, 145, 192, 193, 194, 196, 199, 201, 203, 204, 205, 206, 209, 210, 216, 225, 227, 229, 235, 236, 240], "time": [74, 75, 76, 85, 87, 88, 93, 95, 130, 149, 151, 153, 175, 185, 189, 190, 192, 193, 194, 199, 204, 205, 206, 207, 208, 209, 210, 216, 225, 226, 227, 229, 233, 235, 238], "paramet": [74, 75, 76, 77, 81, 85, 95, 98, 100, 101, 102, 103, 122, 127, 128, 129, 130, 132, 133, 136, 148, 152, 154, 156, 158, 162, 186, 194, 196, 200, 205, 207, 209, 210, 213, 221, 222, 229, 233, 236, 238], "constant": [74, 78, 83, 89, 130, 137, 139, 140, 165, 185, 189, 190, 205], "bit_scan_revers": 74, "1u": [74, 208], "mask": [74, 190, 191, 200, 207], "direct": [74, 139, 177, 199, 200, 207, 208, 209, 217, 218, 229], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 95, 149, 151, 162, 185], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 185, 193, 201, 209, 216], "wa": [74, 75, 81, 88, 95, 129, 131, 132, 133, 160, 173, 177, 185, 189, 190, 194, 196, 199, 200, 201, 209, 210, 217, 225, 227, 233, 235], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 133, 135, 145, 152, 153, 154, 156, 158, 167, 177, 179, 180, 181, 182, 183, 197, 198, 199, 205, 208, 209, 213, 217, 222], "arg_siz": 74, "reset": [74, 75, 79, 175, 194], "clear": [74, 81, 82, 87, 193], "test": [74, 88, 139, 144, 194, 201, 205, 209, 210, 215, 216, 221, 225, 226, 227], "max_hint": 74, "happen": [74, 76, 77, 95, 100, 101, 185, 192, 199, 201, 203, 209, 225, 227, 229, 240], "occur": [74, 92, 178, 200, 204, 210, 225, 232, 233, 235], "smaller": [74, 76, 77, 170, 184, 185, 201, 229], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 185], "rh": [74, 76, 77, 119, 120, 125, 185, 189, 190, 197, 198, 222, 236], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 146, 205], "src": [74, 75, 79, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 136, 146, 167, 177, 178, 194, 197, 198, 205, 233], "kokkos_dualview": [75, 213], "refer": [75, 76, 77, 79, 82, 87, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 138, 139, 140, 153, 178, 184, 185, 189, 190, 191, 193, 194, 196, 198, 199, 200, 201, 202, 204, 205, 208, 210, 215, 217, 229, 238], "capabl": [75, 83, 136, 194, 199, 200, 201, 206, 207, 222, 226], "well": [75, 76, 87, 93, 95, 122, 144, 149, 151, 152, 161, 166, 185, 193, 194, 196, 199, 201, 202, 204, 205, 206, 208, 209, 225, 227, 228, 229, 234], "flag": [75, 130, 135, 185, 189, 191, 194, 200, 205, 210, 214, 216, 221, 227, 229], "respons": [75, 200, 201, 204, 207, 226, 228], "manual": [75, 194, 210, 227, 233], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 194, 198, 204, 205, 207, 209, 213, 233, 240], "synchron": [75, 82, 136, 150, 162, 178, 199, 204, 206, 236], "conveni": [75, 79, 84, 130, 160, 201, 205, 208], "capac": [75, 81, 199, 204], "appropri": [75, 80, 95, 122, 194, 199, 204, 205, 206, 208, 209, 210, 225, 226, 229], "underli": [75, 76, 77, 78, 82, 95, 160, 162, 185, 192, 201, 202, 204, 206, 209, 237], "four": [75, 209, 216, 225, 227], "separ": [75, 87, 192, 194, 200, 205, 209, 225, 227, 237, 238], "intend": [75, 84, 87, 89, 163, 194, 199, 203, 209, 240], "pleas": [75, 130, 136, 139, 140, 148, 193, 194, 209, 211, 212, 229], "document": [75, 87, 92, 130, 136, 145, 146, 148, 189, 190, 193, 194, 203, 218, 225, 226, 233, 234, 240], "suffic": 75, "most": [75, 76, 87, 95, 130, 135, 136, 137, 139, 148, 177, 181, 185, 194, 195, 196, 199, 201, 203, 204, 205, 206, 209, 210, 211, 214, 221, 227, 229, 231, 233, 236, 240], "m": [75, 87, 150, 151, 155, 157, 159, 185, 191, 196, 201, 208, 229, 236], "d_view": [75, 178], "execution_spac": [75, 76, 81, 87, 93, 130, 136, 151, 152, 153, 162, 178, 185, 199, 201, 205, 209, 234], "host_mirror_spac": [75, 76, 177, 185, 213], "h_view": [75, 178], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 185, 222], "t_dev": 75, "hostmirror": [75, 76, 77, 177, 185, 201, 236], "t_host": 75, "const_data_typ": [75, 76, 77, 185], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 130, 178, 179, 180, 181, 182, 183, 185, 209, 222], "randomaccess": [75, 76, 185, 209], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 198, 232], "t_dev_um": 75, "unmanag": [75, 76, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 181, 185, 186, 199, 201, 232, 242], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 149, 154, 156, 158, 165, 176, 179, 180, 181, 182, 183, 184, 185, 208, 209, 222], "kokkos_impl_ctor_default_arg": [75, 182, 183], "n1": [75, 76, 79, 149, 154, 156, 158, 162, 165, 176, 179, 180, 181, 182, 183, 184, 185, 208, 209, 222], "n2": [75, 76, 79, 149, 154, 156, 158, 162, 176, 179, 180, 181, 182, 183, 184, 185, 209], "n3": [75, 76, 79, 154, 156, 158, 162, 179, 180, 181, 182, 183, 185, 209], "n4": [75, 76, 79, 179, 180, 181, 182, 183, 185], "n5": [75, 76, 79, 179, 180, 181, 182, 183, 185], "n6": [75, 76, 79, 179, 180, 181, 182, 183, 185], "n7": [75, 76, 79, 179, 180, 181, 182, 183, 185], "analog": [75, 95, 173, 178], "benefit": [75, 221], "nonzero": 75, "impl": [75, 79, 87, 150, 153, 177, 182, 183, 193, 213], "viewctorprop": [75, 79, 177, 182, 183], "arg_prop": [75, 79, 177, 182, 183], "enable_if": 75, "has_point": 75, "wrap": [75, 76, 185, 186, 194, 201, 209], "up": [75, 87, 95, 134, 137, 179, 180, 181, 185, 193, 194, 199, 200, 205, 206, 209, 229, 239], "viewctor": 75, "thing": [75, 87, 130, 187, 193, 194, 201, 203, 204, 206, 207, 209, 240], "ctor": 75, "ss": 75, "ls": [75, 152, 239], "ds": 75, "ms": [75, 130, 136], "shallow": [75, 201, 205, 209], "sd": 75, "s1": [75, 130, 136, 181], "s2": [75, 130, 136, 181], "s3": [75, 181], "arg0": 75, "arg": [75, 76, 77, 84, 133, 149, 151, 153, 162, 173, 176, 184, 185, 186, 200], "d_view_": 75, "h_view_": 75, "caller": [75, 130], "sure": [75, 194, 199, 205, 209, 210], "ensur": [75, 86, 133, 134, 135, 173, 193, 194, 200, 204, 207, 209, 214, 225], "mark": [75, 205, 209, 225, 240], "if_c": 75, "is_sam": [75, 84, 93, 177, 178, 201, 208, 209], "memory_spac": [75, 76, 81, 87, 93, 127, 128, 129, 130, 136, 177, 178, 185, 186, 201, 209, 222, 235], "get_device_sid": 75, "specif": [75, 85, 87, 92, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 136, 144, 151, 152, 153, 162, 178, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 209, 210, 211, 212, 218, 225, 228, 229, 231], "afraid": 75, "express": [75, 83, 87, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 137, 166, 191, 194, 206, 207, 208, 210, 218, 235], "That": [75, 76, 87, 144, 185, 199, 200, 201, 205, 208, 209, 210], "tell": [75, 95, 199, 204, 205, 208, 210, 237, 240], "what": [75, 88, 122, 130, 132, 136, 187, 189, 190, 193, 201, 203, 204, 205, 207, 222, 227, 234, 238], "els": [75, 95, 146, 147, 166, 209, 212, 234, 239], "suppos": [75, 84, 207, 208, 234], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 209], "dual": [75, 82, 216], "want": [75, 84, 192, 200, 203, 204, 205, 207, 234, 240], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 178], "non_const_data_typ": [75, 76, 77, 185], "need_sync": 75, "been": [75, 87, 88, 92, 194, 199, 200, 201, 202, 204, 207, 208, 209, 229, 231, 238, 239], "In": [75, 76, 86, 87, 88, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 137, 146, 148, 150, 155, 157, 159, 166, 178, 185, 187, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 225, 228, 229, 231, 232, 233, 234, 236, 238, 240], "discard": [75, 79], "modif": [75, 202, 218, 236], "doesn": [75, 144, 146, 177, 194, 199, 205, 210], "know": [75, 193, 194, 195, 201, 203, 208, 210, 240], "whether": [75, 76, 77, 82, 87, 88, 100, 130, 132, 136, 148, 153, 185, 196, 203, 204, 205, 208, 209, 216, 218, 222, 225, 226, 228, 234, 239, 240], "inlin": [75, 77, 84, 151, 153, 199, 201, 205, 213], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 185, 194, 199, 204, 216, 235], "referenc": [75, 76, 77, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 184, 185, 201, 209, 225], "address": [75, 76, 79, 100, 101, 102, 103, 104, 105, 106, 107, 138, 185, 189, 193, 194, 199, 202, 204, 206, 214, 217, 225, 229], "null": [75, 76, 77, 79, 82, 127, 129, 133, 135, 185], "pointer": [75, 76, 77, 79, 81, 82, 95, 127, 128, 129, 130, 133, 135, 152, 177, 181, 182, 183, 185, 186, 192, 201, 205, 207, 213, 234, 238], "span": [75, 76, 77, 82, 185], "span_is_contigu": [75, 76, 77, 178, 185], "contigu": [75, 76, 77, 85, 178, 179, 180, 185, 189, 208, 209, 234, 237], "ityp": [75, 76, 77, 155, 157, 159, 184, 185], "stride_": 75, "is_integr": [75, 155, 157, 159, 184], "r": [75, 178, 184, 185, 207, 211, 218, 222, 233, 236], "extent_int": [75, 76, 77, 185], "integr": [75, 76, 77, 88, 137, 140, 184, 185, 225, 227, 229], "kokkos_dynrankview": [76, 213], "potenti": [76, 77, 81, 88, 95, 136, 145, 146, 150, 152, 178, 185, 192, 198, 199, 202, 204, 205, 210, 238], "compil": [76, 85, 87, 88, 93, 130, 137, 139, 149, 151, 178, 185, 189, 190, 192, 193, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 214, 216, 217, 220, 225, 228, 233, 234, 237, 238, 240, 241], "Its": [76, 185, 201], "shared_ptr": [76, 185], "upper": [76, 200, 209], "bound": [76, 77, 81, 85, 88, 149, 151, 199, 201, 209, 216, 229, 232], "layouttyp": [76, 77, 185], "fundament": [76, 84, 85, 95, 130, 136, 148, 185, 189, 190, 191, 202, 204, 206, 225, 234], "mandatori": [76, 201], "scalartyp": [76, 185, 197, 198], "storag": [76, 80, 108, 127, 128, 129, 153, 181, 185, 204, 206, 207, 237], "come": [76, 87, 185, 192, 194, 202, 203, 205, 206, 208, 209, 210, 225, 233, 235, 238, 240], "some": [76, 95, 128, 130, 137, 138, 144, 152, 153, 154, 155, 156, 157, 162, 174, 181, 185, 194, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 217, 222, 225, 229, 231, 233, 234, 236, 238, 240], "ones": [76, 131, 185, 193, 199, 204, 238], "right": [76, 137, 149, 185, 200, 204, 205, 207, 208, 209, 218, 223, 233], "left": [76, 95, 137, 149, 185, 200, 208, 209, 222, 233], "laid": [76, 185, 201], "out": [76, 86, 134, 179, 180, 181, 185, 193, 194, 201, 205, 207, 209, 218, 227, 233, 240], "control": [76, 127, 128, 129, 135, 151, 152, 160, 161, 185, 194, 199, 204, 205, 206, 207, 209, 210, 216, 229, 237], "finer": 76, "grain": [76, 209], "manner": [76, 92, 185], "trigger": [76, 136, 185], "textur": [76, 185, 209], "fetch": [76, 185, 209, 229], "restrict": [76, 77, 150, 182, 183, 184, 185, 201, 204, 205, 206, 209, 210, 229], "There": [76, 81, 87, 95, 130, 135, 136, 148, 162, 185, 187, 192, 193, 194, 201, 206, 207, 210, 225, 227, 233, 234, 236], "alias": [76, 81, 152, 185, 193, 200, 209], "scope": [76, 86, 134, 135, 160, 161, 185, 193, 205, 206, 209, 217, 238, 240], "enforc": [76, 185, 199, 207, 210], "specifi": [76, 77, 79, 81, 82, 85, 87, 88, 93, 122, 127, 128, 130, 131, 145, 146, 149, 151, 152, 153, 173, 176, 177, 184, 185, 194, 198, 199, 200, 201, 206, 210, 228, 229, 237, 240], "variabl": [76, 77, 79, 84, 103, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 145, 146, 151, 152, 179, 180, 193, 194, 195, 196, 199, 205, 210, 217, 222, 229, 236], "rank_dynam": [76, 185], "reference_type_is_lvalue_refer": [76, 77, 185], "lvalu": [76, 77, 185, 209], "scalar_array_typ": [76, 185], "properli": [76, 92, 160, 161, 185, 203, 229, 240], "specialis": [76, 185, 209], "sacado": [76, 185], "fad": [76, 185], "const_scalar_array_typ": [76, 185], "non_const_scalar_array_typ": [76, 185], "strip": [76, 185], "const_value_typ": [76, 185], "non_const_value_typ": [76, 146, 178, 185], "certain": [76, 87, 88, 130, 136, 148, 151, 178, 185, 192, 194, 201, 206, 210, 218, 240], "compound": [76, 185], "memory_trait": [76, 185], "non_const_typ": [76, 77, 185], "const_typ": [76, 77, 185], "handl": [76, 77, 81, 95, 145, 146, 147, 150, 152, 155, 157, 159, 185, 199, 201, 203, 205, 207, 209, 234, 240], "reference_typ": [76, 77, 185], "pointer_typ": [76, 77, 185], "size_typ": [76, 81, 82, 87, 185, 205, 209, 234], "partial": [76, 87, 146, 147, 185, 192, 205], "No": [76, 77, 169, 185], "made": [76, 77, 87, 185, 201, 203, 204, 210, 225, 240], "nullptr": [76, 133], "dt": [76, 79, 185], "prop": [76, 185], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 185], "is_regular": [76, 185], "standard": [76, 77, 81, 83, 87, 89, 92, 137, 139, 140, 166, 170, 185, 193, 194, 202, 205, 207, 212, 216, 225, 228, 240], "profil": [76, 77, 128, 144, 145, 146, 147, 185, 215, 242], "allocproperti": [76, 185], "view_alloc": [76, 79, 98, 177, 182, 183, 185, 209], "ptr": [76, 87, 127, 129, 136, 181, 185, 209], "required_allocation_s": [76, 185], "nr": [76, 185], "wrapper": [76, 153, 160, 161, 185, 194, 210], "TO": [76, 218], "BE": [76, 218], "scratchspac": [76, 185, 199], "sizeof": [76, 162, 176, 184, 185, 199, 201, 203, 209, 235, 240], "typic": [76, 136, 185, 192, 194, 199, 200, 201, 203, 205, 209, 229, 231, 234, 240], "team_handl": [76, 150, 152, 155, 157, 159, 185], "i0": [76, 77, 145, 146, 154, 156, 158, 184, 185, 222], "i1": [76, 154, 156, 158, 184, 185, 222], "i2": [76, 154, 156, 158, 184, 185], "i3": [76, 154, 156, 158, 185], "i4": [76, 185], "i5": [76, 185], "i6": [76, 185], "beyond": [76, 87, 152, 185, 194, 204, 210, 233], "kokkos_debug": [76, 185, 194], "dim": [76, 77, 79, 185, 232], "architectur": [76, 77, 83, 185, 189, 190, 192, 194, 199, 202, 204, 206, 209, 210, 215, 229, 233, 236, 237], "effici": [76, 77, 81, 185, 202, 208, 209], "cast": [76, 77, 185, 209], "applic": [76, 77, 185, 193, 194, 195, 200, 201, 202, 204, 205, 206, 208, 209, 210, 214, 215, 225, 229, 232, 236, 238, 239, 242], "stride_0": [76, 77, 185], "stride_1": [76, 77, 185], "stride_2": [76, 77, 185], "stride_3": [76, 77, 185], "stride_4": [76, 77, 185], "stride_5": [76, 77, 185], "stride_6": [76, 77, 185], "stride_7": [76, 77, 185], "lowest": [76, 128, 140, 185], "highest": [76, 130, 185, 200, 202, 225], "due": [76, 185, 201, 202, 203, 207, 209, 240], "pad": [76, 177, 185, 186, 204, 206, 207, 209], "belong": [76, 185], "n8": [76, 185], "byte": [76, 128, 129, 136, 137, 153, 185, 209], "use_count": [76, 77, 185], "aim": [76, 185, 209, 225], "legal": [76, 78, 150, 152, 154, 155, 156, 157, 166, 185, 199, 205, 206, 209], "intercept": [76, 185], "illeg": [76, 185, 199, 209], "dsttype": [76, 185], "srctype": [76, 185], "dst_view": [76, 185], "src_view": [76, 185], "scrtype": 76, "met": [76, 185, 218, 226, 228], "is_const": [76, 185], "memoryspaceaccess": [76, 87, 185], "furthermor": [76, 185, 192, 199, 201, 205, 206, 209, 221, 225, 226, 235], "neither": [76, 145, 146, 147, 185, 207, 218], "nor": [76, 145, 146, 147, 185, 207, 218], "k": [76, 87, 95, 130, 150, 151, 156, 159, 178, 185, 199, 208, 209], "hold": [76, 81, 160, 185, 209, 238], "cstdio": [76, 145, 146, 147, 178, 185, 189, 190, 191, 222, 240], "atoi": [76, 122, 145, 146, 147, 178, 185, 222], "inita": [76, 185, 222], "initb": [76, 185, 222], "const_a": [76, 185, 222], "const_b": [76, 185, 222], "setc": [76, 185, 222], "kokkos_dynamicview": 77, "parent": [77, 208, 239], "array_typ": [77, 197, 198], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 136, 151, 153, 199, 205, 235], "rais": [77, 202, 213], "nearest": [77, 139], "power": [77, 137, 139, 201, 202, 227, 229], "resize_seri": 77, "reserv": [77, 82, 200, 209], "amount": [77, 87, 130, 192, 199, 205, 206], "suffici": [77, 193, 205, 209, 231], "chunk_siz": [77, 87, 151, 153], "outsid": [77, 95, 194, 199, 201, 204, 209, 227, 241], "allocation_ext": 77, "noexcept": [77, 152, 168, 171, 172, 174, 222], "multipli": [77, 103, 106, 121, 167, 199], "alwai": [77, 87, 95, 189, 190, 199, 207, 209, 235], "until": [77, 86, 87, 95, 133, 135, 152, 185, 192, 207, 216, 225, 235, 236, 239], "greater": [77, 132, 137, 149, 151, 170, 209], "initializedata": 77, "kokkos_offsetview": [78, 213], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 130, 131, 133, 135, 136, 137, 138, 139, 140, 161, 164, 166, 168, 170, 171, 172, 173, 174, 175, 178, 185, 192, 194, 199, 201, 202, 205, 207, 208, 209, 216, 222, 235, 238], "ov": 78, "initializer_list": [78, 149], "instead": [78, 81, 130, 131, 132, 136, 139, 164, 185, 199, 200, 205, 207, 209, 217, 222], "obtain": [78, 199, 201, 209, 229, 234], "begin0": 78, "end0": 78, "exactli": [78, 87, 136, 207, 209], "drop": [78, 133, 194, 201], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 163, 208], "21": [78, 194, 221], "assert_eq": 78, "deep": [78, 93, 136, 178, 201, 236], "sens": [78, 148, 203, 204, 207, 209, 240], "similarli": [78, 95, 240], "kokkos_scatterview": [79, 213], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 128, 129, 162], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 234], "exec_spac": [79, 178, 186], "scatteraccess": 79, "accumul": [79, 204, 205, 239], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 136, 139, 147, 200, 203, 204, 209, 211, 222, 236, 240], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 145, 146, 162, 185, 205, 209, 222], "bar": [79, 222], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 213], "simplifi": [80, 197], "manipul": [80, 89, 128, 129, 139, 185], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 213], "design": [81, 82, 95, 194, 201, 202, 204, 207, 215, 225, 228, 229, 234, 236, 238, 239], "ten": [81, 199], "thousand": [81, 234], "consequ": [81, 199, 205, 207], "significantli": [81, 192], "unordered_map": 81, "fail": [81, 128, 178, 207, 209, 227, 229, 238, 240, 241], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 95, 144, 162, 174, 178, 192, 194, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 225, 231, 233, 238, 240], "cach": [81, 136, 153, 192, 194, 199, 201, 204, 206, 209], "friendli": [81, 83, 84, 140, 209, 237], "pod": [81, 146, 147, 199], "plain": [81, 189, 190, 209], "trivial": [81, 95, 161], "copyabl": [81, 160, 161], "capacity_hint": 81, "enough": [81, 87, 225, 227, 233], "requested_capac": 81, "lower": [81, 199], "o": [81, 194, 204], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "success": [81, 128, 129, 229], "successfulli": [81, 226], "present": [81, 87, 132, 191, 193, 200, 204, 225, 229], "did": [81, 196], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 240], "duplic": [81, 87, 207], "togeth": [81, 87, 205, 206, 234], "report": [81, 225, 228, 229], "impli": [81, 144, 151, 162, 218], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 110, 112, 218], "atomic_add_typ": 81, "atomic_add": [81, 105, 192], "pattern": [81, 85, 87, 93, 122, 130, 148, 150, 151, 192, 199, 209, 211, 233, 242], "umap": 81, "kokkos_vector": [82, 213], "overcom": [82, 95], "issu": [82, 83, 138, 139, 152, 178, 185, 194, 199, 201, 204, 205, 207, 209, 212, 215, 221, 224, 227, 228, 229], "reli": [82, 185, 204, 207, 225], "heavili": [82, 194, 210], "grant": 82, "mani": [82, 87, 88, 95, 130, 193, 194, 202, 204, 205, 206, 207, 209, 210, 229, 237, 238, 240], "limit": [82, 87, 95, 140, 153, 191, 193, 194, 199, 202, 204, 207, 209, 218, 221, 227, 228, 239], "below": [82, 87, 92, 95, 122, 132, 133, 137, 139, 140, 145, 146, 151, 185, 194, 197, 209, 210, 216, 225, 229, 235], "synopsi": [82, 139], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 199], "back": [82, 95, 192, 194, 199, 204, 206, 236], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 187, 204], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 95, 128, 130, 207, 216], "buffer": [82, 136, 199, 234], "dispatch": [83, 85, 95, 144, 145, 146, 147, 148, 153, 158, 159, 162, 199, 201, 204, 220, 233, 238, 242], "task": [83, 85, 192, 204, 206, 225, 230, 242], "common": [83, 86, 87, 89, 130, 136, 138, 140, 148, 177, 178, 183, 194, 195, 196, 199, 201, 205, 206, 207, 210, 234], "mathemat": [83, 89, 139, 140, 207, 229], "style": [83, 135, 160, 194, 210, 222, 228], "port": [83, 206, 209], "hardwar": [83, 136, 162, 192, 194, 199, 200, 202, 204, 205, 206, 217, 225, 228, 229], "idiom": [83, 95], "recogn": [83, 84, 135, 187, 199, 200, 201, 207, 210], "sfina": [83, 84, 140], "macro": [83, 92, 145, 166, 194, 201, 205, 209, 229, 241], "etc": [83, 136, 152, 193, 194, 209], "kokkos_detectionidiom": [84, 213], "extens": [84, 169, 194, 211, 215, 225, 228, 229], "iso": [84, 87, 189, 190, 191, 207, 209], "iec": 84, "ts": [84, 152, 239], "19568": 84, "2017": [84, 227], "draft": [84, 87, 225], "cplusplu": 84, "github": [84, 194, 203, 212, 215, 225, 226, 227, 228, 240], "io": 84, "v2": [84, 93, 229], "html": [84, 139, 162], "meta": [84, 194], "origin": [84, 103, 105, 106, 129, 162, 192, 207, 208, 209, 211, 227, 229, 238], "propos": [84, 189, 190, 191, 207, 215, 225, 228], "www": [84, 211], "open": [84, 139, 149, 151, 153, 201, 212, 215, 226, 229], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 139], "paper": [84, 211], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 194, 210, 225], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 140], "true_typ": [84, 140], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 133, 160, 181, 209, 225], "is_detect": 84, "alia": [84, 130, 136, 176, 189, 190, 208, 209, 235], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 95, 122, 190, 193, 199, 201, 202, 205, 207, 208, 210, 225, 226], "is_detected_convert": 84, "To": [84, 95, 128, 129, 136, 145, 177, 178, 194, 195, 199, 200, 202, 203, 205, 208, 209, 210, 212, 216, 225, 226, 229, 232, 240], "is_convert": 84, "later": [84, 130, 193, 196, 203, 205, 207, 209, 217, 240], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 208], "Then": [84, 194, 208, 209, 210], "easili": [84, 203, 209, 239, 240], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 136, 184, 209], "diff_t": 84, "declar": [84, 139, 146, 193, 200, 205, 209, 217], "our": [84, 203, 204, 206, 229, 232, 240], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 95, 122, 130, 136, 148, 189, 190, 199, 202, 206, 207, 215], "place": [85, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 129, 130, 136, 147, 148, 199, 200, 201, 203, 205, 206, 207, 227, 229, 234, 240], "nestedpolici": 85, "summari": [85, 227, 229], "setter": [85, 149, 151, 199], "hip": [85, 87, 88, 94, 136, 149, 151, 162, 178, 194, 200, 205, 209, 215, 216, 228, 229], "sycl": [85, 87, 88, 94, 136, 139, 149, 151, 162, 194, 200, 215, 216, 221], "schedul": [85, 87, 149, 151, 153, 199, 239], "through": [85, 95, 145, 146, 147, 149, 151, 152, 192, 194, 196, 199, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 225, 229, 231, 234, 240], "steal": [85, 149, 151], "queue": [85, 149, 151, 162, 225, 239], "machin": [85, 149, 151, 194, 202, 206, 207, 210, 220, 227, 229], "backend": [85, 86, 87, 132, 136, 139, 149, 151, 154, 156, 158, 162, 168, 171, 173, 193, 194, 200, 201, 205, 210, 215, 221, 227, 228, 235, 236, 240], "indextyp": [85, 87, 149, 150, 151, 153, 199], "travers": [85, 149, 151], "launchbound": [85, 87, 149, 151], "maxthread": [85, 149, 151], "minblock": [85, 149, 151], "launch": [85, 93, 95, 144, 149, 151, 152, 153, 199, 209, 229, 236, 238, 239], "worktag": [85, 146, 147, 149, 151, 198, 213], "someclass": [85, 149, 151], "detail": [86, 87, 91, 92, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 136, 140, 145, 165, 184, 193, 194, 195, 198, 202, 205, 209, 210, 225, 226, 229], "shutdown": 86, "resourc": [86, 134, 136, 151, 162, 199, 200, 203, 204, 205, 206, 215, 228, 236, 239, 240], "destruct": [86, 87, 160, 161], "thu": [86, 146, 150, 152, 185, 191, 194, 199, 200, 201, 203, 205, 206, 209, 225, 227, 235, 236, 239, 240, 241], "context": [86, 87, 95, 134, 135, 154, 155, 156, 157, 158, 159, 185, 232, 233, 236, 240], "automat": [86, 122, 132, 136, 194, 200, 201, 205, 207, 209, 214, 228, 233, 235], "aid": 86, "mistak": 86, "live": [86, 209, 225], "my_view": [86, 133, 134, 135, 179, 180], "destructor": [86, 133, 134, 135, 152, 209, 222], "switch": [86, 192, 201, 227], "subsequ": [86, 95, 135, 153, 234], "driven": [87, 225], "essenti": [87, 207, 229], "incept": 87, "recent": [87, 227], "readili": 87, "fact": [87, 238], "hasn": 87, "realli": [87, 133, 194, 203, 210], "even": [87, 95, 129, 130, 133, 134, 136, 146, 193, 194, 198, 201, 204, 206, 208, 209, 218, 231, 234, 238, 241], "agre": [87, 226], "merg": [87, 225, 227, 228, 229], "languag": [87, 88, 92, 130, 136, 148, 193, 202, 204, 205, 207, 208, 209, 210, 211, 232], "featur": [87, 88, 130, 136, 148, 169, 193, 194, 199, 200, 201, 205, 207, 209, 210, 212, 216, 225, 226, 227, 229], "consid": [87, 187, 192, 193, 199, 203, 207, 208, 209, 225, 226, 238, 240], "formal": [87, 93, 130, 136, 148, 187, 204], "rapid": [87, 216], "expans": 87, "demand": [87, 235], "lack": [87, 205, 206], "harden": 87, "acut": 87, "ever": [87, 130, 136, 148, 199, 209], "project": [87, 193, 194, 204, 210, 212, 224, 226, 228, 229], "horizon": 87, "resili": [87, 215], "few": [87, 95, 130, 171, 194, 199, 209, 229], "best": [87, 189, 190, 193, 200, 209, 236, 239], "core": [87, 88, 192, 194, 199, 200, 202, 204, 206, 212, 215, 225, 228, 229, 237], "addition": [87, 93, 130, 177, 185, 196, 209], "promot": [87, 130, 136, 138, 218, 225, 229], "plan": [87, 95, 205, 215], "good": [87, 95, 130, 192, 193, 199, 205, 206, 209, 212, 218, 237, 238], "holist": 87, "interact": [87, 163, 194, 226, 235, 238], "experi": [87, 202, 206, 209, 229], "garner": 87, "year": [87, 193, 211, 225, 226, 227], "particip": [87, 174, 208, 225, 228], "executor": 87, "effort": [87, 193, 194, 209, 215, 225, 229], "2011": [87, 204, 205], "sutton": 87, "stroustrup": 87, "guid": [87, 148, 202, 205, 215], "particular": [87, 119, 120, 125, 130, 161, 192, 194, 199, 200, 201, 205, 206, 209, 210, 218, 221, 228, 229, 234, 238], "constraint": [87, 199], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 95], "flexibl": [87, 130, 201], "eas": 87, "learn": [87, 130, 205], "far": [87, 95, 204, 209, 238], "though": [87, 136, 194, 241], "pure": [87, 201, 202, 240], "veri": [87, 95, 194, 204, 205, 207, 210, 234], "slightli": [87, 201], "By": [87, 194, 199, 204, 205, 206, 207, 209], "minim": [87, 193, 196, 200, 205, 225], "cognit": 87, "perhap": 87, "import": [87, 194, 199, 201, 204, 205, 208, 209, 225, 229, 233, 236], "subsumpt": 87, "hierarchi": [87, 130, 199, 206, 215], "branch": [87, 152, 154, 155, 156, 157, 199, 206, 212, 221, 225, 227, 228, 229], "width": [87, 207, 227], "roughli": [87, 199, 226], "speak": [87, 95, 240], "high": [87, 95, 153, 193, 199, 202, 206, 207, 209, 210, 211, 225], "major": [87, 88, 193, 201, 207, 209, 215, 225, 228, 229], "visibl": [87, 130, 136], "minor": [87, 88, 193, 225], "memorylayout": 87, "taskschedul": [87, 95], "treat": [87, 136, 204, 205, 229], "kokkos_concept": 87, "enumer": [87, 193], "iterationpattern": 87, "question": [87, 202, 218, 225, 226], "friend": [87, 95], "rather": [87, 95, 130, 136, 200, 210], "alik": 87, "extern": [87, 95, 194, 209, 212, 228, 242], "off": [87, 200, 204, 209, 216, 239], "look": [87, 130, 200, 203, 205, 207, 208, 209, 240], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 130, 152, 199], "ostream": [87, 130], "ostr": [87, 130], "in_parallel": [87, 130], "print_configur": [87, 130, 132], "ve": [87, 203, 240], "extrapol": 87, "progress": [87, 204, 206, 225, 226, 227], "eventu": [87, 193], "further": [87, 146, 194, 199, 203, 207, 209, 225, 229, 234, 239, 240], "cannot": [87, 130, 131, 135, 137, 144, 174, 186, 200, 207, 225, 239], "constrain": [87, 206], "known": [87, 138, 139, 204, 208, 215, 221, 227, 234], "decid": [87, 204, 205, 228, 229], "argu": 87, "around": [87, 181, 194, 201, 203, 209, 221, 231, 234, 236, 240, 241], "wherebi": 87, "meet": [87, 93, 130, 150, 152, 177, 184, 225, 226, 228], "definit": [87, 122, 166, 187, 204, 205, 233, 234, 238, 241], "practic": [87, 95, 130, 136, 139, 148, 162, 185, 202, 207, 209, 236, 238], "converg": [87, 202], "relev": [87, 103, 105, 106, 215, 225, 234], "site": [87, 229], "artifact": 87, "assess": [87, 226], "intent": [87, 193, 209, 232], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 209], "kokkos_parallel": 87, "technic": [87, 209, 210], "correct": [87, 90, 95, 194, 199, 203, 205, 208, 209, 226, 229, 240], "rvalu": 87, "wouldn": [87, 196], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 152, 199, 205], "implexecutionspaceof": 87, "exclud": [87, 193, 205], "uniquetoken": 87, "add": [87, 122, 124, 145, 187, 192, 193, 194, 197, 199, 201, 204, 207, 209, 210, 214, 225, 231, 238, 239], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 204], "teampolicyintern": [87, 213], "nice": [87, 207], "could": [87, 193, 196, 203, 204, 206, 208, 209, 225, 240], "refactor": 87, "noth": [87, 127, 130, 136, 148, 166, 204, 205, 209], "mind": [87, 209], "close": [87, 199, 205, 207, 212, 225], "semiregular": 87, "todo": [87, 203, 240], "openmptargetspac": 87, "hbwspace": [87, 88, 209], "mem": [87, 189, 191], "dealloc": [87, 126, 127, 128, 129, 136, 185, 201, 208, 209, 237], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 93], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 225, 229], "exec": 87, "think": [87, 95, 133, 209, 231, 240], "achiev": [87, 136, 199, 201, 209, 229, 233], "signific": [87, 137, 209, 236, 238], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 150], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 148, 151, 153], "cours": 87, "execution_polici": [87, 151, 175], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 151, 153], "complic": [87, 205, 209], "pretti": [87, 95, 130], "straightforward": [87, 177, 233, 234], "iteratetil": 87, "seem": [87, 210], "kokkos_openmp_parallel": 87, "were": [87, 130, 138, 139, 140, 191, 203, 204, 229, 240], "conceptu": [87, 237], "surfac": 87, "area": [87, 129], "Of": [87, 204, 216], "d": [87, 154, 158, 173, 181, 184, 193, 197, 198, 199, 203, 204, 205, 207, 208, 209, 233, 240], "still": [87, 88, 162, 192, 193, 196, 199, 207, 209, 236], "shortcut": [87, 130, 148], "probabl": [87, 95, 199, 205, 207], "teach": [87, 205], "advanc": [87, 130, 205, 229, 242], "ax": [87, 236], "me": 87, "why": [87, 200, 236], "axi": 87, "extend": [87, 202], "overhead": [87, 95, 144, 205, 207, 209, 233], "describ": [87, 95, 122, 130, 136, 148, 153, 191, 195, 202, 203, 204, 206, 207, 211, 212, 216, 222, 229, 236, 237, 239, 240], "isn": [87, 95, 130, 203, 240], "concern": [87, 202, 204, 234, 238], "simplest": [87, 199, 200, 234], "But": [87, 195, 199, 203, 209, 238], "kokkos_vers": 88, "patch": [88, 225], "10000": [88, 205, 209], "kokkos_enable_debug": [88, 166, 216], "kokkos_enable_debug_bounds_check": [88, 216], "kokkos_enable_debug_dualview_modify_check": [88, 216], "kokkos_enable_deprecated_code_3": 88, "kokkos_enable_deprecation_warn": 88, "warn": [88, 132, 185, 193, 200, 209, 210, 213, 216, 221, 225, 227], "kokkos_enable_hbwspac": 88, "kokkos_enable_memkind": [88, 216], "kokkos_enable_tun": [88, 216], "bind": [88, 200, 215, 216, 232], "tune": [88, 194, 200, 210, 216, 233, 242], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 128, 186, 207, 209, 228, 237], "kokkos_enable_aggressive_vector": [88, 216], "assumpt": [88, 200], "ignor": [88, 95, 199, 207], "aggress": [88, 209, 216], "ifdef": [88, 201], "kokkos_enable_seri": [88, 194, 216], "kokkos_enable_openmp": [88, 194, 216], "kokkos_enable_openmptarget": [88, 216], "kokkos_enable_thread": [88, 194, 216], "kokkos_enable_cuda": [88, 194, 216], "kokkos_enable_hip": [88, 194, 216], "kokkos_enable_hpx": [88, 216], "kokkos_enable_sycl": [88, 194, 216], "kokkos_enable_cuda_constexpr": [88, 216], "kokkos_enable_cuda_lambda": [88, 216], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 216], "intrins": [88, 122, 137, 189, 190, 195, 201, 207, 209, 216, 232], "kokkos_enable_cuda_relocatable_device_cod": [88, 216], "relocat": [88, 210, 216, 228], "kokkos_enable_cuda_uvm": [88, 216, 230], "kokkos_enable_hip_multiple_kernel_instanti": [88, 216], "instanti": [88, 193, 204, 206, 207, 209, 216], "improv": [88, 193, 202, 205, 206, 216, 221, 226, 233], "kokkos_enable_hip_relocatable_device_cod": [88, 216], "latest": [88, 92, 193, 221], "path": [88, 132, 193, 194, 200, 216, 225, 229, 234], "expos": [88, 130, 198, 199, 206, 233], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 122, 166, 193, 195, 200, 204, 206, 209, 210, 225, 226, 229, 231, 234, 237, 240], "libari": 88, "kokkos_enable_hwloc": [88, 194, 216], "libhwloc": [88, 194], "numa": 88, "kokkos_enable_librt": [88, 216], "link": [88, 92, 185, 194, 210, 215, 229, 233], "posix": 88, "librt": [88, 194, 216], "backward": [88, 135, 220], "memkind": [88, 216], "heap": 88, "kokkos_enable_libdl": [88, 216], "linker": [88, 194, 210], "libdl": [88, 216], "kokkos_enable_libquadmath": 88, "gcc": [88, 194, 210, 217, 221, 227, 228], "quad": 88, "precis": [88, 194, 203, 232, 234, 238, 240], "math": [88, 89, 207, 215, 242], "kokkos_arch_sse42": 88, "sse": 88, "kokkos_arch_armv80": [88, 216], "armv8": [88, 194, 216], "kokkos_arch_armv8_thunderx": [88, 216], "cavium": [88, 229], "thunderx": [88, 194, 229], "kokkos_arch_armv81": [88, 216], "kokkos_arch_armv8_thunderx2": [88, 216], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 216], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 216], "intel": [88, 194, 199, 207, 216, 221, 225, 227, 228, 229], "knight": [88, 229], "corner": [88, 223], "xeon": [88, 194, 229], "phi": [88, 138, 194], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power7": [88, 216], "ibm": [88, 194, 221, 227], "power7": [88, 194, 216], "kokkos_arch_power8": [88, 216], "power8": [88, 194, 216, 227], "kokkos_arch_power9": [88, 216], "power9": [88, 216], "kokkos_arch_intel_gen": [88, 216], "kokkos_arch_intel_dg1": [88, 216], "iri": [88, 216], "xemax": [88, 216], "kokkos_arch_intel_gen9": [88, 216], "gen9": [88, 216], "kokkos_arch_intel_gen11": [88, 216], "gen11": [88, 216], "kokkos_arch_intel_gen12lp": [88, 216], "gen12lp": [88, 216], "kokkos_arch_intel_xehp": [88, 216], "xe": [88, 216], "hp": [88, 216], "kokkos_arch_intel_pvc": [88, 216], "pont": [88, 216], "vecchio": [88, 216], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 194, 199, 206, 207, 216, 225, 228, 229, 234], "kepler": [88, 194], "kokkos_arch_kepler30": [88, 216], "cc": [88, 194, 216, 232], "kokkos_arch_kepler32": [88, 216], "kokkos_arch_kepler35": [88, 216], "kokkos_arch_kepler37": [88, 216], "kokkos_arch_maxwel": 88, "maxwel": [88, 194], "kokkos_arch_maxwell50": [88, 216], "kokkos_arch_maxwell52": [88, 216], "kokkos_arch_maxwell53": [88, 216], "kokkos_arch_navi": 88, "amd": [88, 225, 228], "navi": 88, "kokkos_arch_navi1030": [88, 216], "v620": [88, 216], "w6800": [88, 216], "gfx1030": [88, 216], "kokkos_arch_pasc": 88, "pascal": 88, "kokkos_arch_pascal60": [88, 216], "kokkos_arch_pascal61": [88, 216], "kokkos_arch_volta": 88, "volta": 88, "kokkos_arch_volta70": [88, 216], "kokkos_arch_volta72": [88, 216], "kokkos_arch_turing75": [88, 216], "ture": 88, "kokkos_arch_amper": 88, "amper": [88, 216], "kokkos_arch_ampere80": [88, 216], "kokkos_arch_ampere86": [88, 216], "kokkos_arch_ada89": [88, 216], "ada": [88, 216], "kokkos_arch_hopp": 88, "hopper": [88, 216], "kokkos_arch_hopper90": [88, 216], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 216], "kokkos_arch_amd_zen3": 88, "zen3": [88, 216], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 216], "mi25": [88, 216], "gfx900": [88, 216], "kokkos_arch_vega906": [88, 216], "mi50": [88, 216], "mi60": [88, 216], "gfx906": [88, 216], "kokkos_arch_vega908": [88, 216], "mi100": [88, 216], "gfx908": [88, 216], "kokkos_arch_vega90a": [88, 216], "mi200": [88, 216], "seri": [88, 202, 216, 229], "gfx90a": [88, 216], "kokkos_mathematicalconst": [89, 138, 213], "backport": [89, 225], "sqrt2": [89, 138], "kokkos_mathematicalfunct": [89, 139, 213], "consist": [89, 139, 173, 194, 199, 204, 206, 207, 228, 234], "portabl": [89, 130, 138, 192, 201, 202, 204, 205, 207, 211, 217, 225, 232, 233, 235, 237, 242], "fab": [89, 139], "sqrt": [89, 139, 189, 191, 207, 217], "sin": [89, 138, 139, 189], "kokkos_numerictrait": [89, 140, 213], "ad": [89, 103, 105, 106, 140, 173, 191, 193, 194, 199, 200, 207, 210, 225, 239, 240], "23": [89, 140, 211, 214, 215, 228], "numeric_limit": [89, 140], "kokkos_bitmanipul": [89, 137], "individu": [89, 95, 139, 140, 201, 210, 229, 238], "compos": [90, 234], "team_size_max": [90, 153], "team_size_recommend": [90, 141, 142, 143, 153], "strive": [92, 207], "howev": [92, 95, 130, 162, 199, 201, 202, 203, 204, 205, 206, 207, 209, 218, 221, 229, 233, 240], "deviat": 92, "approach": [92, 95, 192, 202, 204, 205, 207, 209, 238, 242], "section": [92, 160, 161, 194, 199, 201, 203, 204, 205, 209, 216, 227, 229, 240], "usag": [92, 94, 132, 134, 135, 144, 145, 159, 163, 173, 189, 190, 191, 194, 201, 206, 208, 209, 210, 232], "guidanc": [92, 189, 212], "relationship": [93, 95, 162, 199, 209], "entiti": [93, 95, 193, 204], "msp1": 93, "msp2": 93, "retriev": [93, 95, 151, 196, 239], "v1": [93, 229], "word": [93, 130, 136, 148, 194, 207], "shape": 93, "attribut": [93, 206, 207, 209, 213], "intercessori": 93, "executionspaceconcept": [94, 144, 177], "defaulthostexecutionspac": [94, 172, 200, 201], "hipspac": [94, 209, 213], "hiphostpinnedspac": [94, 209], "hipmanagedspac": [94, 217], "sycldeviceusmspac": 94, "syclhostusmspac": 94, "syclsharedusmspac": 94, "sharedspac": [94, 230], "sharedhostpinnedspac": [94, 235], "memoryspaceconcept": [94, 177], "lightweight": 95, "substanti": 95, "futur": [95, 130, 202, 206, 209, 220, 225, 227, 239], "Not": [95, 209], "too": [95, 144, 209, 221, 240], "small": [95, 135, 136, 205, 239], "inher": 95, "plenti": 95, "scale": [95, 130, 194, 229], "easier": [95, 205, 212, 235, 237], "hierarch": [95, 154, 155, 156, 157, 158, 159, 204, 205, 206, 220, 239, 242], "ordinari": [95, 205], "portion": [95, 207], "haev": 95, "addit": [95, 130, 139, 178, 195, 200, 202, 204, 205, 207, 209, 225, 233, 238, 240], "output": [95, 130, 181, 192, 198, 206, 229, 233], "mytask": 95, "produc": [95, 202, 205, 207, 234, 236], "task_spawn": [95, 239], "host_spawn": 95, "tasksingl": [95, 239], "taskteam": [95, 145, 146, 147], "former": [95, 194, 205, 209, 229], "worker": [95, 146, 239], "spawn": [95, 239], "basicfutur": [95, 239], "when_al": [95, 239], "scheduler_typ": 95, "discuss": [95, 199, 204, 207, 209, 225, 226], "fut": 95, "mytaskfunctor": 95, "readi": [95, 193, 209], "earliest": 95, "fut2": 95, "myothertaskfunctor": 95, "my_funct": [95, 130], "sched": 95, "my_result_typ": 95, "my_task_result": 95, "ff": [95, 227], "better": [95, 194, 199, 209, 210, 222, 236], "never": [95, 130, 193, 194, 207, 209, 210], "share": [95, 152, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 215, 225, 233, 234, 240], "transit": [95, 216, 225], "undefin": [95, 128, 129, 132, 185, 201, 209, 217, 241], "worst": 95, "kind": [95, 204, 205, 208, 229], "bug": [95, 130, 193, 203, 221, 225, 226, 227, 240], "segfault": [95, 210], "hour": [95, 193], "is_nul": 95, "attempt": [95, 204], "poll": 95, "is_readi": [95, 239], "forbidden": 95, "anywher": 95, "abil": [95, 145, 204, 207, 232], "yet": [95, 129, 169, 187, 193, 202, 204, 207, 208, 225, 227], "extrem": [95, 203, 204, 209, 240], "expens": [95, 208], "sledgehamm": 95, "sparingli": 95, "alon": [95, 194], "pend": 95, "decis": [95, 199, 225, 234], "piec": 95, "help": [95, 197, 200, 202, 205, 209, 210, 240], "cost": [95, 192, 202, 208, 209], "tradit": [95, 136], "reus": [95, 199, 238], "successor": 95, "respawn": [95, 239], "future_typ": [95, 239], "got": 95, "redund": [95, 234], "lead": [95, 130, 193, 199, 203, 209, 210, 225, 235, 240], "lazi": 95, "third": [95, 194, 199, 201, 204, 208, 210, 225, 233], "serv": [95, 130, 225], "observ": [95, 144, 240], "effect": [95, 130, 144, 185, 193, 194, 199, 205, 206, 207, 238, 240], "taskprior": 95, "regular": [95, 209, 225], "low": [95, 192, 202, 205, 207, 209], "boolean": [96, 130, 179, 180, 181, 200, 205, 207], "kokkos_assert": 97, "kokkos_swap": 97, "device_id": [97, 131, 132, 171, 172], "num_devic": [97, 168, 172], "num_thread": [97, 131, 132, 168, 171, 200], "critic": [98, 204, 225], "_view": 98, "awar": [98, 199, 204, 209, 211, 233], "bundl": [98, 186], "loos": [98, 177, 187], "behav": [98, 178, 187, 207, 208, 209], "old_val": [100, 102], "ptr_to_valu": [100, 101, 102, 103, 104, 105, 106, 107], "comparison_valu": [100, 101], "was_exchang": 101, "update_valu": [103, 105, 106], "previou": [103, 135, 138, 139, 153, 183, 199, 213, 227], "atomic_fetch_add": [103, 105, 192, 199], "tmp": [103, 199, 233], "atomic_fetch_and": 103, "atomic_fetch_div": 103, "divid": [103, 106, 145, 146, 147, 167, 197, 198, 231, 236], "atomic_fetch_lshift": 103, "atomic_fetch_max": 103, "atomic_fetch_min": 103, "atomic_fetch_mul": 103, "atomic_fetch_mod": 103, "atomic_fetch_or": 103, "atomic_fetch_rshift": 103, "atomic_fetch_sub": [103, 105], "substract": [103, 106], "atomic_fetch_xor": 103, "atomic_and": 105, "atomic_assign": 105, "atomic_decr": 105, "atomic_incr": [105, 192], "atomic_max": 105, "atomic_min": 105, "atomic_or": 105, "atomic_sub": 105, "subtract": 105, "atomic_add_fetch": 106, "atomic_and_fetch": 106, "atomic_div_fetch": 106, "atomic_lshift_fetch": 106, "atomic_max_fetch": 106, "atomic_min_fetch": 106, "atomic_mul_fetch": 106, "atomic_mod_fetch": 106, "atomic_or_fetch": 106, "atomic_rshift_fetch": 106, "atomic_sub_fetch": 106, "atomic_xor_fetch": 106, "conjunct": [108, 150, 192, 194, 199, 225], "bitwis": [109, 110, 137, 209], "AND": [109, 111, 218], "remove_cv": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124], "result_view_typ": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 198], "value_": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 198], "local": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 136, 146, 147, 194, 199, 200, 204, 205, 206, 208, 209, 216, 217, 227, 229, 235], "reduction_ident": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 195, 197, 205], "resid": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 136, 206, 235], "customtyp": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124], "_min": [113, 114, 117, 118], "vallocscalar": [114, 116, 123, 199], "loc": [114, 116, 125, 196], "_max": [114, 115, 116, 117, 118], "minmaxscalar": [117, 123, 199], "min_val": [117, 118, 119, 120, 196], "max_val": [117, 118, 119, 120, 196], "minmaxlocscalar": [118, 123, 199], "min_loc": [118, 119, 196], "max_loc": [118, 119, 196], "minvalu": [119, 120], "maxvalu": [119, 120], "hypothet": 122, "brief": [122, 222, 225], "build": [122, 130, 178, 193, 199, 200, 202, 205, 212, 215, 216, 227, 229, 242], "monoid": 122, "val1": 122, "val2": 122, "ident": [122, 151, 153, 177, 197, 199, 200, 204, 205, 209, 231], "el": 122, "under": [122, 178, 193, 194, 205, 209, 212, 218, 225, 229], "reducesum": 122, "lval": 122, "l": [122, 139, 156, 204, 227], "resultvalu": 125, "resultindex": 125, "shrink": [126, 182, 183], "throw": [127, 128, 129, 153, 201, 209], "runtime_error": 127, "failur": [127, 128, 129, 153, 185, 227, 228], "uniniti": [128, 149, 151, 153, 177, 182, 183, 209], "metadata": 128, "succe": 128, "suitabl": [128, 193, 205, 233], "rawmemoryallocationfailur": [128, 129], "thrown": 128, "memadvis": [128, 129, 185], "tool": [128, 132, 145, 146, 147, 193, 200, 215, 216, 242], "kokkosp": 128, "On": [128, 129, 192, 194, 199, 208, 216, 240], "avoid": [128, 129, 130, 193, 199, 208, 209, 210, 217, 225, 227, 240], "leak": [128, 129, 209], "freed": [129, 199, 209], "new_siz": 129, "invalid": [129, 209], "rare": [130, 136], "offload": 130, "talk": [130, 136, 148, 203, 240], "theoret": [130, 136, 148], "treatment": [130, 136, 148], "disclaim": [130, 136, 148, 218], "term": [130, 136, 148, 204, 209, 212, 218, 225, 238], "anyon": [130, 136, 148, 212], "who": [130, 136, 148, 202, 209, 225, 226, 228, 234, 237], "knew": [130, 136, 148], "confus": [130, 136, 148, 209], "often": [130, 136, 148, 185, 192, 199, 201, 202, 204, 205, 207, 209, 229, 234], "shini": [130, 136, 148], "pramet": 130, "surpris": 130, "answer": [130, 199, 209], "ll": [130, 203, 209, 240], "nowher": 130, "intermedi": [130, 205], "static_assert": [130, 178, 208, 235], "incompat": [130, 194], "prefer": [130, 193, 200, 205, 209, 210, 216, 217, 241], "explicit": [130, 139, 145, 179, 180, 181, 199, 205, 206, 217, 225], "simpli": [130, 194, 199, 201, 203, 207, 210, 232, 233, 234, 238, 240], "mental": 130, "exercis": [130, 229], "translat": [130, 203, 240], "tend": [130, 192, 206], "verbos": 130, "much": [130, 145, 193, 198, 202, 204, 205, 207, 209], "risk": [130, 193], "lose": 130, "caution": [130, 194], "necessarili": [130, 178, 199, 201, 206, 209], "strengthen": 130, "unspecifi": [130, 165, 185, 206], "care": [130, 193, 207], "print": [130, 132, 164, 173, 181, 200, 216], "arraylayout": 130, "recommend": [130, 153, 199, 205, 207, 209, 221, 229], "scratchmemoryspac": 130, "ex2": 130, "ex1": 130, "usabl": [130, 137, 209], "shorthand": [130, 136], "typetrait": [130, 136], "num_numa": 131, "ndevic": 131, "skip_devic": 131, "disable_warn": [131, 132], "favor": [131, 203, 240], "One": [131, 153, 192, 194, 196, 199, 201, 207, 209, 233, 234, 238, 240], "distinguish": [131, 140, 205], "kokkoscor": 132, "set_num_thread": [132, 133, 135, 200], "set_device_id": [132, 200], "set_disable_warn": [132, 135], "initializ": 132, "introduc": [132, 199, 205, 206, 228, 235], "unset": 132, "let": [132, 152, 194, 199, 201, 203, 204, 205, 208, 209, 234, 240], "tabl": [132, 194, 200, 209, 229], "set_parameter_nam": 132, "parameter_typ": 132, "parameter_nam": 132, "has_parameter_nam": 132, "get_parameter_nam": 132, "summar": 132, "id": [132, 160, 168, 171, 172, 199, 200, 201], "minu": 132, "map_device_id_bi": 132, "mpi_rank": [132, 200], "round": [132, 139, 200, 204], "robin": [132, 200], "mpi": [132, 134, 135, 192, 194, 200, 202, 208, 210, 230, 237, 242], "disabl": [132, 194, 200, 205], "messag": [132, 200, 202, 208, 225, 227, 229], "configur": [132, 200, 207, 214, 216, 225, 227, 228, 229, 235], "tune_intern": 132, "autotun": [132, 200], "heurist": [132, 200], "tools_lib": 132, "full": [132, 187, 189, 192, 200, 201, 203, 206, 207, 240], "ld_library_path": [132, 200], "tools_help": 132, "command": [132, 133, 135, 194, 210, 229], "line": [132, 133, 135, 136, 192, 194, 209, 228, 241], "tools_arg": 132, "set_print_configur": 132, "set_map_device_id_bi": [132, 133, 135], "environ": [132, 134, 135, 136, 168, 171, 172, 194, 201, 205, 209, 210, 217, 227, 229], "thats": 133, "correctli": [133, 194, 205, 210], "presenc": [133, 140, 217], "unhandl": 133, "charact": 133, "uncondition": 133, "precondit": [133, 149, 151], "is_initi": [133, 134, 135, 166], "unique_ptr": 133, "make_opt": 133, "nullopt": 133, "regardless": [133, 204], "clean": [134, 227], "is_fin": [134, 135, 147, 166], "detroi": 134, "ill": 134, "mpi_fin": [134, 200], "erron": 135, "pars": [135, 194, 200], "whenev": 135, "seen": [135, 193, 202, 229], "decrement": [135, 185, 192, 209], "implicitli": [135, 177], "multibyt": 135, "mpi_init": [135, 200], "side": [136, 144, 166, 185, 199, 205, 206, 208, 226], "virtual": [136, 209, 220, 230], "xnack": 136, "unit": [136, 194, 199, 201, 202, 204, 226], "movement": 136, "os": 136, "driver": [136, 229, 235], "moment": [136, 194, 209], "preprocessor": [136, 194, 210, 241], "kokkos_has_shared_spac": 136, "has_shared_spac": [136, 235], "correspoind": 136, "stai": 136, "availab": 136, "event": [136, 150, 199, 218, 229], "nevertheless": [136, 199, 204, 209, 240], "kokkos_has_shared_host_pinned_spac": 136, "has_shared_host_pinned_spac": 136, "bit_cast": 137, "byteswap": 137, "has_single_bit": 137, "bit_ceil": 137, "bit_floor": 137, "bit_width": 137, "rotl": 137, "rotr": 137, "countl_zero": 137, "countl_on": 137, "countr_zero": 137, "countr_on": 137, "popcount": 137, "reinterpret": 137, "represent": [137, 207, 209], "counterpart": 137, "_builtin": 137, "suffix": [137, 139], "magic": 137, "log2": [138, 139], "log10": [138, 139, 189], "inv_pi": 138, "inv_sqrtpi": 138, "ln2": 138, "ln10": 138, "sqrt3": 138, "inv_sqrt3": 138, "egamma": 138, "toolchain": [138, 194, 217], "henc": [138, 205, 217], "pi_v": 138, "motiv": [139, 202, 207, 237], "borrow": 139, "llvm": 139, "compilecudawithllvm": 139, "clang": [139, 194, 210, 221, 227, 228, 242], "ok": [139, 154, 156, 158, 185, 209, 217], "everyth": [139, 207, 209], "__device__": [139, 201, 217], "nvcc": [139, 194, 221, 227], "overrid": [139, 194, 210, 240], "sinf": 139, "goal": [139, 199, 201, 202, 225, 229, 233, 237], "cmath": 139, "sqrtf": 139, "sqrtl": 139, "integraltyp": 139, "arithmet": [139, 140, 162], "reader": [139, 193, 194, 202, 204], "cpprefer": 139, "com": [139, 211, 214, 215, 226, 227, 228], "fmod": 139, "remaind": 139, "remquo": 139, "fma": [139, 189], "fmax": 139, "fmin": 139, "fdim": 139, "nan": 139, "exp": [139, 189], "exp2": [139, 189], "expm1": 139, "log": [139, 189, 227], "log1p": 139, "exponenti": 139, "pow": [139, 189], "cbrt": [139, 189], "hypot": [139, 189], "co": [139, 189, 193, 225], "tan": [139, 189], "asin": [139, 189], "aco": [139, 189], "atan": [139, 189], "atan2": [139, 189], "trigonometr": 139, "sinh": [139, 189], "cosh": [139, 189], "tanh": [139, 189], "asinh": [139, 189], "acosh": [139, 189], "atanh": [139, 189], "hyperbol": 139, "erf": [139, 189], "erfc": [139, 189], "tgamma": [139, 189], "lgamma": [139, 189], "gamma": 139, "ceil": 139, "floor": 139, "trunc": 139, "lround": 139, "llround": 139, "nearbyint": 139, "rint": 139, "lrint": 139, "llrint": 139, "frexp": 139, "ldexp": 139, "modf": 139, "scalbn": 139, "scalbln": 139, "ilog": 139, "logb": 139, "nextaft": 139, "nexttoward": 139, "copysign": [139, 189], "fpclassifi": 139, "isfinit": 139, "isinf": 139, "isnan": 139, "isnorm": 139, "signbit": 139, "isgreat": 139, "isgreaterequ": 139, "isless": 139, "islessequ": 139, "islessgreat": 139, "isunord": 139, "classif": 139, "4767": 139, "feel": [139, 211], "keep": [139, 208, 209, 237], "track": [139, 225, 226], "bewar": 139, "unqualifi": [139, 217], "qualif": [139, 217], "exeriment": 139, "p1841": 140, "break": [140, 185, 193, 203, 210, 240], "monolith": 140, "apart": [140, 192, 193, 209], "denot": [140, 153, 185], "infin": 140, "finite_min": 140, "finite_max": 140, "epsilon": 140, "round_error": 140, "norm_min": 140, "denorm_min": 140, "reciprocal_overflow_threshold": 140, "quiet_nan": 140, "signaling_nan": 140, "characterist": [140, 204, 206, 209, 229, 239], "digit": 140, "digits10": 140, "max_digits10": 140, "radix": 140, "min_expon": 140, "min_exponent10": 140, "max_expon": 140, "max_exponent10": 140, "finite_min_v": 140, "floatingpoint": 140, "norm_min_v": 140, "finite_max_v": 140, "epsilon_v": 140, "round_error_v": 140, "infinity_v": 140, "quiet_nan_v": 140, "signaling_nan_v": 140, "denorm_min_v": 140, "digits_v": 140, "digits10_v": 140, "max_digits10_v": 140, "radix_v": 140, "min_exponent_v": 140, "min_exponent10_v": 140, "max_exponent_v": 140, "max_exponent10_v": 140, "absenc": 140, "has_infin": 140, "enable_if_t": 140, "legacy_std_numeric_limits_infin": 140, "kokkos_execpolici": [141, 142, 143], "policytyp": [141, 142, 143], "recommended_team_s": [141, 142, 143], "outstand": [144, 178, 204], "exec1": 144, "exec2": 144, "stuff": [144, 171, 207], "touch": [144, 209], "wait": [144, 152, 162, 199, 205, 239], "finish": [144, 145, 178, 192, 205, 209], "asynchron": [145, 146, 178, 204, 209, 236, 242], "calle": 145, "execpolici": [145, 146, 147], "functortyp": [145, 146, 147, 153], "hook": [145, 146, 147, 200], "integertyp": [145, 146, 147], "work_tag": [145, 146, 147, 151, 153], "iN": [145, 146], "captur": [145, 199, 205, 209, 232, 238], "loop1": [145, 146, 147], "greet": 145, "taga": 145, "implicit": [145, 150, 155, 157, 159, 185, 199, 205, 232, 236], "tagb": 145, "thread_rank": 145, "loop2": [145, 146], "deduc": [146, 176, 208, 237, 240], "reducerargu": 146, "reducerargumentnonconst": 146, "fulfil": [146, 197, 198], "handletyp": [146, 147], "reducervaluetyp": 146, "value_count": [146, 205], "length": [146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 182, 183, 185, 196, 201, 209, 237], "overwritten": [146, 147, 152, 209], "neutral": [146, 147], "lsum": [146, 150, 155, 157, 159, 199], "lf": [146, 196], "lmin": [146, 196], "tagmax": 146, "tagmin": 146, "lmax": 146, "team_rank": [146, 152, 199, 201], "post": [147, 225, 238], "returntyp": 147, "return_valu": 147, "postfix_sum": 147, "prefix_sum": 147, "partial_sum": 147, "li": 147, "domin": [148, 202], "elsewher": 148, "parallel_pattern": 148, "hand": [148, 192, 199, 207, 216, 240], "wavi": 148, "beginn": 148, "tile": [149, 209, 233], "interv": [149, 151, 153], "outer": [149, 199, 209, 233], "inner": [149, 199, 209], "ot": 149, "IT": 149, "tt": 149, "policy_1": [149, 151, 153, 199], "policy_2": [149, 151, 153, 199], "t0": 149, "t1": [149, 163, 167], "t2": [149, 163, 167, 174], "teammembertyp": [150, 155, 157, 159], "threadvectorrangeboundariesstruct": 150, "threadsinglestruct": 150, "vectorsinglestruct": 150, "team_barri": [150, 152, 154, 155, 156, 157, 158, 159, 199], "encount": [150, 181, 217, 239], "thread_sum": 150, "team_sum": [150, 155, 157, 159, 199], "a_rowsum": [150, 154, 155, 156, 157, 159], "inherit": [151, 178, 229], "policytrait": 151, "schedule_typ": [151, 153], "iteration_pattern": [151, 153], "launch_bound": [151, 153], "work_spac": 151, "work_begin": 151, "work_end": 151, "discret": [151, 162, 196, 233], "chunk_size_": 151, "init_arg": 151, "chunksiz": 151, "workgroup": 151, "policy_3": [151, 153, 199], "policy_4": [151, 153], "policy_6": 151, "policy_7": 151, "teamtask": 152, "subject": [152, 169, 193, 209], "leagu": [152, 153, 199, 206, 239], "league_s": [152, 153, 199], "workitem": 152, "team_shmem": [152, 199], "team_scratch": [152, 199], "thread_scratch": 152, "lexic": [152, 193], "arriv": [152, 199], "team_broadcast": 152, "source_team_rank": 152, "var": 152, "broadcast": [152, 199], "reducertyp": 152, "team_reduc": 152, "accross": [152, 207], "team_scan": 152, "teampolcii": 152, "policy_typ": 152, "set_scratch_s": [152, 153, 199], "4096": 152, "tid": 152, "lid": 152, "scratch_memory_typ": 152, "vector_length": [153, 213], "auto_t": 153, "lazili": 153, "perteamvalu": 153, "per_team": 153, "perthreadvalu": 153, "per_thread": 153, "closest": 153, "bandwidth": [153, 199, 206, 207, 209], "twice": [153, 209], "overwrit": [153, 194, 205], "scratch_size_max": 153, "maxim": [153, 201], "scratch_siz": 153, "team_size_": 153, "team_scratch_s": 153, "thread_scratch_s": 153, "policy_5": 153, "extent_1": [154, 156, 158], "extent_2": [154, 156, 158, 209], "extent_i": [154, 156, 158], "violat": [154, 156, 158, 199, 205, 209, 240], "num": [154, 156, 158, 200, 229], "leaguerank": [154, 156, 158], "teamsum": [154, 156, 158], "threadsum": [154, 158, 159], "leaguesum": [154, 156], "itype1": [155, 157, 159], "itype2": [155, 157, 159], "teamtyp": 156, "vectorsum": [156, 158], "tsum": 159, "kokkos_profiling_profilesect": [160, 213], "stop": 160, "raii": [160, 161], "stringand": 160, "leav": [160, 201, 209, 236], "destroi": [160, 209, 222], "sectionnam": 160, "createprofilesect": 160, "sectionid": 160, "destroyprofilesect": 160, "startsect": 160, "stopsect": 160, "scopedregion": 160, "ownership": [160, 161], "kokkos_profiling_scopedregion": 161, "push": [161, 201, 221, 227], "pop": 161, "exit": [161, 200], "flow": [161, 229], "earli": [161, 204, 228], "regionnam": 161, "pushregion": 161, "popregion": 161, "do_work_v1": 161, "myapp": 161, "do_work": 161, "cond": 161, "rememb": [161, 203, 205, 209, 229, 240], "do_work_v2": 161, "profilingsect": [161, 213], "weigth": 162, "weight": 162, "fraction": 162, "is_arithmetic_v": 162, "n_partit": 162, "3rd": 162, "stream": [162, 178, 206, 209, 242], "otherparam": 162, "param": [162, 222], "f1": [162, 239], "f2": [162, 239], "functor1": 162, "functor2": 162, "f3": 162, "functor3": 162, "kokkos_pair": [163, 213], "fulli": [163, 234, 240], "std_pair": 163, "int_float": 163, "converted_std_pair": 163, "converted_kokkos_pair": 163, "to_std_pair": 163, "first_typ": 163, "second_typ": 163, "kokkos_defaulted_funct": [163, 240], "kokkos_forceinline_funct": [163, 197], "wise": [163, 179, 180, 181], "whose": [163, 193, 205, 208, 209, 233, 237], "msg": 164, "kokkos_abort": 164, "ndebug": 166, "endif": [166, 194, 201], "assert": [166, 184, 207], "diagnost": 166, "text": 166, "predefin": [166, 199], "__file__": 166, "__line__": 166, "imag": 167, "real": [167, 232], "imaginari": 167, "im": 167, "convers": [167, 185, 201, 207, 225, 232, 238], "realtyp": 167, "nodiscard": [168, 171, 172], "anounc": 169, "clamp": [170, 213], "boundari": [170, 208], "kokkos_clamp": 170, "kokkos_minmax": 170, "iostream": 171, "cerr": 171, "kokkos_printf": 173, "format": [173, 201, 209, 228], "stdout": 173, "across": [173, 202, 204, 206, 207, 215], "hello": 173, "world": 173, "affect": [173, 194, 209, 221], "regist": [173, 191, 192, 199, 207, 214], "is_nothrow_move_constructible_v": 174, "is_nothrow_move_assignable_v": 174, "resolut": [174, 197, 225, 226, 238], "unless": [174, 193, 194, 205, 207, 209, 241], "is_move_constructible_v": 174, "is_move_assignable_v": 174, "swappabl": 174, "yield": [174, 185, 241], "ambigu": [174, 217], "situat": [174, 192, 195, 204, 207, 225, 238], "adl": 174, "measur": [175, 204], "time1": 175, "time2": 175, "impl_detail": [176, 184], "view_arg": 176, "subviewhold": 176, "deal": [177, 203, 208, 240, 241, 242], "host_mirror": 177, "a_view": 177, "host_mirror_view": 177, "host_mirror_view_spac": 177, "withoutiniti": [177, 182, 183, 186, 209, 213], "implmirrortyp": 177, "viewctorarg": [177, 182, 183], "conduct": [177, 225, 228], "circumst": [178, 225], "viewdest": 178, "viewsrc": [178, 185, 222], "copy_spac": 178, "submit": [178, 199, 229], "cudamemcpyasync": 178, "d_a": [178, 201], "d_a_2": 178, "d_a_5": 178, "h_a": [178, 201, 236], "h_a_2": 178, "d_a_2_5": 178, "deviceview": 178, "temporari": [178, 196, 206, 209, 217], "h_view_tmp": 178, "kokkos_layout": [179, 180, 181], "lai": [179, 180, 181], "convent": [179, 180, 206, 209], "signifi": [179, 180, 181], "is_extent_construct": [179, 180, 181], "full_mesh": 181, "mesh": [181, 231], "mesh_subcompon": 181, "z": [181, 189, 207], "frequent": 181, "noncontigu": [181, 209], "array_layout_max_rank": 181, "s0": 181, "s4": 181, "s5": 181, "s6": 181, "s7": 181, "order_dimens": 181, "itypeord": 181, "itypedimen": 181, "dimen": 181, "3d": [181, 201, 232], "grow": [182, 183, 202], "subext": 183, "191": 184, "subset": [184, 191, 192, 194, 208, 229], "arg_r": 184, "remove_const_t": [184, 208], "s3415": 184, "star": 185, "bracket": 185, "2d": [185, 196, 201, 232], "5d": 185, "Their": [185, 237], "integral_const": [185, 189, 190], "nullari": 185, "encourag": [185, 194, 199, 210, 212, 228], "akin": [185, 233], "_dynam": 185, "sign": [185, 200, 209], "msvc": [185, 194, 221], "i7": 185, "is_assign": 185, "assign_data": 185, "arg_data": 185, "anywai": [185, 201], "viewdst": [185, 222], "dynamic_rank": 185, "a1": [185, 209, 239], "a2": [185, 239], "a3": [185, 239], "a4": 185, "a5": 185, "a6": 185, "a7": 185, "a8": 185, "a9": 185, "a10": 185, "a11": 185, "a12": 185, "a13": 185, "kokkos_view": 186, "viewstr": 186, "view_wrap": 186, "pointer_to_wrapping_memori": 186, "bypass": 186, "allowpad": 186, "impl_defin": 186, "notabl": 187, "simd_mask": [188, 189, 191, 207], "where_express": 188, "kokkos_simd": [189, 190, 191, 207], "abi": [189, 190, 191, 207], "simd_abi": [189, 190], "fallback": [189, 190], "nativ": [189, 190, 209], "extract": [189, 190, 201, 233], "mask_typ": [189, 190, 207], "abi_typ": [189, 190], "element_aligned_tag": [189, 191, 207], "copy_from": [189, 191, 207], "copy_to": [189, 191, 207], "lh": [189, 190], "mag": 189, "sgn": 189, "native_simd": [189, 191, 207], "simd_typ": [189, 190, 191, 207], "zu": [189, 240], "simd": [190, 191, 215, 220, 242], "iff": 190, "native_simd_mask": [190, 207], "basi": [191, 194, 233], "const_where_express": 191, "scatter_to": 191, "gather_from": 191, "safer": 191, "domain": [191, 211], "chapter": [192, 194, 199, 201, 204, 205, 206, 208, 209, 229], "understand": [192, 194, 201, 203, 204, 208, 209, 240], "resolv": [192, 225], "histogram": 192, "create_histogram": 192, "try": [192, 200, 204, 209, 210, 212, 225], "lost": 192, "race": [192, 201, 204, 231], "particl": [192, 237, 238], "neighbour": 192, "forc": [192, 194, 199, 204, 206, 207, 238], "compute_forc": 192, "forceloop": 192, "neighbor": [192, 238], "particle_id": 192, "neighbour_id": 192, "some_contribut": 192, "colour": 192, "ii": [192, 201, 232], "iii": 192, "disadvantag": 192, "transfer": [192, 209], "fall": [192, 199, 202, 209, 228, 239], "uninterrupt": 192, "cycl": [192, 194, 225, 226, 229], "hinder": 192, "throughput": [192, 202], "createhistogram": 192, "scheme": 192, "find_indici": 192, "findindici": 192, "div": 192, "lshift": 192, "mod": 192, "mul": 192, "rshift": 192, "sub": [192, 208], "xor": 192, "histogram_atom": 192, "transpar": 192, "clever": 193, "constitut": [193, 199, 229], "tension": 193, "freedom": 193, "frustrat": [193, 207], "pain": 193, "deliber": 193, "accident": [193, 225], "breakag": [193, 225], "kokkos_": [193, 216], "chanc": 193, "inadvert": 193, "broken": 193, "kokkos_impl_": 193, "notic": [193, 218, 234, 235, 240], "period": [193, 225], "hous": 193, "prime": 193, "incomplet": 193, "newer": [193, 194, 221], "particularli": [193, 233], "problemat": [193, 241], "obei": 193, "interfer": [193, 204], "collison": 193, "prefac": 193, "myproject_": 193, "disambigu": 193, "cap": 193, "usual": [193, 194, 201, 204, 205, 209, 227], "syntact": 193, "revis": [193, 225], "behind": [193, 207, 232, 236], "publish": 193, "drive": [193, 207], "advantag": [193, 207, 236, 238], "workaround": [193, 227], "older": [193, 225], "recompil": 193, "against": [193, 194, 199, 210, 212, 227, 228, 241], "occasion": [193, 221], "overal": [193, 209, 229, 236], "migratori": 193, "evolutionari": 193, "ideal": [193, 225], "wrong": [193, 208, 209], "wast": [193, 209], "continu": [193, 194, 201, 202, 210, 225, 229, 234], "subdirectori": [193, 194], "union": 193, "fashion": [193, 208], "sole": [193, 202], "invok": [193, 204, 209, 216], "explain": [194, 199, 204, 209], "embed": [194, 202], "mix": [194, 201, 204, 209, 210, 221], "advic": 194, "mainli": [194, 209], "directori": [194, 225, 227, 229], "protect": [194, 199, 201, 202, 204, 207, 241], "prevent": [194, 199, 201, 209, 231], "kokkoscore_config": 194, "h": [194, 211, 230, 236], "mention": [194, 229], "compliant": [194, 240], "date": [194, 225, 227], "nightli": [194, 229], "readm": [194, 212, 227, 229], "repositori": [194, 225, 227, 228], "At": [194, 200, 203, 205, 207, 209, 225, 229, 240], "88": [194, 221], "nvc": [194, 221, 228], "rocm": [194, 221, 240], "xl": [194, 221, 227], "fujitsu": [194, 221], "arm": [194, 221], "linkag": [194, 221], "fopenmp": 194, "hwloc": [194, 200, 216, 229], "As": [194, 195, 199, 202, 204, 205, 207, 210, 229, 234, 240], "robust": [194, 210, 225], "strongli": [194, 209, 210], "cmakelist": [194, 210], "txt": [194, 200, 210], "find_packag": [194, 210, 216], "target_link_librari": [194, 210], "mytarget": [194, 210], "processor": [194, 199, 202, 204, 206, 229], "dkokkos_root": [194, 210], "lib64": 194, "especi": [194, 204, 205, 207, 226, 229, 235], "nvcc_wrapper": 194, "dcmake_cxx_compil": [194, 210], "bin": 194, "cmake_cxx_flag": 194, "propag": [194, 210], "illustr": [194, 199, 209, 210, 232], "add_subdirectori": [194, 210], "dir": [194, 216], "include_directori": 194, "kokkos_include_dirs_ret": 194, "arch": [194, 216], "mkdir": [194, 227], "cd": [194, 227], "srcdir": [194, 210], "dcmake_install_prefix": [194, 210], "my_install_fold": 194, "dkokkos_enable_openmp": [194, 210], "parti": [194, 201, 204, 210], "tpl": [194, 210], "altern": [194, 201, 207, 210, 216, 229], "download": [194, 210, 229], "env": [194, 210], "folder": [194, 210], "setup": [194, 210, 229, 236], "sh": [194, 210, 229], "variant": [194, 205, 209, 210, 225], "deactiv": [194, 210], "chosen": [194, 210], "exact": [194, 210], "info": [194, 210, 215, 216], "hash": [194, 209, 210], "human": [194, 210], "readabl": [194, 207, 210], "spec": [194, 210], "dii": 194, "wish": [194, 200], "downstream": [194, 210, 214], "almost": [194, 202, 207, 231], "myproject": 194, "myvers": 194, "idiosyncrasi": 194, "annoi": 194, "dspack_workaround": 194, "spack_workaround": 194, "spack_cxx": 194, "cmake_cxx_compil": 194, "cxx": [194, 232], "technolog": [194, 202, 218], "orient": [194, 238], "softwar": [194, 202, 207, 218, 225, 228], "framework": [194, 204, 211], "solut": [194, 202, 203, 207, 218, 225, 229, 233, 240], "larg": [194, 207, 209, 210, 216, 233, 239], "multiphys": 194, "scientif": [194, 202, 209], "problem": [194, 201, 202, 226, 229, 235], "organ": [194, 214, 216, 225, 226, 238], "stand": 194, "trilinos_enable_kokko": 194, "tpetra": 194, "infer": [194, 208], "trilinos_enable_openmp": 194, "ON": [194, 210, 216, 218], "autogener": 194, "cmake_c_compil": 194, "cmake_fortran_compil": 194, "kokkos_arch_": 194, "archcod": 194, "kokkos_arch_hsw": [194, 216], "haswel": [194, 229], "uvm": [194, 201, 203, 206, 209, 234, 240], "export": 194, "cuda_launch_block": [194, 210], "cuda_managed_force_device_alloc": [194, 210], "aris": [194, 218], "stabil": 194, "symbol": 194, "ln": 194, "kokkos_source_dir_overrid": 194, "kokkoskernel": 194, "kokkoskernels_source_dir_overrid": 194, "script": [194, 210, 227, 228], "ompi_cxx": 194, "openmpi": [194, 200], "digest": 194, "matter": [194, 204], "kokkos_link_depend": 194, "kokkos_cpp_depend": 194, "kokkos_cppflag": 194, "kokkos_cxxflag": 194, "kokkos_ldflag": 194, "kokkos_lib": 194, "tutori": [194, 202, 215], "kokkos_path": [194, 227], "IN": [194, 218], "root": [194, 207, 216], "cuda_path": 194, "toolkit": [194, 227], "kokkos_devic": 194, "kokkos_arch": [194, 207], "knl": [194, 216, 227], "knc": [194, 216], "snb": [194, 216], "hsw": [194, 216], "bdw": [194, 216], "kepler30": [194, 216], "kepler35": [194, 216], "kepler37": [194, 216], "maxwell50": [194, 216], "pascal60": [194, 216], "pascal61": [194, 216], "armv81": [194, 216], "bgq": [194, 216], "kokkos_use_tpl": 194, "experimental_memkind": 194, "kokkos_opt": 194, "aggressive_vector": 194, "kokkos_cuda_opt": [194, 205], "force_uvm": 194, "use_ldg": 194, "rdc": [194, 216], "enable_lambda": [194, 205], "hwloc_path": 194, "ye": [194, 200], "kokkos_cxx_standard": 194, "lib": [194, 200], "cxxflag": [194, 229], "emb": 194, "metaprogram": [194, 209], "shortcom": 194, "prepend": 194, "xcompil": 194, "shell": [194, 210, 229], "analyz": [194, 229], "ccbin": 194, "edit": [194, 204, 223, 225, 227, 229], "nvcc_wrapper_default_compil": 194, "peopl": [194, 203, 240], "modul": [194, 206, 227, 229, 232, 242], "icpc": 194, "pgc": 194, "attach": [194, 200, 224, 229, 239], "degrad": 194, "accommod": 195, "click": [195, 223], "head": [195, 239], "summat": 196, "parabl": 196, "minreduc": 196, "min_reduc": 196, "minloc_typ": 196, "minlocreduc": 196, "lminloc": 196, "reducer_typ": 196, "team_typ": 196, "team_minmaxloc": 196, "row_minmaxloc": 196, "thread_minmaxloc": 196, "gui": [196, 205, 242], "hurt": 196, "team_minmax": 196, "the_arrai": 197, "tr": [197, 198], "upd": [197, 198], "ndx": [197, 198], "myarrai": 198, "summyarrai": 198, "references_scalar": 198, "arraysumresult": 198, "exploit": [199, 233], "syntax": [199, 205, 208, 209, 216], "parallel_": [199, 206, 209, 213], "node": [199, 202, 206, 215, 229, 230, 239], "modern": [199, 210], "character": [199, 206], "higher": [199, 202], "orthogon": [199, 204], "heterogen": [199, 200, 206, 229, 237], "cluster": [199, 234], "multicor": [199, 202, 204, 206], "hyper": 199, "instruct": [199, 207, 212], "socket": [199, 210], "network": [199, 229], "llc": [199, 218], "l1": 199, "l2": 199, "sm": 199, "warp": [199, 201, 209], "wave": 199, "collabor": [199, 202], "adapt": [199, 203, 206, 240], "suggest": [199, 229], "tightli": [199, 233, 242], "gather": 199, "choic": [199, 201, 204, 209, 210], "sometim": [199, 209, 210, 226, 227], "flat": [199, 239], "grid": [199, 201, 208], "inter": [199, 204], "guess": 199, "n_workset": 199, "choos": [199, 200, 205, 206, 209], "sometag": 199, "action": [199, 225, 226, 228, 229], "team_memb": [199, 239], "coordin": 199, "everyon": 199, "consum": 199, "indirect": [199, 218], "workset": 199, "lifetim": 199, "recycl": 199, "cell": [199, 233], "team_shmem_s": 199, "double_s": 199, "team_shared_a": 199, "get_shmem": 199, "team_shared_b": 199, "160": 199, "kilobyt": 199, "gigabyt": 199, "mostli": [199, 201], "adjust": 199, "raw": [199, 205, 213], "shared_int_2d": 199, "shared_s": 199, "shmem_siz": 199, "layer": [199, 201, 202, 207, 232], "teamthreadloop": 199, "threadvectorloop": 199, "consciou": 199, "difficult": [199, 207, 233], "claus": [199, 205, 212, 218, 238], "catch": [199, 209, 225, 228], "loop_count": 199, "emploi": [199, 202, 204], "prepar": [199, 227], "stage": 199, "innermost": 199, "compris": [199, 204], "workset_s": 199, "vectoriz": 199, "decor": 199, "pragma": [199, 201, 205], "ivdep": 199, "repetit": [199, 207], "bodi": [199, 209, 221, 239], "shared_arrai": 199, "somefunct": [199, 201], "global_arrai": 199, "my_offset": 199, "inner_lsum": 199, "inner_": 199, "_finalize_": 200, "subpackag": [200, 209], "alphabet": [200, 215], "interpret": 200, "primarili": [200, 225, 226], "openacc": [200, 202], "sup": 200, "str": 200, "quot": [200, 207], "whitespac": 200, "delimit": [200, 209], "insensit": 200, "promis": [200, 204, 205, 206], "conflict": [200, 209], "mvapich": 200, "slurm": 200, "deriv": [200, 202, 203, 218, 240], "mpich": 200, "dash": 200, "underscor": 200, "kokkos_num_thread": 200, "set_xxx": 200, "xxx": 200, "has_xxx": 200, "get_xxx": 200, "setting": 200, "shut": 200, "down": [200, 203, 235, 240], "atexit": 200, "mpi_comm_self": 200, "adopt": [201, 206], "facilit": 201, "lift": 201, "inde": [201, 209, 238], "cumbersom": 201, "enter": [201, 202, 209, 239], "__host__": [201, 217], "__cuda_arch__": 201, "blockidx": 201, "threadidx": 201, "blockdim": 201, "omp_set_num_thread": 201, "bookkeep": 201, "ask": [201, 204, 206, 209, 225, 228], "princip": 201, "insur": 201, "app": 201, "placement": [201, 203, 240], "150": 201, "2d_arrai": 201, "200": [201, 209], "scenario": [201, 206, 207], "receiv": [201, 229], "straight": 201, "mykokkosfunct": 201, "host_spac": 201, "t_1d_device_view": 201, "t_2d_device_view": 201, "d_b": 201, "h_b": 201, "t_team": 201, "t_1d_view": 201, "t_3d_view": 201, "had": [201, 238], "whatev": 201, "a_old": 201, "unfortun": [201, 238, 240], "unrestrict": 201, "bring": [201, 205, 232], "massiv": 201, "penalti": [201, 209], "1000": [201, 205, 209], "uneven": 201, "polymorph": [201, 206, 211], "bla": [201, 209, 242], "matric": [201, 209], "dot": 201, "cubla": 201, "kokkos_have_cuda": 201, "call_cublas_dot": 201, "ptr_on_devic": 201, "extent_0": [201, 209], "cbla": 201, "call_cblas_dot": 201, "field": [202, 203, 225, 227, 233, 237, 240], "hpc": [202, 215, 225, 238], "verg": 202, "era": [202, 211], "angl": 202, "rate": 202, "flop": 202, "poor": 202, "workload": 202, "challeng": 202, "energi": 202, "mid": 202, "1990": [202, 205], "enjoi": 202, "seemingli": 202, "homogen": [202, 204, 229, 237], "decad": 202, "commun": [202, 208, 225, 226, 234, 236], "realiz": 202, "review": [202, 225, 228, 229], "broad": 202, "latenc": [202, 204, 209], "medium": 202, "graphic": [202, 204], "gp": 202, "toler": 202, "degre": [202, 206], "divers": 202, "interest": [202, 207, 222, 225], "heritag": 202, "offer": 202, "guidelin": [202, 217], "todai": [202, 204], "cilk": 202, "tbb": 202, "linux": 202, "contemporari": [202, 204], "opencl": 202, "Such": [202, 232, 233], "varieti": [202, 229, 237], "pose": 202, "reminisc": 202, "becam": 202, "invest": [202, 209], "seek": 202, "isol": 202, "fluctuat": 202, "coverag": 202, "supplementari": 202, "gradual": 202, "odditi": [203, 240], "face": [203, 208, 240], "subtl": [203, 240], "classwithvirtualfunct": [203, 240], "somebas": [203, 240], "virtualfunct": [203, 240], "hostclassinst": [203, 240], "deviceclassinst": [203, 240], "cudamalloc": [203, 240], "cudamemcpi": [203, 240], "cudamemcpyhosttodevic": [203, 240], "devicekernel": [203, 240], "somecudapolici": [203, 240], "glanc": [203, 240], "fine": [203, 209, 240], "crash": [203, 240], "nomin": [203, 240], "vpointer": [203, 240], "vtabl": [203, 240], "among": [203, 229, 240], "okai": [203, 240], "amongst": [203, 240], "hidden": [203, 209, 240], "derefer": [203, 240], "credit": [203, 240], "pablo": [203, 240], "aria": [203, 228, 240], "intro": [203, 240, 242], "faithfulli": [203, 240], "merrili": [203, 240], "pseudocod": [203, 240], "hostinst": [203, 240], "deviceinst": [203, 240], "deivc": [203, 240], "techniqu": [203, 240], "ugli": [203, 240], "repo": [203, 215, 240], "setafield": [203, 240], "somehostvalu": [203, 240], "naiv": [203, 207, 240], "wit": [203, 240], "said": [203, 208, 240], "solv": 203, "educ": [203, 240], "slack": [203, 214, 215, 225, 226, 228, 240], "aspect": [204, 206, 207, 229], "programm": [204, 205, 207, 209, 234], "distinct": 204, "exascal": [204, 211], "consult": [204, 209], "ang": 204, "elect": 204, "show": [204, 205, 206, 209, 227], "die": [204, 206], "acceler": [204, 205, 229, 236, 238], "reachabl": 204, "et": [204, 225], "al": [204, 211], "proxi": 204, "sandia": [204, 218, 229], "nation": [204, 218], "laboratori": 204, "lawrenc": 204, "berkelei": 204, "consider": 204, "finit": [204, 231, 233], "packag": [204, 211, 225, 227, 228, 233], "slower": [204, 209], "dram": 204, "volatil": [204, 206, 209, 213], "routin": [204, 232, 233], "collis": 204, "gain": 204, "topic": [204, 205, 225], "coher": [204, 209], "hennessi": 204, "paterson": 204, "weak": 204, "therebi": 204, "fifth": [204, 208], "quantit": 204, "morgan": 204, "kaufmann": 204, "tempt": 204, "author": [204, 211], "background": 204, "scientist": 204, "stick": 204, "proof": 204, "forbid": [204, 209], "implic": 204, "filesystem": 204, "overlap": [204, 230], "reproduc": [204, 218, 226], "awai": [204, 207, 208], "wonder": 204, "great": 204, "markup": 205, "unnecessari": [205, 209], "harmless": 205, "anonym": 205, "suppli": 205, "outermost": 205, "turn": [205, 207, 209], "surround": 205, "stack": [205, 209, 225, 228], "secondli": 205, "circumvent": 205, "harder": 205, "interoper": [205, 207, 220, 232, 242], "omp": [205, 229], "prior": [205, 209, 210, 218, 225, 226, 232, 236], "faster": 205, "trip": 205, "fewer": 205, "encapsul": [205, 206, 208], "semir": 205, "maxplu": 205, "x_": 205, "inf": 205, "columnsum": 205, "Be": 205, "convinc": 205, "numrow": 205, "numcol": 205, "cs": 205, "sequenti": [205, 209, 233], "blelloch": 205, "book": 205, "hi": [205, 226], "phd": 205, "dissert": [205, 207], "val_i": 205, "mit": 205, "press": 205, "necess": 205, "unus": [205, 238], "differenti": 205, "bartag": 205, "rabtag": 205, "foobar": [205, 222], "formul": 206, "vari": [206, 209], "figur": 206, "hybrid": 206, "pim": 206, "principl": [206, 209], "remot": [206, 215, 229, 242], "send": 206, "undetermin": 206, "prescript": 206, "primit": 206, "spin": 206, "dead": 206, "persist": 206, "diverg": 206, "inspir": 206, "vocabulari": [206, 229], "comfort": 206, "reflect": [206, 209], "rewrit": 206, "unoptim": 206, "optimis": 206, "histori": [207, 229], "struggl": 207, "blog": 207, "insight": 207, "drawback": [207, 238], "stanford": 207, "tim": 207, "folei": 207, "heart": 207, "black": 207, "box": 207, "matthia": 207, "kretz": 207, "deliv": 207, "vendor": [207, 225, 242], "fairli": 207, "pictur": 207, "clearli": 207, "odd": 207, "quirk": 207, "tag_typ": 207, "sx": 207, "sy": 207, "sz": 207, "sr": 207, "squar": 207, "emit": [207, 208], "4x": 207, "speedup": [207, 236], "skip": [207, 209], "troublesom": 207, "pitfal": [207, 209], "evenli": 207, "divis": 207, "cleaner": 207, "wide": [207, 209, 225, 229], "reach": [207, 209], "throughout": 207, "slight": 207, "quadratic_formula": 207, "x1": 207, "x2": 207, "discrimin": 207, "sqrt_discrimin": 207, "classic": [207, 221], "familiar": [207, 209, 225], "quadrat": 207, "formula": 207, "liter": 207, "mimic": 207, "roadmap": [207, 225], "regard": 207, "very_expensive_funct": 207, "statement": 207, "spend": [207, 209], "lot": [207, 209, 227], "pick": [208, 209, 225], "notat": 208, "vice": 208, "versa": 208, "cross": [208, 228], "plane": 208, "cube": 208, "n_0": 208, "n_1": 208, "n_": 208, "a_0": 208, "a_1": 208, "a_": 208, "a_j": 208, "n_j": 208, "handi": 208, "matlab": 208, "python": [208, 215, 227, 229, 242], "colon": 208, "fourth": 208, "elabor": 208, "a_sub": 208, "won": [208, 209], "cheaper": 208, "keyword": [208, 210, 213, 215], "easiest": [208, 210], "dens": [208, 215, 242], "inconveni": 208, "my_view_typ": 208, "my_subview_typ": 208, "my_subview_type_deduc": 208, "fast": [209, 227], "intim": 209, "factor": 209, "coder": 209, "tie": 209, "hard": 209, "evolv": 209, "reliev": 209, "burden": [209, 225], "ty": 209, "expert": 209, "easi": [209, 210], "ellips": 209, "asterisk": 209, "typecast": 209, "a_ptr": 209, "malloc": 209, "a0": 209, "arbitrarili": 209, "unprotect": 209, "badli": 209, "therefor": [209, 241], "advis": [209, 218], "deconstructor": 209, "disallow": 209, "indirectli": 209, "novic": 209, "THE": [209, 218, 227], "FOR": [209, 218], "IS": [209, 218], "NO": [209, 218], "rag": 209, "reorgan": 209, "v_outer": 209, "assigne": 209, "wors": 209, "yourself": [209, 227], "rid": 209, "inner_view_typ": 209, "outer_view_typ": 209, "numout": 209, "numinn": 209, "to_str": 209, "device_out": 209, "dispos": 209, "nonown": 209, "a_nonconst": 209, "nonconst": 209, "a_const": 209, "readonlyfunct": 209, "skew": 209, "parenthes": 209, "enclos": 209, "comma": 209, "a_ijk": 209, "rest": 209, "slow": 209, "leftmost": 209, "exempt": 209, "unwind": 209, "incorrect": 209, "100x50x4": 209, "50": 209, "200x50x4": 209, "300x60x4": 209, "300": 209, "java": 209, "s_1": 209, "s_2": 209, "s_3": 209, "dim1": 209, "extent_n": 209, "conserv": 209, "benefici": 209, "heavi": 209, "stringent": 209, "overflow": 209, "lapack": [209, 242], "idea": 209, "lda": 209, "morton": 209, "thereof": 209, "viewmap": 209, "renam": 209, "coalesc": 209, "callbla": 209, "callsomeblasfunct": 209, "invalid_argu": 209, "100000": 209, "biject": 209, "accessspac": 209, "viewallocatewithoutiniti": 209, "affin": 209, "memcopi": 209, "discourag": [209, 217], "circumv": 209, "defeat": 209, "polymorp": 209, "legaci": [209, 220], "legacyfunct": 209, "x_raw": 209, "len": 209, "myfunct": 209, "somelibraryfunct": 209, "reference_is_lvalu": 209, "sometrait": 209, "someothertrait": 209, "ca": 209, "a_atom": 209, "irregularli": 209, "a_ra": 209, "shorter": 209, "fault": 209, "prolifer": 209, "csr": 209, "spmatvec": 209, "ind": 209, "x_ra": 209, "y_i": 209, "accordingli": 209, "x_view": 209, "functionthattakeskokkosview": 209, "safest": 209, "tree": [210, 227, 239], "exceedingli": 210, "devil": 210, "kokkos_install_prefix": 210, "compiler_used_to_build_kokko": 210, "cmake_polici": 210, "cmp0074": 210, "cmake_build_instal": 210, "cmake_build_in_tre": 210, "kokkos_install_fold": 210, "craype_link_typ": 210, "miss": 210, "benchmark": [210, 229], "bytes_and_flop": 210, "nvlink": [210, 234], "displai": 210, "dev": [210, 227, 229], "articl": 211, "9485033": 211, "trott": [211, 218], "christian": [211, 218, 225], "lebrun": 211, "grandi\u00e9": 211, "damien": [211, 225], "arndt": 211, "daniel": 211, "ciesko": 211, "jan": 211, "dang": 211, "vinh": 211, "ellingwood": 211, "nathan": 211, "gayatri": 211, "rahulkumar": 211, "harvei": 211, "evan": 211, "hollman": 211, "daisi": 211, "ibanez": 211, "dan": 211, "liber": 211, "nevin": 211, "madsen": 211, "jonathan": 211, "mile": 211, "jeff": 211, "poliakoff": 211, "david": 211, "powel": 211, "ami": 211, "rajamanickam": 211, "sivasankaran": 211, "simberg": 211, "mikael": 211, "sunderland": 211, "turcksin": 211, "bruno": 211, "wilk": 211, "jeremiah": 211, "journal": 211, "ieee": 211, "transact": 211, "titl": 211, "2022": [211, 221], "volum": 211, "805": 211, "817": 211, "doi": 211, "1109": 211, "tpd": 211, "2021": [211, 221], "3097283": 211, "ecosystem": [211, 215], "9502936": 211, "berger": 211, "vergiat": 211, "luc": 211, "grandi": 211, "nader": 211, "gligor": 211, "milo": 211, "shipman": 211, "galen": 211, "womeldorff": 211, "geoff": 211, "scienc": [211, 228], "comprehens": [211, 221, 227], "mcse": 211, "3098509": 211, "carteredwards20143202": 211, "manycor": 211, "3202": 211, "3216": 211, "issn": 211, "0743": 211, "7315": 211, "1016": 211, "jpdc": 211, "07": [211, 227], "003": 211, "url": 211, "sciencedirect": 211, "pii": 211, "s0743731514001257": 211, "carter": 211, "edward": 211, "pull": [212, 225, 227, 229, 239], "licens": [212, 214, 215], "bsd": [212, 218], "commerci": 212, "req": 212, "activeexecutionmemoryspac": 213, "host_execution_spac": 213, "host_memory_spac": 213, "kokkos_restrict_execution_to_": 213, "data_spac": 213, "hip_safe_cal": 213, "create_inst": 213, "partition_mast": 213, "num_partit": 213, "partition_s": 213, "kokkos_openmp_inst": 213, "access_error": 213, "kokkos_hip_spac": 213, "hip_internal_safe_call_deprec": 213, "kokkos_hip_error": 213, "kokkos_openmp": 213, "openmpintern": 213, "validate_partit": 213, "getnam": 213, "getsectionid": 213, "kokkos_hip_parallel_team": 213, "kokkos_sycl_parallel_team": 213, "kokkos_openmptarget_exec": 213, "kokkos_cuda_parallel_team": 213, "kokkos_cudaspac": 213, "number_of_alloc": 213, "kokkos_hpx": 213, "masterlock": 213, "kokkos_attribute_nodiscard": 213, "amathfunct": 213, "is_reducer_typ": 213, "index_list_typ": 213, "always_use_kokkos_sort": 213, "finalize_al": 213, "withoutinitializing_t": 213, "wi": 213, "kokkos_thread_loc": 213, "thread_loc": 213, "is_view": 213, "cuda_internal_safe_call_deprec": 213, "cuda_safe_cal": 213, "trail": 213, "kokkosviewlabel": 213, "kokkos_macro": 213, "kokkos_atom": 213, "kokkos_arrai": 213, "kokkos_half": 213, "kokkos_tim": 213, "kokkos_sort": 213, "kokkos_bit": 213, "kokkos_errorreport": 213, "channel": [214, 225, 226, 228], "kokkosteam": [214, 215, 226], "email": 214, "whitelist": 214, "contact": [214, 218], "cmake": [214, 215, 221, 235], "dcmake_cxx_standard": 214, "batch": [215, 242], "pykokko": 215, "checkpoint": 215, "mdspan": 215, "p0009": 215, "stdbla": 215, "p1673": 215, "instal": [215, 216, 229, 234], "video": 215, "lectur": 215, "slide": 215, "faq": 215, "cite": 215, "sensit": 216, "recal": 216, "dkeyword_nam": 216, "kokkos_enable_compiler_warn": 216, "relax": 216, "kokkos_enable_cuda_ldg_intrins": 216, "um": 216, "kokkos_enable_deprecated_cod": 216, "kokkos_enable_exampl": 216, "kokkos_enable_large_mem_test": 216, "kokkos_enable_test": 216, "kokkos_cuda_dir": 216, "cuda_root": 216, "kokkos_hwloc_dir": 216, "hwloc_root": 216, "kokkos_memkind_dir": 216, "memkind_root": 216, "kokkos_libdl_dir": 216, "libdl_root": 216, "kokkos_librt_dir": 216, "librt_root": 216, "hpx_dir": 216, "hpx_root": 216, "config": [216, 227, 229], "kokkos_arch_n": 216, "kokkos_arch_a64fx": 216, "sve": 216, "kokkos_arch_amd_gfx906": 216, "kokkos_arch_amd_gfx908": 216, "kokkos_arch_amd_gfx90a": 216, "kokkos_arch_amd_gfx1030": 216, "kokkos_arch_amd_gfx1100": 216, "7900xt": 216, "gfx1100": 216, "kokkos_arch_amdavx": 216, "amdavx": 216, "armv80": 216, "armv8_thunderx": 216, "armv8_thunderx2": 216, "kokkos_arch_bdw": 216, "kokkos_arch_bgq": 216, "kepler32": 216, "kokkos_arch_knl": 216, "maxwell52": 216, "maxwell53": 216, "kokkos_arch_skx": 216, "skx": 216, "kokkos_arch_snb": 216, "kokkos_arch_spr": 216, "sapphir": 216, "turing75": 216, "volta70": 216, "volta72": 216, "kokkos_arch_wsm": 216, "wsm": 216, "kokkos_arch_zen": 216, "kokkos_arch_zen2": 216, "kokkos_arch_zen3": 216, "wherea": 216, "ahead": [216, 225], "amd_gfx1100": 216, "amd_gfx906": 216, "amd_gfx908": 216, "mi210": 216, "mi250": 216, "mi250x": 216, "amd_gfx90a": 216, "amd_gfx1030": 216, "hsa_xnack": 217, "explan": 217, "compatibilti": 217, "do_math": 217, "sqrt5": 217, "highli": 217, "z1": 217, "z2": 217, "z3": 217, "copyright": 218, "2020": 218, "ntess": 218, "contract": [218, 236], "de": [218, 225], "na0003525": 218, "govern": 218, "retain": 218, "redistribut": 218, "permit": 218, "materi": 218, "corpor": 218, "contributor": 218, "endors": 218, "permiss": [218, 227, 229], "BY": 218, "AS": 218, "warranti": 218, "BUT": 218, "OF": 218, "merchant": 218, "shall": [218, 226], "liabl": 218, "incident": 218, "exemplari": 218, "consequenti": 218, "damag": 218, "procur": [218, 225], "substitut": 218, "servic": 218, "loss": 218, "profit": 218, "busi": 218, "interrupt": 218, "theori": [218, 236], "liabil": 218, "strict": 218, "tort": 218, "neglig": 218, "IF": 218, "SUCH": 218, "crtrott": 218, "gov": 218, "introduct": [220, 229, 242], "unawar": 221, "appleclang": 221, "intelllvm": 221, "2023": 221, "pthread": [221, 227, 229], "wall": [221, 227], "wunus": 221, "wshadow": [221, 227], "pedant": [221, 227], "werror": [221, 227], "wsign": [221, 227], "wtype": [221, 227], "wignor": 221, "wempti": 221, "wclobber": 221, "wuniniti": 221, "master": [221, 227, 229], "rigor": 221, "some_var": 222, "frobrnic": 222, "foobat": 222, "frobnic": 222, "pencil": 223, "button": 223, "feedback": [224, 225, 228], "workflow": [224, 228, 231], "ramp": 225, "overarch": 225, "outdat": 225, "anymor": 225, "facto": 225, "month": [225, 227], "phase": [225, 228], "defect": 225, "upcom": 225, "seamless": 225, "anticip": 225, "soon": 225, "deploy": [225, 228], "engag": 225, "fund": [225, 228], "agenc": [225, 228], "monitor": 225, "hpe": 225, "kit": 225, "research": 225, "hackathon": 225, "chanel": 225, "bi": 225, "annual": 225, "usergroup": [225, 226], "influenc": 225, "sustain": 225, "mainten": [225, 229], "proven": 225, "audienc": 225, "committe": 225, "greatest": 225, "matur": 225, "train": 225, "bump": 225, "leadership": 225, "prioriti": [225, 226], "thrust": 225, "person": [225, 229], "refin": 225, "unassign": 225, "aren": 225, "weekli": [225, 226], "reassign": 225, "obsolet": 225, "changelog": [225, 227], "avenu": 225, "week": [225, 228], "mondai": 225, "urgent": 225, "triag": 225, "preliminari": 225, "agenda": 225, "kept": 225, "nucleu": 225, "ongo": 225, "ephemer": 225, "dai": [225, 227], "unpaid": 225, "longer": 225, "wherev": 225, "nda": 225, "held": 225, "wednesdai": 225, "2pm": 225, "pm": 225, "mt": 225, "00": [225, 227], "utc": 225, "zoom": 225, "six": 225, "candid": [225, 228], "cherri": 225, "nearing": 225, "delai": 225, "creation": 225, "ship": 225, "partner": [225, 226], "announc": 225, "invit": [225, 228], "onto": 225, "regress": 225, "unaddress": 225, "approxim": 225, "overview": [225, 233], "enhanc": [226, 227, 238], "priorit": 226, "mileston": 226, "slot": 226, "15feb18": 227, "x86": [227, 229], "043": 227, "196": 227, "128": 227, "pgi": 227, "103": 227, "174": 227, "cygwin": 227, "64bit": 227, "test_all_sandia": [227, 229], "trilino": [227, 228, 229, 233], "atdm": 227, "lammp": [227, 228], "sparc": 227, "master_histori": 227, "snapshot": [227, 229], "clone": [227, 229], "git": 227, "nohup": 227, "tail": 227, "watch": 227, "white": [227, 229], "shepard": [227, 229], "shepard_jenkins_run_script_serial_intel": [227, 229], "pristin": [227, 229], "rerun": 227, "token": [227, 242], "oldtag": 227, "newtag": 227, "04": 227, "rubi": 227, "gitthub_changelog_gener": 227, "indevelop": 227, "cat": 227, "md": 227, "cleanup": 227, "commit": [227, 229], "owner": [227, 229, 234], "clariti": [227, 238], "noteworthi": 227, "checkout": [227, 229], "majornumb": 227, "minornumb": 227, "weekssinceminornumberupd": 227, "sha1": 227, "append": [227, 239], "03": 227, "27": 227, "da314444": 227, "29ccb58a": 227, "amend": 227, "mm": [227, 232], "dd": 227, "yyyi": 227, "sem": [227, 229], "checkin": [227, 229], "disk": [227, 236], "ram": 227, "ceerws1113": 227, "trilinos_path": 227, "pwd": 227, "untrack": 227, "py": [227, 229], "backtrack": 227, "server": [228, 229], "approv": [228, 229], "jenkin": [228, 229], "travi": 228, "institut": 228, "durat": 228, "pipelin": 228, "verif": 228, "offici": [228, 229], "judg": 228, "thorough": 228, "wider": 228, "poc": 228, "reproduct": 228, "arborx": 228, "million": 228, "nnsa": 228, "offic": 228, "snl": 228, "empir": 228, "sparta": 228, "sierra": 228, "ornl": 228, "cabana": [228, 230], "anl": 228, "petsc": 228, "publicli": 228, "advertis": 228, "role": 229, "databas": 229, "fork": 229, "privileg": 229, "865": 229, "begun": 229, "conclus": 229, "haap": 229, "secondari": 229, "outag": 229, "scroll": 229, "ohpc": 229, "srn": 229, "apollo": 229, "bowman": 229, "elli": 229, "hansen": 229, "e5": 229, "2698": 229, "kokkos_dev": 229, "ride": 229, "p8": 229, "tuleta": 229, "fireston": 229, "garrison": 229, "tesla": 229, "k40": 229, "k80": 229, "p100": 229, "36": 229, "sullivan": 229, "mac": 229, "bed": 229, "submiss": 229, "connect": 229, "webcar": 229, "intranet": 229, "staff": 229, "leader": 229, "assist": 229, "csri": 229, "csu": 229, "administ": 229, "daili": 229, "regimen": 229, "suit": 229, "job": 229, "dashboard": 229, "identif": 229, "terminolog": 229, "joint": 229, "simul": [229, 234, 237, 238], "qthread": 229, "briefli": 229, "generate_makefil": 229, "bash": 229, "makefil": 229, "spot": 229, "jenkins_test_driv": 229, "testing_script": 229, "sha": 229, "accomplish": [229, 233], "prepare_trilinos_repo": 229, "shepard_jenkins_run_script_pthread_intel": 229, "workspac": 229, "white_run_jenkins_script_cuda": 229, "white_run_jenkins_script_omp": 229, "test_kokkos_master_develop_promot": 229, "checkintest": 229, "flavor": 229, "speed": 229, "central": 229, "equat": 229, "viz": 229, "accuraci": 229, "replica": 229, "nearli": 229, "hundr": 229, "unit_test": 229, "performance_test": 229, "perf_test": 229, "scrutini": 229, "inadequaci": 229, "defici": 229, "halo": 230, "averag": 230, "interop": [230, 242], "window": 230, "demonstr": [231, 232, 233, 236], "quantiti": 231, "ratio": 231, "ultim": 231, "count_adjacent_el": 231, "elements_to_nod": 231, "number_of_nod": 231, "elements_per_nod": 231, "scatter_elements_per_nod": 231, "create_scatter_view": 231, "access_elements_per_nod": 231, "node_of_el": 231, "sum_to_nod": 231, "element_valu": 231, "node_valu": 231, "scatter_node_valu": 231, "access_node_valu": 231, "average_to_nod": 231, "flcl": 232, "daxpi": 232, "ndarrai": 232, "flcl_ndarray_t": 232, "dope": 232, "flatten": [232, 233], "_flcl_nd_array_t": 232, "flcl_ndarray_max_rank": 232, "f90": 232, "nd_array_t": 232, "c_size_t": 232, "nd_array_max_rank": 232, "c_ptr": 232, "procedur": 232, "to_nd_arrai": 232, "to_nd_array_l_1d": 232, "to_nd_array_i32_1d": 232, "to_nd_array_i64_1d": 232, "to_nd_array_r32_1d": 232, "to_nd_array_r64_1d": 232, "to_nd_array_l_2d": 232, "to_nd_array_i32_2d": 232, "to_nd_array_i64_2d": 232, "to_nd_array_r32_2d": 232, "to_nd_array_r64_2d": 232, "to_nd_array_l_3d": 232, "to_nd_array_i32_3d": 232, "to_nd_array_i64_3d": 232, "to_nd_array_r32_3d": 232, "to_nd_array_r64_3d": 232, "view_from_ndarrai": 232, "axpi": 232, "flcl_mod": 232, "c_doubl": 232, "allocat": 232, "f_y": 232, "c_y": 232, "alpha": 232, "subroutin": 232, "iso_c_bind": 232, "inout": 232, "f_axpi": 232, "nd_arrai": 232, "earlier": 232, "c_axpi": 232, "nd_array_i": 232, "nd_array_x": 232, "tensor": 233, "pde": 233, "inputdata": 233, "inputfield": 233, "outputfield": 233, "tripl": 233, "paral": 233, "for_all_cel": 233, "merit": 233, "notion": 233, "natur": 233, "mdr_for_all_cel": 233, "wiki": 233, "intrepid2": 233, "intrepid2_arraytoolsdef": 233, "intrepid": 233, "complementari": 234, "scalabl": 234, "walk": 234, "source_rank": 234, "destination_rank": 234, "number_of_doubl": 234, "my_rank": 234, "mpi_comm": 234, "comm": 234, "mpi_comm_world": 234, "mpi_comm_rank": 234, "mpi_send": 234, "mpi_doubl": 234, "mpi_recv": 234, "quit": 234, "pcie": 234, "unstructur": 234, "sent": 234, "redudantli": 234, "filter": 234, "subset_scann": 234, "keys_in": 234, "desired_key_in": 234, "subset_indices_in": 234, "m_kei": 234, "m_desired_kei": 234, "m_subset_indic": 234, "final_pass": 234, "is_in": 234, "find_subset": 234, "desired_kei": 234, "subset_s": 234, "local_sum": 234, "subset_indic": 234, "transmit": 234, "pack_messag": 234, "all_element_data": 234, "kokkos_enable_deprecated_code_4": 235, "tediou": 235, "appar": 235, "acess": 235, "spell": [235, 240], "myview": 235, "c_style_memori": 235, "c_style_alloc": 235, "concur": 236, "stagger": 236, "littl": 236, "hostexecspac": 236, "deviceexecspac": 236, "device_range_polici": 236, "host_range_polici": 236, "viewvectortyp": 236, "viewmatrixtyp": 236, "xval": 236, "init_src_view": 236, "p_x": 236, "p_a": 236, "init_a": 236, "init_x": 236, "h_x": 236, "h_y": 236, "nrepeat": 236, "synch": 236, "yax": 236, "temp2": 236, "ini_src_view": 236, "occupi": 236, "attent": 236, "paid": 236, "opportun": [236, 238], "range_polici": 236, "v_r": 236, "v_r1": 236, "h_v": 236, "get_initial_st": 236, "get_rhs_func": 236, "serialize_st": 236, "view_r": 236, "exhibit": 237, "cabana_soa": 237, "vectorlength": 237, "membertyp": 237, "cabana_aosoa": 237, "memorymanag": 237, "carri": 237, "evolut": 238, "particleinteract": 238, "particleposit": 238, "po": 238, "particleforc": 238, "particleneighbor": 238, "pairforc": 238, "parallelis": 238, "rectifi": 238, "qualiti": 238, "plai": 238, "tagphase1": 238, "tagphase2": 238, "compute1": 238, "compute2": 238, "prescrib": 239, "predetermin": 239, "surrog": 239, "roll": 239, "b1": 239, "b2": 239, "b3": 239, "fib": 239, "wait_list": 239, "a_f1": 239, "b_f1": 239, "b_f2": 239, "a_f2": 239, "tm": 239, "vertex": 239, "subteam": 239, "visit": 239, "vertic": 239, "exce": 239, "threshold": 239, "unvisit": 239, "frontier": 239, "st": 239, "edg": 239, "greatli": 239, "neccessari": 240, "myloop": 240, "kokkos_class_lambda": 240, "implementationptr": 240, "make_shar": 240, "oh": 240, "strictli": 240, "nominmax": 241, "uninterpret": 241, "redefin": 241, "dnominmax": 241, "multidim": 242, "safeti": 242, "pga": 242, "analysi": 242, "linear": 242, "algebra": 242, "solver": 242}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [185, 5, 1, "_CPPv410HostMirror", "HostMirror"], [145, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [145, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [145, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [145, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [145, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [145, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [145, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [145, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [145, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [145, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [145, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [147, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [147, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [147, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [147, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [147, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [147, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [147, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [147, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [147, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [147, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [147, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [147, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [147, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [147, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [147, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [147, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [147, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [147, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [147, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [147, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [181, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [133, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [133, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [133, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [133, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [133, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [133, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [133, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [185, 5, 1, "_CPPv412array_layout", "array_layout"], [185, 5, 1, "_CPPv415const_data_type", "const_data_type"], [185, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [185, 5, 1, "_CPPv410const_type", "const_type"], [185, 5, 1, "_CPPv416const_value_type", "const_value_type"], [185, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [185, 5, 1, "_CPPv411device_type", "device_type"], [185, 5, 1, "_CPPv49dimension", "dimension"], [185, 5, 1, "_CPPv415execution_space", "execution_space"], [185, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [185, 5, 1, "_CPPv412memory_space", "memory_space"], [185, 5, 1, "_CPPv413memory_traits", "memory_traits"], [185, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [185, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [185, 5, 1, "_CPPv414non_const_type", "non_const_type"], [185, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [185, 5, 1, "_CPPv412pointer_type", "pointer_type"], [185, 5, 1, "_CPPv414reference_type", "reference_type"], [185, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [185, 5, 1, "_CPPv49size_type", "size_type"], [185, 5, 1, "_CPPv410specialize", "specialize"], [185, 5, 1, "_CPPv410value_type", "value_type"], [109, 6, 1, "_CPPv4I00E4BAnd", "BAnd"], [109, 7, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [109, 7, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [109, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [109, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [109, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [109, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [109, 7, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [109, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [109, 7, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [109, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [109, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [109, 10, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [109, 7, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [109, 10, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [109, 10, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [109, 7, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [110, 6, 1, "_CPPv4I00E3BOr", "BOr"], [110, 7, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [110, 7, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [110, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [110, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [110, 9, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [110, 9, 1, "_CPPv4I00E3BOr", "BOr::Space"], [110, 7, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [110, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [110, 7, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [110, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [110, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [110, 10, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [110, 7, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [110, 10, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [110, 10, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [110, 7, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [222, 6, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [222, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [222, 8, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [222, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [222, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [222, 10, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [222, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [222, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [222, 8, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [222, 10, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [222, 10, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [222, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [222, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 6, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 7, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 7, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 10, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 7, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 7, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 10, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 10, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 10, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 10, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 10, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 10, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 10, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 10, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 10, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 10, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 10, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 10, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 7, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 6, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 10, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 10, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 10, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 10, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 10, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 10, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 10, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 10, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 8, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 10, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 10, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 10, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 10, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 8, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 10, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 10, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 10, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 10, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 10, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 6, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 10, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 7, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 10, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 7, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 10, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 7, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 7, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 10, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 10, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 10, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 8, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 7, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 7, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 7, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 10, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 7, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [131, 6, 1, "_CPPv413InitArguments", "InitArguments"], [131, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [131, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [131, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [131, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [131, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [131, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [131, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [132, 6, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [132, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [132, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [132, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [132, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [132, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [132, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [132, 8, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [178, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [178, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [178, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [178, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [178, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [178, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [178, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [178, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [178, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [178, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [178, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [178, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [178, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [178, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [178, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [178, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [178, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [178, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [178, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [178, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [178, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [178, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [178, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [178, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [178, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [111, 6, 1, "_CPPv4I00E4LAnd", "LAnd"], [111, 7, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [111, 7, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [111, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [111, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [111, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [111, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [111, 7, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [111, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [111, 7, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [111, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [111, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [111, 10, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [111, 7, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [111, 10, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [111, 10, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [111, 7, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [112, 6, 1, "_CPPv4I00E3LOr", "LOr"], [112, 7, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [112, 7, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [112, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [112, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [112, 9, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [112, 9, 1, "_CPPv4I00E3LOr", "LOr::Space"], [112, 7, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [112, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [112, 7, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [112, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [112, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [112, 10, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [112, 7, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [112, 10, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [112, 10, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [112, 7, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [179, 6, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [179, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [179, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [179, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [179, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [179, 10, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [179, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [179, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [179, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [179, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [180, 6, 1, "_CPPv411LayoutRight", "LayoutRight"], [180, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [180, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [180, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [180, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [180, 10, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [180, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [180, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [180, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [180, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [181, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [181, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [181, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [181, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [149, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [149, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [149, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [149, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [149, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [149, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [149, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [149, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [149, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [149, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [149, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [149, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [149, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [149, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [149, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [149, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [149, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [149, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [149, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [149, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [149, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [113, 6, 1, "_CPPv4I00E3Max", "Max"], [113, 7, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [113, 7, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [113, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [113, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [113, 9, 1, "_CPPv4I00E3Max", "Max::Scalar"], [113, 9, 1, "_CPPv4I00E3Max", "Max::Space"], [113, 7, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [113, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [113, 7, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [113, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [113, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [113, 10, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [113, 7, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [113, 10, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [113, 10, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [113, 7, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [114, 6, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [114, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [114, 7, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [114, 7, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [114, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [114, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [114, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [114, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [114, 7, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [114, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [114, 7, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [114, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [114, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [114, 10, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [114, 7, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [114, 10, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [114, 10, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [114, 7, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [115, 6, 1, "_CPPv4I00E3Min", "Min"], [115, 7, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [115, 7, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [115, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [115, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [115, 9, 1, "_CPPv4I00E3Min", "Min::Scalar"], [115, 9, 1, "_CPPv4I00E3Min", "Min::Space"], [115, 7, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [115, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [115, 7, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [115, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [115, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [115, 10, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [115, 7, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [115, 10, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [115, 10, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [115, 7, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [116, 6, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [116, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [116, 7, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [116, 7, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [116, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [116, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [116, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [116, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [116, 7, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [116, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [116, 7, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [116, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [116, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [116, 10, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [116, 7, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [116, 10, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [116, 10, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [116, 7, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [117, 6, 1, "_CPPv4I00E6MinMax", "MinMax"], [117, 7, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [117, 7, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [117, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [117, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [117, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [117, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [117, 7, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [117, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [117, 7, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [117, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [117, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [117, 10, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [117, 7, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [117, 10, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [117, 10, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [117, 7, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [118, 6, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [118, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [118, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [118, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [118, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [118, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [118, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [118, 7, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [118, 7, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [118, 10, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [118, 7, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [118, 10, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [118, 10, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [118, 7, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [119, 6, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [119, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [119, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [119, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [119, 8, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [120, 6, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [120, 9, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [120, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [120, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [120, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [120, 8, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [150, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [150, 8, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [150, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [150, 8, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [121, 6, 1, "_CPPv4I00E4Prod", "Prod"], [121, 7, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [121, 7, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [121, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [121, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [121, 9, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [121, 9, 1, "_CPPv4I00E4Prod", "Prod::Space"], [121, 7, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [121, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [121, 7, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [121, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [121, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [121, 10, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [121, 7, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [121, 10, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [121, 10, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [121, 7, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [160, 11, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection"], [160, 8, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection::sectionName"], [151, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [151, 11, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [151, 11, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [151, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [151, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [151, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [122, 7, 1, "_CPPv47ReducerR10value_type", "Reducer"], [122, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [122, 8, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [122, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 6, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 8, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 10, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 10, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 10, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 10, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 10, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 10, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 8, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [161, 11, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion"], [161, 8, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion::regionName"], [124, 6, 1, "_CPPv4I00E3Sum", "Sum"], [124, 9, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [124, 9, 1, "_CPPv4I00E3Sum", "Sum::Space"], [124, 7, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [124, 7, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [124, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [124, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [124, 7, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [124, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [124, 7, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [124, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [124, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [124, 10, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [124, 7, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [124, 10, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [124, 10, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [124, 7, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [152, 6, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [152, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [152, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [152, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [152, 10, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [152, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [152, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [152, 10, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [152, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [152, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [152, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [152, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [152, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [152, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [152, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [152, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [152, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [152, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [152, 7, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [152, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [152, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [152, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [152, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [152, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [152, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [152, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [152, 7, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [152, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [152, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [153, 6, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [153, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [153, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [153, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [153, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [153, 10, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [153, 10, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [153, 10, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [153, 10, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [153, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [153, 10, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [153, 10, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [153, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [153, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [153, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [153, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [153, 8, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [153, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [153, 8, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [153, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [153, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [153, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [153, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [153, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [153, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [153, 8, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [153, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [153, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [153, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [153, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [153, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [153, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [153, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [153, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [153, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [153, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [153, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [153, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [153, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [153, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [153, 8, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [153, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [153, 10, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [154, 6, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [154, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [154, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [154, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [150, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [150, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [150, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [150, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [150, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [150, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [150, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [156, 6, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [156, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [156, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [156, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [158, 6, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [158, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [158, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [158, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [150, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [150, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [150, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [150, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [150, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [150, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [150, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 6, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 8, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 7, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 7, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 7, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 7, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 8, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 7, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 7, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 6, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 6, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [185, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [185, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [185, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [185, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [185, 11, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [185, 11, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [185, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [185, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [185, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [185, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [185, 11, 1, "_CPPv44ViewRR4View", "View"], [185, 11, 1, "_CPPv44Viewv", "View"], [185, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [185, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [185, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [185, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [185, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [185, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [185, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [185, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [185, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [185, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [185, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [185, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [185, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [185, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [185, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [185, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [185, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [185, 8, 1, "_CPPv44ViewRR4View", "View::rhs"], [185, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [185, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [185, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [185, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [181, 10, 1, "_CPPv412array_layout", "array_layout"], [185, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [185, 8, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [105, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [105, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [105, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [106, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [105, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [105, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [105, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [106, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [105, 11, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [105, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [105, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [105, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [100, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange"], [100, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::T"], [100, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::comparison_value"], [100, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::new_value"], [100, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::ptr_to_value"], [101, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong"], [101, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::T"], [101, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::comparison_value"], [101, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::new_value"], [101, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::ptr_to_value"], [105, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [105, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [105, 8, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [106, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [102, 11, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange"], [102, 9, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::T"], [102, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::new_value"], [102, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::ptr_to_value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [103, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [103, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [103, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [103, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [103, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [103, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [103, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [103, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [105, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [105, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [105, 8, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [104, 11, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load"], [104, 9, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::T"], [104, 8, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::ptr_to_value"], [106, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [106, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [106, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [105, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [105, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [105, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [106, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [105, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [105, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [105, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [106, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [105, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [105, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [105, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [105, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [106, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [106, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [106, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [106, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [106, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [106, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [107, 11, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [107, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [107, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [107, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [105, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [105, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [105, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [105, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [106, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [106, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [106, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [106, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 7, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 7, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 7, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [167, 6, 1, "_CPPv4I0E7complex", "complex"], [167, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [167, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [167, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [167, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [167, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [167, 7, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [167, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [167, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [167, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [167, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [167, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [167, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [167, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [167, 8, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [167, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [167, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [167, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [167, 7, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [167, 7, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [167, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [167, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [167, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [167, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [167, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [167, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [167, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [167, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [167, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [167, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [167, 8, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [167, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [167, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [167, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [167, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [167, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [167, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [167, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [167, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [167, 8, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [167, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [167, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [167, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [167, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [167, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [167, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [167, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [167, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [167, 8, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [167, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [167, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [167, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [167, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [167, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [167, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [167, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [167, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [167, 8, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [167, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [167, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [167, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [167, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [167, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [167, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [167, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [167, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [167, 8, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [167, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [167, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [167, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [167, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [167, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [167, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [167, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [167, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [167, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [167, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [167, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [167, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [167, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [167, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [167, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [167, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [167, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [167, 8, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [167, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [167, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [167, 7, 1, "_CPPv4N7complex4realEv", "complex::real"], [167, 7, 1, "_CPPv4NK7complex4realEv", "complex::real"], [167, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [167, 10, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [177, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [177, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [177, 11, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror"], [177, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [177, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [177, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [177, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [177, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewCtorArgs"], [177, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [177, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [177, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewType"], [177, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [177, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [177, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::arg_prop"], [177, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [177, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [177, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [177, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [177, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::v"], [177, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [177, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [177, 11, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view"], [177, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [177, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [177, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [177, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [177, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewCtorArgs"], [177, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [177, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [177, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewType"], [177, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [177, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [177, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::arg_prop"], [177, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [177, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [177, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [177, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::src"], [177, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [177, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [177, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [177, 11, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy"], [177, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [177, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewCtorArgs"], [177, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [177, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewType"], [177, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::arg_prop"], [177, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [177, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::src"], [185, 11, 1, "_CPPv4NK4dataEv", "data"], [181, 12, 1, "_CPPv49dimension", "dimension"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 7, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [185, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [185, 8, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [185, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [185, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [185, 8, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [185, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [222, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [222, 8, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [122, 7, 1, "_CPPv4NK4initER10value_type", "init"], [122, 8, 1, "_CPPv4NK4initER10value_type", "init::val"], [185, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [185, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [185, 8, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [181, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [122, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [122, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [122, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [127, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [127, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [127, 8, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [128, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [128, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [128, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [128, 8, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [128, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [129, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [129, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [129, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [129, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [185, 11, 1, "_CPPv4NK5labelEv", "label"], [185, 11, 1, "_CPPv4NK6layoutEv", "layout"], [185, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [185, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [185, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [185, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [185, 8, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [181, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [181, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [185, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [222, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [185, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [185, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [222, 9, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [181, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [181, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [181, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [181, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [162, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [162, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [162, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [162, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [162, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [162, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [162, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [162, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [162, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [162, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weigths"], [185, 11, 1, "_CPPv44rankv", "rank"], [185, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [122, 7, 1, "_CPPv4NK9referenceEv", "reference"], [185, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [185, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [185, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [185, 8, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [185, 11, 1, "_CPPv4NK4sizeEv", "size"], [185, 11, 1, "_CPPv4NK4spanEv", "span"], [185, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [160, 11, 1, "_CPPv45startv", "start"], [160, 11, 1, "_CPPv44stopv", "stop"], [185, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [185, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [181, 12, 1, "_CPPv46stride", "stride"], [185, 8, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [185, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [185, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [185, 8, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [185, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [185, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [185, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [185, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [185, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [185, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [185, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [185, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [184, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [184, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [184, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [184, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [184, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [185, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 6, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 10, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 10, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 10, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 8, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 10, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 7, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 7, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 10, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 8, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 10, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 8, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 8, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 10, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [122, 7, 1, "_CPPv4NK4viewEv", "view"], [186, 11, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc"], [186, 9, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::Args"], [186, 8, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::args"], [186, 11, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap"], [186, 9, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::Args"], [186, 8, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::args"], [160, 11, 1, "_CPPv4D0v", "~ProfilingSection"], [161, 11, 1, "_CPPv4D0v", "~ScopedRegion"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:class", "7": "cppkokkos:kokkosinlinefunction", "8": "cppkokkos:functionParam", "9": "cppkokkos:templateParam", "10": "cppkokkos:type", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "class", "C++ class"], "7": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "8": ["cppkokkos", "functionParam", "C++ function parameter"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "type", "C++ type"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 188, 193, 225], "algorithm": [0, 3, 72, 213, 239], "random": [1, 209], "number": [1, 231], "rand": 1, "gener": [1, 32, 88, 130, 194, 228], "synopsi": [1, 2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 136, 141, 142, 143, 150, 151, 155, 157, 159, 163, 175], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 122, 131, 132, 133, 134, 135, 138, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 165, 166, 171, 173, 175, 176, 178, 181, 182, 183, 184, 185, 189, 190, 191, 197, 198, 200, 204, 205, 207, 222, 230, 236, 239], "sort": [2, 10], "nest": [2, 84, 85, 199], "polici": [2, 85, 90, 95, 149, 151, 199, 206], "team": [2, 33, 43, 44, 57, 58, 65, 90, 193, 199, 206], "thread": [2, 199, 201, 204], "level": [2, 85], "addit": [2, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124], "inform": [2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 194], "sampl": 2, "output": 2, "std": [3, 201], "iter": [4, 81], "kokko": [4, 86, 87, 91, 95, 130, 136, 150, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 193, 194, 201, 203, 204, 209, 210, 211, 213, 215, 221, 224, 225, 227, 228, 229, 232, 233, 239, 241], "experiment": [4, 130, 136, 169, 189, 190, 191], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 133, 137, 138, 139, 164, 166, 170, 171, 173, 174], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 135, 144, 145, 146, 147, 149, 151, 178, 185, 189, 190, 191, 237], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 122, 134, 135, 144, 145, 146, 147, 162, 176, 178, 221, 225, 226, 235], "distanc": 4, "return": [4, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": [5, 170], "maximum": [5, 170], "modifi": [6, 7], "sequenc": [6, 7, 239], "non": [7, 74, 130, 136, 201, 222, 237], "numer": [8, 89, 140], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 100, 101, 102, 103, 104, 105, 106, 107, 127, 128, 129, 133, 150, 152, 153, 154, 155, 156, 157, 158, 159, 167, 176, 177, 179, 180, 181, 182, 183, 184, 186, 222], "adjacent_find": 12, "all_of": 13, "any_of": 14, "copi": [15, 130, 144, 178, 209], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 209], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "interfac": [33, 43, 44, 57, 58, 65, 74, 78, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 132, 134, 135, 144, 145, 146, 147, 149, 154, 156, 158, 162, 176, 178, 185, 189, 190, 191, 222], "overload": [33, 43, 44, 57, 58, 65], "set": [33, 43, 44, 57, 58, 65, 88], "accept": [33, 43, 44, 57, 58, 65], "execut": [33, 43, 44, 57, 58, 65, 85, 88, 90, 130, 149, 151, 194, 199, 204, 205, 206, 209, 236], "space": [33, 43, 44, 57, 58, 65, 88, 93, 94, 130, 136, 194, 204, 205, 206, 209], "handl": [33, 43, 44, 57, 58, 65], "valu": [33, 43, 44, 57, 58, 65, 189, 190, 231], "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 235], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 108, 122, 196, 197, 198, 205], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 209, 213], "core": [72, 83, 213], "bitset": 74, "class": [74, 122, 141, 142, 143, 149, 151, 163, 175, 185, 213], "constbitset": 74, "member": [74, 122, 125, 130, 136, 141, 142, 143, 149, 151, 163, 175, 185, 213, 222, 237], "function": [74, 122, 126, 130, 136, 139, 141, 142, 143, 148, 163, 185, 189, 191, 192, 203, 205, 209, 213, 217, 222, 237, 240], "dualview": 75, "usag": [75, 76, 80, 82, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 133, 141, 142, 143, 146, 147, 149, 150, 151, 153, 155, 157, 160, 161, 162, 167, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 233, 236, 239], "dynrankview": 76, "assign": [76, 125, 163, 185, 191, 207], "rule": [76, 185, 209], "dynamicview": 77, "offsetview": 78, "construct": [78, 130, 209], "scatterview": [79, 192, 231], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 130, 144, 194, 205, 209, 210, 230, 232, 233, 235, 239], "default": [81, 130, 209], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 199, 201, 207], "detect": [84, 130], "idiom": [84, 209], "an": [84, 87, 148, 205, 207, 226], "express": 84, "typedef": [84, 122, 130, 136, 141, 142, 143, 163, 185, 189, 190], "top": [85, 239], "common": [85, 139, 149, 151], "argument": [85, 149, 151, 200], "all": [85, 130, 149, 151, 165], "initi": [86, 135, 200, 209, 233], "final": [86, 134, 200], "scopeguard": [86, 133], "concept": 87, "introduct": [87, 202], "approach": 87, "overview": 87, "The": [87, 203, 207, 215, 235, 240], "executionspac": 87, "implement": [87, 233], "deviceexecutionspac": 87, "some": [87, 178], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 148], "teammemb": 87, "functor": [87, 95, 205, 239], "A": [87, 208, 227], "deleg": 87, "macro": [88, 193, 213], "version": [88, 221], "backend": [88, 216, 229], "option": [88, 151, 216], "c": [88, 126, 193, 201, 208, 215, 225, 238], "standard": [88, 209, 215], "third": [88, 216], "parti": [88, 216], "librari": [88, 201, 207, 215, 216], "architectur": [88, 216], "parallel": [90, 95, 199, 205, 233], "dispatch": [90, 205], "pattern": [90, 95, 206, 236, 239], "tag": [90, 205, 238], "calcul": 90, "profil": [91, 160, 161], "scopedregion": [91, 161], "profilingsect": [91, 160], "stl": 92, "compat": [92, 193, 225], "issu": [92, 210, 217, 225, 226], "access": [93, 185, 189, 190, 209], "task": [95, 239], "Will": 95, "work": [95, 203, 215, 236, 239, 240], "my": [95, 203, 240], "problem": [95, 203, 209, 233, 240], "basic": [95, 199, 207], "predecessor": 95, "schedul": 95, "wait": 95, "aggreg": 95, "prioriti": 95, "trait": [96, 140, 192, 206, 209], "is_array_layout": 96, "is_execution_polici": 96, "is_memory_spac": 96, "is_memory_trait": 96, "is_reduc": 96, "is_spac": 96, "util": 97, "view": [98, 178, 185, 187, 201, 208, 209], "relat": [98, 215], "atom": [99, 192, 209], "atomic_compare_exchang": 100, "atomic_compare_exchange_strong": 101, "atomic_exchang": 102, "atomic_fetch_": 103, "op": [103, 105, 106], "atomic_load": 104, "atomic_": [105, 106], "_fetch": 106, "atomic_stor": 107, "built": [108, 122, 196, 197], "band": 109, "bor": 110, "land": 111, "lor": 112, "max": [113, 189], "maxloc": 114, "min": [115, 189], "minloc": 116, "minmax": 117, "minmaxloc": 118, "minmaxlocscalar": 119, "minmaxscalar": 120, "prod": 121, "reducerconcept": 122, "public": [122, 125, 141, 142, 143, 149, 151, 163, 175, 185, 213], "constructor": [122, 130, 136, 141, 142, 143, 149, 151, 163, 175, 185, 189, 190], "In": [122, 196, 197], "reduct": [123, 190, 195, 205, 207], "scalar": [123, 197], "type": [123, 187, 197, 207, 208, 209, 213], "sum": [124, 231], "vallocscalar": 125, "variabl": [125, 200], "oper": [125, 170, 189, 190, 192, 207, 232, 233, 236, 238], "style": 126, "memori": [126, 136, 192, 199, 201, 204, 206, 209], "manag": [126, 201, 209, 229], "kokkos_fre": 127, "kokkos_malloc": 128, "kokkos_realloc": 129, "cuda": [130, 194, 201, 210, 234], "hip": [130, 217], "sycl": 130, "hpx": 130, "openmp": [130, 201], "openmptarget": 130, "serial": [130, 233, 236], "executionspaceconcept": 130, "alias": [130, 213], "base": 130, "configur": [130, 194, 210], "defaultexecutionspac": 130, "defaulthostexecutionspac": 130, "veri": 130, "simplest": 130, "Not": 130, "Being": 130, "more": 130, "facil": [130, 136], "initargu": 131, "see": [131, 132, 133, 135, 138, 139, 166, 170], "also": [131, 132, 133, 135, 138, 139, 166, 170], "initializationset": 132, "semant": [134, 135, 144, 145, 146, 147, 162, 178], "cudaspac": 136, "cudahostpinnedspac": 136, "cudauvmspac": 136, "hipspac": 136, "hiphostpinnedspac": 136, "hipmanagedspac": 136, "sycldeviceusmspac": 136, "syclhostusmspac": 136, "syclsharedusmspac": 136, "hostspac": 136, "sharedspac": [136, 235], "sharedhostpinnedspac": 136, "memoryspaceconcept": 136, "bit": 137, "manipul": 137, "mathemat": [138, 217], "constant": [138, 217], "math": 139, "parallelfortag": 141, "parallelreducetag": 142, "parallelscantag": 143, "fenc": 144, "time": 144, "kernel": [144, 199, 236], "asynchron": 144, "deep": [144, 209], "parallel_for": 145, "parallel_reduc": 146, "parallel_scan": 147, "what": [148, 209, 240], "mdrangepolici": [149, 233], "specif": 149, "nestedpolici": 150, "list": [150, 194], "perteam": 150, "perthread": 150, "teamthreadrang": [150, 155], "teamthreadmdrang": [150, 154], "teamvectorrang": [150, 157], "teamvectormdrang": [150, 156], "threadvectorrang": [150, 159], "threadvectormdrang": [150, 158], "rangepolici": [151, 233], "initarg": 151, "teamhandleconcept": 152, "teampolici": 153, "partition_spac": 162, "pair": 163, "convers": [163, 209], "abort": 164, "kokkos_assert": 166, "complex": 167, "device_id": 168, "num_devic": 171, "num_thread": 172, "printf": 173, "kokkos_swap": 174, "timer": 175, "subview": [176, 184, 208], "create_mirror": 177, "_view": 177, "deep_copi": 178, "thing": 178, "you": [178, 209], "can": [178, 209], "cannot": 178, "do": [178, 209, 240], "how": [178, 203, 208, 209, 240], "get": [178, 209], "layout": [178, 185, 206, 209], "incompat": 178, "layoutleft": 179, "layoutright": 180, "layoutstrid": 181, "realloc": 182, "resiz": [183, 209], "enum": 185, "data": [185, 201, 209], "dimens": [185, 208, 209], "stride": [185, 209], "other": [185, 193, 209, 213], "nonmemb": 185, "view_alloc": 186, "like": 187, "simd": [188, 189, 207], "templat": [189, 190, 191, 223, 237, 238], "width": [189, 190], "load": [189, 191], "store": [189, 191], "method": [189, 190, 191], "arithmet": 189, "comparison": [189, 190], "cmath": 189, "global": [189, 190], "simd_mask": 190, "boolean": 190, "where_express": 191, "where": 191, "gather": [191, 225], "scatter": 191, "10": 192, "1": [192, 194, 196, 199, 200, 201, 202, 204, 205, 206, 208, 209, 236], "write": 192, "conflict": 192, "Their": 192, "resolut": 192, "With": 192, "2": [192, 194, 197, 199, 200, 201, 204, 205, 206, 208, 209, 236], "free": [192, 213], "3": [192, 194, 198, 199, 200, 201, 204, 205, 206, 208, 209, 213, 221, 239], "4": [192, 194, 199, 200, 201, 205, 206, 209, 221], "12": [193, 201], "backward": 193, "futur": [193, 204], "user": 193, "defin": 193, "abi": 193, "deprec": [193, 213], "header": [193, 200, 213], "right": 193, "reserv": 193, "miscellan": 193, "proof": 193, "compil": [194, 221, 227, 229], "cmake": [194, 210, 216], "build": [194, 210, 221], "system": [194, 221], "instal": [194, 210], "packag": [194, 210], "tree": 194, "spack": [194, 210], "develop": [194, 210, 225], "keyword": [194, 216], "trilino": 194, "branch": 194, "gnu": 194, "makefil": [194, 210], "5": [194, 200, 205, 206, 209], "6": [194, 206, 209], "restrict": [194, 199], "9": [195, 196, 197, 198], "custom": [195, 197, 198, 228], "8": 199, "hierarch": 199, "motiv": [199, 204], "creat": [199, 209], "instanc": [199, 204], "scratch": 199, "pad": 199, "loop": [199, 205], "barrier": 199, "singl": [199, 234], "executor": 199, "0": 200, "includ": 200, "command": 200, "line": 200, "environ": 200, "struct": 200, "code": [200, 201, 203, 207, 235, 236, 240], "13": 201, "interoper": 201, "legaci": 201, "structur": [201, 232, 237], "raw": [201, 209, 210], "alloc": [201, 232], "through": [201, 239], "extern": 201, "fundament": 201, "own": 201, "call": 201, "14": 203, "virtual": [203, 240], "v": [203, 240], "tabl": [203, 240], "pointer": [203, 209, 240], "eri": [203, 240], "annoi": [203, 240], "gpu": [203, 240], "Then": [203, 240], "why": [203, 209, 240], "doesn": [203, 240], "t": [203, 209, 240], "fix": [203, 240], "thi": [203, 209, 225, 240], "complic": [203, 240], "question": [203, 215, 240], "follow": [203, 240], "up": [203, 240], "machin": 204, "model": [204, 206, 215, 225], "abstract": 204, "figur": 204, "conceptu": 204, "high": 204, "perform": [204, 207, 215, 229, 236], "comput": [204, 229, 231, 236], "node": [204, 231], "program": [204, 206, 215, 220, 225, 232], "safeti": 204, "7": [205, 209, 213], "specifi": [205, 209], "bodi": 205, "lambda": 205, "should": 205, "i": [205, 209, 240], "join": 205, "init": 205, "arrai": [205, 209, 232, 233, 237], "result": 205, "scan": 205, "name": [205, 210], "rang": 206, "15": 207, "background": 207, "idea": 207, "deal": [207, 238], "remaind": 207, "condit": [207, 239], "ternari": 207, "11": 208, "slice": 208, "take": 208, "deduct": 208, "degener": 208, "obtain": 208, "multidimension": [209, 232], "need": [209, 240], "mai": 209, "make": 209, "probabl": 209, "don": 209, "want": 209, "s": 209, "realli": [209, 240], "const": 209, "entri": 209, "index": 209, "refer": [209, 233], "lifetim": 209, "depend": 209, "explicitli": 209, "placement": 209, "hostmirror": 209, "unmanag": 209, "special": 209, "philosophi": 210, "known": [210, 217], "knownissu": 210, "crai": 210, "fortran": [210, 232], "inlin": 210, "vs": 210, "uvm": 210, "cite": 211, "contribut": 212, "document": [212, 223], "x": [213, 221], "namespac": 213, "updat": 213, "faq": 214, "portabl": [215, 240], "websit": 215, "content": 215, "devic": [216, 236, 240], "enabl": 216, "tpl": 216, "amd": 216, "licens": 218, "guid": 220, "coolerview": 222, "plan": [224, 225], "test": [224, 228, 229], "project": 225, "stabil": 225, "activ": 225, "support": [225, 227], "platform": [225, 229], "capabl": 225, "iso": 225, "releas": [225, 228], "priorit": 225, "coordin": 225, "process": [225, 228], "feedback": 226, "report": 226, "attach": 227, "identif": 227, "b": 227, "file": 227, "promot": 227, "txt": 227, "chang": 228, "pull": 228, "request": 228, "nightli": 228, "integr": 228, "intern": 228, "prefer": 228, "commun": 228, "workflow": 229, "compon": 229, "softwar": 229, "git": 229, "repositori": 229, "batch": 229, "queue": 229, "account": 229, "script": 229, "unit": 229, "case": [230, 232, 233, 239, 240], "averag": 231, "element": 231, "adjac": 231, "full": 231, "interop": 232, "multi": 233, "dimension": 233, "formul": 233, "mpi": 234, "halo": 234, "exchang": 234, "send": 234, "messag": 234, "awar": 234, "separ": 234, "out": 234, "identifi": 234, "subset": 234, "indic": 234, "extract": 234, "from": 235, "kokkos_enable_cuda_uvm": 235, "altern": 235, "transit": 235, "overlap": 236, "host": 236, "actor": [236, 239], "subject": [236, 239], "assumpt": [236, 239], "constraint": [236, 239], "precondit": [236, 239], "while": 236, "cabana": 237, "soa": 237, "aosoa": 237, "pre": 238, "17": 238, "post": 239, "recurs": 239, "fibonacci": 239, "flow": 239, "n": 239, "divid": 239, "graph": 239, "down": 239, "bf": 239, "But": 240, "side": 240, "doe": 240, "nvcc": 240, "solv": 240, "window": 241, "h": 241, "video": 242, "lectur": 242, "slide": 242}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})