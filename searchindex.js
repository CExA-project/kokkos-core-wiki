Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.md", "API/algorithms/std-algorithms/all/StdAllOf.md", "API/algorithms/std-algorithms/all/StdAnyOf.md", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.md", "API/algorithms/std-algorithms/all/StdCountIf.md", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.md", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.md", "API/algorithms/std-algorithms/all/StdMoveBackward.md", "API/algorithms/std-algorithms/all/StdNoneOf.md", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.md", "API/algorithms/std-algorithms/all/StdReverseCopy.md", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.md", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.md", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 131, 132, 134, 135, 179, 200], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 121, 127, 129, 131, 132, 134, 136, 137, 151, 159, 164, 165, 167, 169, 179, 183, 184, 186, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 210, 220, 221, 226, 227, 230, 232], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 94, 134, 135, 148, 150, 183, 184, 186, 187, 190, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 214, 218, 220, 222], "sort": [0, 3, 36, 37, 82, 207], "nest": [0, 77, 87, 92, 94, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 173, 174, 187, 190, 197, 198, 199, 200, 226, 231, 233, 235], "polici": [0, 72, 83, 87, 140, 141, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 188, 192, 194, 195, 199, 207, 226, 229, 231], "team": [0, 72, 85, 87, 94, 140, 141, 142, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 190, 195, 197, 198, 199, 206, 218, 219, 221, 222, 232, 233], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 92, 94, 129, 131, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 186, 188, 189, 190, 194, 196, 199, 200, 203, 204, 208, 209, 222, 229, 232, 235], "level": [0, 87, 88, 94, 149, 151, 152, 187, 188, 193, 196, 199, 203, 204, 205, 208, 222], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 129, 131, 132, 138, 139, 143, 144, 145, 146, 148, 154, 156, 158, 159, 160, 164, 168, 170, 171, 172, 178, 179, 180, 183, 184, 185, 201, 202, 203, 207, 230, 233], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 188, 211, 215, 230, 234], "file": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 188, 194, 209, 215, 221, 226, 234], "kokkos_cor": [1, 2, 76, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 187, 192, 194, 207, 210, 215, 228, 233, 234], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 192, 194, 201, 207, 210, 215, 225, 226, 228, 230, 233, 234], "kokkos_complex": [1, 207], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 135, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 187, 188, 190, 191, 192, 193, 195, 199, 201, 203, 206, 215, 225, 226, 228], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 139, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 215, 216, 227, 230, 231, 233], "struct": [1, 2, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 48, 51, 52, 56, 67, 69, 72, 81, 84, 94, 118, 119, 121, 124, 129, 130, 132, 134, 135, 140, 141, 142, 144, 145, 160, 170, 173, 174, 187, 190, 191, 192, 193, 195, 199, 203, 207, 225, 230, 232, 233], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 51, 52, 56, 75, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 164, 173, 174, 175, 191, 192, 193, 195, 199, 203, 227], "static": [1, 74, 75, 76, 77, 85, 87, 148, 150, 152, 173, 174, 175, 179, 183, 184, 191, 193, 196, 203, 204, 207, 215, 235], "gen_func_typ": 1, "max": [1, 72, 74, 88, 102, 105, 107, 113, 116, 117, 118, 119, 121, 122, 124, 139, 145, 153, 155, 157, 186, 190, 193, 199, 201, 207, 209, 234], "return": [1, 2, 13, 14, 19, 20, 29, 38, 42, 45, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 94, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 139, 144, 150, 151, 152, 154, 156, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 172, 178, 179, 183, 184, 185, 186, 187, 191, 192, 193, 195, 198, 201, 203, 207, 215, 224, 225, 226, 227, 228, 229, 232], "type_valu": 1, "draw": [1, 72], "gen": [1, 183, 184], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 134, 135, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 190, 191, 192, 193, 195, 197, 199, 201, 202, 207, 215, 225, 226, 227, 229, 231, 233], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 94, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 178, 193, 198, 199, 202, 203, 221, 222, 226], "start": [1, 18, 24, 33, 50, 51, 60, 66, 69, 71, 72, 74, 82, 94, 129, 135, 136, 144, 145, 146, 148, 149, 150, 152, 169, 183, 187, 190, 193, 194, 195, 199, 203, 204, 218, 222, 225, 227, 229, 232], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 133, 134, 136, 145, 146, 148, 149, 150, 152, 154, 156, 158, 188, 194, 203, 225, 226, 232, 234], "function": [1, 2, 4, 30, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 133, 134, 136, 137, 139, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 168, 169, 170, 171, 175, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 202, 209, 213, 218, 223, 224, 225, 226, 227, 229, 231], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 170, 171, 179, 183, 184, 189, 191, 193, 199, 201, 202, 211, 215, 225, 230], "all": [1, 2, 13, 25, 30, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 92, 94, 96, 121, 132, 133, 135, 136, 137, 143, 144, 147, 151, 152, 170, 172, 175, 178, 179, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 214, 218, 220, 221, 222, 226, 228, 232, 233], "list": [1, 2, 72, 82, 97, 138, 139, 148, 178, 180, 181, 186, 194, 196, 198, 203, 204, 211, 214, 218, 219, 220, 221, 222, 226, 227, 232], "here": [1, 39, 40, 41, 72, 84, 87, 129, 133, 134, 135, 147, 152, 186, 193, 194, 197, 198, 199, 201, 203, 206, 210, 214, 221, 222, 227, 229, 233], "ar": [1, 2, 4, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 94, 97, 107, 116, 117, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 153, 155, 157, 165, 166, 167, 170, 171, 172, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 214, 216, 218, 219, 220, 221, 222, 224, 225, 227, 229, 231, 232, 233, 234], "part": [1, 72, 83, 87, 97, 121, 129, 135, 151, 164, 166, 186, 187, 188, 195, 196, 200, 201, 203, 218, 220, 222, 231], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 95, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 159, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 206, 209, 210, 211, 213, 215, 219, 223, 224, 227, 228, 229, 230, 231, 233, 235], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 136, 137, 138, 139, 159, 162, 166, 183, 184, 185, 187, 191, 192, 195, 202, 203, 210], "char": [1, 2, 76, 86, 87, 121, 129, 132, 133, 134, 135, 144, 145, 146, 161, 163, 168, 172, 175, 179, 183, 184, 185, 191, 192, 194, 203, 215, 220, 230, 233], "short": [1, 199], "127": 1, "0xff": 1, "256": [1, 201, 232], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 121, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 167, 168, 170, 172, 175, 178, 179, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 199, 201, 203, 207, 215, 224, 226, 227, 228, 229, 230, 231, 232, 233], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 121, 138, 188, 196, 198, 199, 203, 218], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 137, 138, 139, 160, 173, 174, 175, 198, 199, 201, 227, 230], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 104, 110, 120, 121, 130, 131, 132, 134, 136, 144, 145, 146, 149, 151, 152, 154, 156, 158, 159, 160, 163, 164, 165, 167, 172, 175, 178, 179, 183, 184, 185, 189, 191, 192, 201, 204, 209, 210, 211, 213, 214, 215, 220, 222, 224, 225, 226, 227, 232, 235], "0f": [1, 160], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 94, 129, 132, 133, 134, 138, 143, 145, 154, 156, 158, 162, 164, 169, 170, 178, 179, 183, 184, 185, 186, 190, 193, 195, 199, 201, 202, 203, 215, 224, 225, 226, 227, 228, 229], "0": [1, 2, 11, 18, 24, 33, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 94, 108, 109, 111, 121, 123, 129, 131, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 172, 173, 174, 175, 178, 179, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 209, 211, 214, 215, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233], "complex": [1, 72, 82, 87, 88, 96, 121, 188, 189, 190, 193, 198, 201, 208, 210, 214], "where": [1, 2, 4, 11, 12, 17, 22, 28, 30, 32, 35, 36, 37, 40, 42, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 94, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 144, 153, 157, 159, 163, 172, 179, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 214, 218, 222, 224, 225, 226, 229, 230, 231, 232, 233], "maximum": [1, 3, 72, 77, 78, 82, 102, 104, 105, 107, 112, 113, 116, 117, 118, 119, 129, 152, 190, 193], "valu": [1, 2, 4, 11, 17, 19, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 129, 131, 134, 135, 136, 139, 144, 145, 146, 150, 151, 152, 154, 156, 158, 160, 163, 171, 172, 178, 179, 185, 186, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 209, 227, 233], "xorshift": 1, "given": [1, 4, 66, 75, 78, 79, 81, 84, 85, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 128, 129, 136, 148, 150, 151, 152, 166, 170, 172, 175, 188, 193, 194, 195, 199, 200, 201, 202, 203, 204, 221, 227, 231, 232], "follow": [1, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 91, 92, 97, 121, 129, 135, 138, 151, 172, 179, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 199, 201, 202, 203, 204, 207, 209, 210, 211, 214, 216, 220, 222, 224], "enum": [1, 129, 135, 203], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 121, 130, 134, 146, 151, 153, 155, 157, 159, 160, 161, 163, 168, 172, 175, 176, 177, 178, 179, 183, 189, 190, 192, 201, 209, 211, 213, 214, 215, 220, 222, 232, 233, 235], "int64_t": [1, 78, 85, 146, 148, 150, 183, 184], "kokkos_random": [1, 2, 207], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 91, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 132, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 159, 160, 171, 172, 173, 174, 175, 179, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 208, 211, 218, 219, 220, 221, 222, 225, 226, 230, 232, 233], "structur": [1, 4, 72, 76, 94, 97, 131, 179, 194, 198, 200, 202, 203, 223, 224, 226, 227, 231, 232, 235], "necessari": [1, 75, 76, 87, 91, 94, 144, 179, 188, 189, 193, 195, 199, 203, 204, 218, 222, 224, 227, 233], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 135, 150, 151, 179, 183, 185, 187, 190, 193, 196, 198, 200, 202, 203, 214, 218, 220, 221, 222, 225], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 94, 131, 183, 184, 187, 188, 193, 196, 197, 199, 201, 202, 203, 209, 218, 219, 221, 222, 226, 227, 230, 231, 232, 233, 235], "vigna": 1, "sebastiano": 1, "2014": [1, 198, 205], "an": [1, 2, 4, 11, 18, 22, 24, 25, 28, 29, 33, 34, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 92, 94, 107, 115, 121, 123, 127, 129, 133, 134, 135, 136, 138, 143, 144, 145, 146, 148, 150, 151, 152, 155, 159, 160, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 206, 208, 210, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 93, 96, 127, 128, 136, 137, 138, 139, 159, 182, 187, 193, 194, 201, 207, 209, 214, 222, 224], "explor": [1, 87, 196, 218], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 129, 131, 145, 151, 160, 162, 170, 172, 178, 179, 183, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 211, 215, 218, 222, 227, 229, 230, 231, 233], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 139, 144, 145, 147, 150, 151, 152, 159, 165, 167, 179, 188, 190, 192, 193, 194, 197, 198, 199, 202, 203, 204, 206, 209, 210, 214, 216, 222, 233], "http": [1, 84, 138, 205, 208, 220], "arxiv": 1, "org": [1, 84, 138, 188, 205], "ab": [1, 138, 183], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 91, 94, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 151, 152, 157, 159, 163, 164, 168, 171, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 209, 210, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 234], "themselv": [1, 94, 198, 199, 200, 218], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 91, 94, 121, 129, 131, 132, 139, 143, 144, 151, 153, 154, 155, 156, 171, 175, 176, 177, 179, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 214, 218, 220, 221, 222, 224, 227, 230, 231, 232, 233], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 69, 75, 77, 78, 81, 87, 94, 121, 129, 131, 134, 135, 136, 150, 159, 172, 186, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 215, 218, 219, 221, 222, 224, 225, 226, 227, 233, 234], "compon": [1, 164, 175, 198, 217, 221], "state": [1, 72, 75, 81, 87, 133, 193, 199, 201, 203], "pool": [1, 72, 193, 203], "actual": [1, 77, 129, 135, 147, 151, 152, 179, 186, 193, 195, 198, 199, 200, 203, 204, 209, 220, 221, 222], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 132, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 162, 170, 171, 172, 173, 174, 175, 178, 179, 186, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 211, 215, 218, 222, 225, 229, 231, 232, 233], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 88, 97, 127, 128, 179, 188, 198, 204, 208, 219, 227, 235], "so": [1, 2, 82, 87, 91, 94, 129, 186, 187, 188, 193, 194, 195, 197, 198, 199, 201, 202, 203, 206, 214, 219, 220, 222, 225, 229, 233], "each": [1, 2, 4, 11, 23, 30, 31, 32, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 94, 138, 144, 145, 152, 153, 155, 157, 159, 160, 173, 174, 175, 179, 186, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 216, 218, 220, 221, 222, 224, 226, 227, 230, 232, 233], "activ": [1, 23, 24, 53, 56, 88, 188, 193, 199, 204, 209, 222], "abl": [1, 76, 94, 129, 135, 179, 180, 186, 193, 196, 198, 201, 203, 207, 227], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 132, 136, 151, 159, 160, 163, 176, 179, 186, 187, 188, 190, 193, 194, 195, 196, 198, 199, 202, 203, 204, 218, 219, 221, 222, 224, 231], "own": [1, 75, 159, 186, 202, 203, 204, 218, 220, 227], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 75, 76, 77, 79, 81, 82, 87, 91, 94, 121, 129, 132, 133, 134, 135, 138, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 171, 172, 173, 174, 175, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 208, 209, 210, 211, 214, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 94, 129, 131, 134, 135, 145, 147, 151, 152, 153, 155, 157, 171, 173, 174, 175, 179, 180, 186, 187, 188, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 218, 221, 228, 229, 231, 233], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 159, 168, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 218, 219, 222, 225, 227, 228, 229, 230, 231, 233], "independ": [1, 72, 99, 135, 152, 199, 203, 218, 222, 235], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 92, 97, 151, 159, 171, 172, 179, 187, 188, 193, 196, 198, 201, 203, 210, 215, 218, 220, 226, 227, 228, 229], "note": [1, 37, 76, 77, 78, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 143, 144, 150, 151, 152, 159, 172, 179, 186, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 222, 225, 229, 232, 233], "contrast": [1, 136, 149, 154, 156, 158, 163, 193, 203, 218], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 126, 140, 141, 142, 184, 188, 196, 198, 222, 225, 233], "collect": [1, 151, 193, 196, 199, 200, 202, 218, 222, 227, 230], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 113, 115, 117, 118, 121, 124, 126, 127, 128, 129, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 168, 171, 172, 175, 176, 177, 179, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 214, 215, 218, 222, 226, 227, 229, 231], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 92, 121, 126, 127, 128, 129, 131, 133, 135, 137, 139, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 171, 172, 176, 177, 179, 183, 184, 187, 188, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 214, 215, 218, 220, 221, 222, 228, 233], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 94, 121, 129, 130, 131, 134, 135, 139, 144, 145, 148, 149, 150, 151, 152, 157, 158, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 208, 216, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 231, 233], "call": [1, 2, 11, 17, 21, 22, 28, 30, 35, 36, 40, 42, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 94, 104, 121, 127, 128, 129, 131, 132, 133, 134, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 168, 169, 170, 171, 172, 176, 177, 179, 183, 184, 185, 186, 188, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 210, 222, 225, 227, 229, 233], "insid": [1, 2, 81, 85, 87, 94, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 166, 187, 188, 193, 195, 198, 199, 203, 231, 232, 233, 234], "condit": [1, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 76, 163, 179, 186, 193, 195, 198, 199, 211, 221, 229], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 87, 88, 92, 129, 131, 135, 137, 138, 160, 163, 165, 167, 171, 172, 179, 188, 194, 195, 196, 197, 199, 203, 204, 210, 221, 222, 223, 227, 228, 230], "public": [1, 75, 76, 77, 79, 81, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 129, 135, 145, 149, 151, 152, 154, 156, 158, 164, 166, 175, 185, 187, 192, 197, 199, 206, 215, 218, 227, 231, 233], "typedef": [1, 75, 76, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 149, 150, 151, 152, 154, 156, 158, 164, 169, 173, 174, 175, 187, 190, 191, 192, 193, 195, 199, 203, 225, 229], "device_typ": [1, 75, 76, 77, 81, 87, 129, 135, 171, 179, 203], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 94, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 135, 137, 138, 143, 144, 145, 146, 148, 150, 151, 159, 161, 163, 164, 168, 169, 172, 176, 177, 179, 183, 185, 186, 187, 192, 193, 195, 197, 199, 201, 203, 207, 210, 215, 225, 227, 228, 229, 231, 232, 233], "init": [1, 22, 34, 67, 72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 192, 227], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": 1, "us": [1, 2, 4, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 170, 171, 176, 177, 178, 179, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 218, 219, 220, 221, 222, 224, 227, 229, 230, 231, 233, 234], "establish": [1, 222, 226], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 93, 148, 150, 188, 194, 196, 199, 201, 203, 209, 214, 220, 222], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 130, 131, 132, 133, 144, 145, 146, 160, 163, 164, 165, 167, 168, 172, 175, 179, 180, 183, 184, 185, 188, 189, 191, 192, 193, 195, 197, 198, 199, 213, 215, 218, 220, 222, 228, 229, 233], "make": [1, 75, 76, 87, 94, 136, 151, 179, 186, 187, 188, 190, 193, 197, 198, 199, 201, 204, 206, 218, 220, 225, 227, 228, 231, 233], "process": [1, 89, 135, 188, 194, 200, 201, 202, 204, 208, 217, 222], "platform": [1, 83, 183, 184, 208, 219, 221, 230], "determinist": [1, 48, 69, 200], "request": [1, 75, 77, 129, 140, 141, 142, 145, 151, 152, 193, 194, 198, 200, 206, 209, 218, 219, 220, 222], "lock": [1, 195, 198, 200, 201, 203], "guarante": [1, 75, 76, 79, 92, 94, 129, 135, 144, 145, 146, 166, 179, 187, 188, 195, 198, 199, 200, 201, 228, 232], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 94, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 134, 135, 138, 144, 145, 146, 147, 171, 179, 183, 184, 186, 188, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 218, 221, 222, 224, 225, 231, 232, 233], "privat": [1, 79, 87, 151, 164, 187, 189, 192, 193, 199, 218, 227], "get": [1, 75, 87, 94, 97, 133, 151, 152, 175, 186, 193, 194, 195, 197, 198, 201, 202, 204, 206, 218, 220, 230, 232, 233], "cuda": [1, 72, 75, 85, 87, 88, 93, 135, 148, 150, 152, 159, 172, 193, 194, 196, 199, 200, 201, 203, 208, 209, 214, 220, 221, 222, 228, 229], "involv": [1, 87, 147, 221, 226], "atom": [1, 72, 76, 81, 83, 99, 100, 101, 102, 103, 104, 105, 106, 179, 193, 195, 198, 200, 213, 232, 235], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 134, 136, 172, 179, 185, 186, 188, 193, 194, 198, 199, 200, 201, 203, 207, 209, 220, 229, 231], "upon": [1, 84, 87, 129, 143, 187, 196, 218], "complet": [1, 77, 94, 129, 143, 188, 189, 193, 198, 203, 204, 218, 222, 229, 232], "unlock": 1, "updat": [1, 72, 75, 82, 99, 100, 101, 102, 103, 104, 105, 106, 186, 188, 193, 199, 203, 214, 218, 220, 222, 227, 229, 232], "statu": 1, "onc": [1, 72, 94, 133, 134, 193, 194, 200, 203, 204, 209, 218, 227, 229], "again": [1, 87, 188, 195, 203, 204, 209, 222], "becom": [1, 59, 60, 79, 94, 135, 198, 218, 222, 226], "avail": [1, 74, 77, 81, 82, 87, 88, 97, 129, 131, 135, 136, 137, 138, 139, 152, 163, 183, 184, 188, 193, 196, 198, 199, 201, 203, 204, 218, 221, 222, 224, 226, 227], "within": [1, 2, 4, 79, 82, 92, 129, 134, 144, 145, 146, 148, 151, 188, 193, 198, 200, 203, 225, 226, 227], "select": [1, 72, 74, 91, 131, 162, 178, 185, 196, 198, 203, 214, 218, 221, 222, 232], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 91, 92, 94, 97, 118, 119, 121, 124, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 160, 163, 164, 168, 170, 171, 172, 175, 179, 180, 181, 183, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 211, 214, 218, 220, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233], "next": [1, 218, 220, 222, 229, 232], "step": [1, 4, 193, 195, 196, 201, 203, 218, 220, 221, 222, 227], "develop": [1, 91, 144, 193, 196, 198, 200, 203, 206, 208, 214, 219, 220, 221, 222], "functor": [1, 2, 11, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 48, 67, 69, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 183, 184, 193, 195, 198, 203, 226, 227, 229, 231], "desir": [1, 48, 67, 69, 77, 146, 159, 171, 188, 199, 203, 218, 220, 221, 222], "type": [1, 11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 92, 94, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 135, 136, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 170, 171, 172, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 208, 213, 215, 220, 222, 225, 226, 227, 230, 233], "devicetyp": [1, 129, 135, 230], "respect": [1, 76, 121, 138, 171, 172, 176, 177, 179, 190, 193, 198, 203], "x": [1, 72, 137, 138, 175, 176, 177, 183, 185, 190, 195, 199, 201, 203, 208, 215, 225, 229], "idx": [1, 225], "just": [1, 2, 75, 87, 88, 94, 129, 135, 147, 172, 175, 186, 194, 199, 201, 203, 204, 206, 209, 220, 224, 227], "give": [1, 88, 94, 187, 194, 195, 199, 200, 201, 203, 220], "argument": [1, 11, 17, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 92, 94, 97, 130, 131, 132, 134, 138, 143, 145, 146, 151, 152, 154, 156, 158, 163, 170, 171, 172, 178, 179, 180, 183, 184, 185, 187, 192, 193, 199, 202, 203, 207, 210, 226, 228], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 183, 184, 207], "urand": 1, "For": [1, 2, 59, 75, 76, 94, 121, 129, 135, 136, 139, 150, 153, 155, 157, 159, 172, 178, 179, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 216, 218, 222, 226, 227, 228, 233], "32": [1, 2, 193, 195, 203, 222], "bit": [1, 72, 74, 87, 89, 179, 184, 197, 199, 201, 202, 203, 233], "unsign": [1, 74, 75, 76, 77, 80, 102, 105, 136, 179, 202, 203, 228], "integ": [1, 59, 60, 75, 76, 81, 85, 94, 136, 138, 148, 150, 178, 179, 193, 199, 201, 203, 225], "three": [1, 75, 87, 138, 143, 186, 187, 188, 193, 196, 198, 199, 201, 203, 204, 218, 221, 226], "option": [1, 72, 75, 76, 81, 85, 94, 129, 131, 144, 145, 146, 148, 179, 187, 188, 190, 193, 194, 195, 196, 199, 203, 204, 218, 220, 221, 222, 226, 228, 230, 231], "shown": [1, 55, 87, 121, 193, 198, 226], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 92, 94, 127, 129, 134, 151, 159, 160, 173, 178, 179, 183, 184, 185, 188, 190, 193, 194, 195, 197, 198, 199, 203, 206, 207, 218, 225, 226, 229, 233], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 130, 131, 135, 140, 141, 142, 145, 148, 150, 151, 152, 160, 164, 169, 172, 173, 174, 175, 176, 177, 179, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 204, 209, 215, 218, 222, 226, 233], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 94, 129, 148, 149, 151, 153, 154, 155, 156, 157, 158, 183, 184, 186, 190, 193, 194, 199, 201, 202, 203, 204, 221, 224, 226, 231], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 94, 132, 145, 152, 179, 187, 194, 195, 199, 200, 201, 202, 203, 211, 214, 218, 221, 227], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 94, 97, 129, 130, 131, 143, 160, 164, 168, 171, 172, 186, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202, 208, 211, 215, 218, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235], "defin": [1, 42, 72, 76, 78, 83, 87, 88, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 150, 151, 154, 156, 158, 161, 162, 163, 165, 166, 167, 168, 170, 171, 179, 181, 183, 184, 188, 191, 192, 193, 195, 198, 199, 203, 207, 221, 222, 224, 225, 230, 234], "abov": [1, 86, 129, 136, 138, 186, 188, 193, 196, 199, 201, 202, 203, 211, 222, 226, 227, 232], "And": [1, 72, 107, 195, 205, 231], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 94, 121, 129, 135, 139, 144, 145, 151, 152, 160, 165, 167, 175, 179, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 218, 219, 220, 221, 222, 226, 229, 231], "64": [1, 2, 199, 201, 203], "latter": [1, 94, 145, 179, 193, 198, 203, 222], "cover": [1, 76, 179, 199, 220, 221], "user": [1, 75, 76, 77, 81, 87, 90, 94, 127, 129, 130, 133, 134, 144, 145, 146, 148, 152, 179, 181, 188, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 218, 221, 227, 228, 232, 233, 234], "more": [1, 76, 77, 78, 87, 94, 121, 132, 135, 144, 147, 179, 186, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 210, 226, 231, 232], "other": [1, 46, 75, 76, 77, 78, 82, 87, 92, 94, 134, 135, 144, 145, 146, 151, 153, 154, 155, 156, 159, 163, 171, 172, 173, 174, 175, 186, 188, 193, 195, 197, 198, 199, 200, 201, 202, 204, 208, 209, 211, 214, 215, 218, 220, 222, 225, 227, 228, 231, 233], "scalar": [1, 75, 76, 77, 78, 82, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 145, 164, 172, 179, 183, 184, 186, 189, 190, 192, 193, 195, 199, 210], "uint64_t": [1, 183, 184], "int32_t": [1, 183, 184, 185], "normal": [1, 72, 186, 188, 199, 203, 222], "distribut": [1, 72, 196, 202, 205, 211, 222, 227], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 132, 133, 134, 145, 146, 151, 162, 170, 171, 173, 174, 175, 176, 177, 178, 180, 186, 188, 190, 192, 193, 194, 196, 198, 199, 201, 207, 209, 213, 215, 222, 224, 225, 226, 227, 228, 229, 235], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 183, 184, 190, 193, 195, 197, 199, 203, 233], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 94, 121, 130, 131, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 161, 163, 168, 171, 172, 175, 176, 177, 179, 181, 183, 184, 185, 187, 188, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 210, 211, 215, 218, 220, 221, 222, 225, 228, 230, 233, 234], "main": [1, 2, 76, 86, 97, 121, 130, 131, 132, 133, 134, 144, 145, 146, 163, 166, 168, 172, 175, 179, 183, 184, 185, 188, 191, 192, 194, 201, 203, 204, 215, 218, 225, 228, 229, 233], "argc": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 163, 168, 172, 175, 179, 183, 184, 185, 191, 192, 194, 215, 233], "argv": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 163, 168, 172, 175, 179, 183, 184, 185, 191, 192, 194, 215, 233], "scopeguard": [1, 72, 134, 207], "guard": [1, 132], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 152, 179, 186, 191, 192, 193, 194, 226], "1000000": [1, 172], "count": [1, 7, 13, 14, 27, 45, 62, 74, 76, 77, 87, 94, 136, 144, 145, 146, 149, 154, 156, 158, 179, 186, 193, 199, 202, 231], "parallel_reduc": [1, 72, 79, 87, 90, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 141, 143, 147, 149, 152, 153, 154, 155, 156, 157, 158, 190, 191, 192, 193, 199, 200, 207, 226, 227, 228], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 121, 129, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 163, 168, 179, 186, 190, 191, 192, 193, 195, 197, 199, 203, 215, 224, 225, 226, 227, 229, 231, 233], "local_count": 1, "acquir": [1, 76, 87, 179, 194, 195, 200, 203], "engin": [1, 188, 198, 200, 203, 205, 211], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 94, 131, 132, 137, 139, 144, 145, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 171, 172, 178, 185, 190, 193, 201, 202, 210, 224, 225, 226, 232, 233], "drand": 1, "y": [1, 183, 195, 201, 203, 225, 229], "do": [1, 2, 24, 25, 46, 53, 56, 69, 75, 83, 87, 94, 99, 100, 101, 129, 132, 133, 135, 143, 147, 179, 186, 187, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 204, 206, 210, 218, 220, 225, 227, 228, 229, 231], "forget": 1, "releas": [1, 86, 87, 88, 133, 168, 187, 188, 193, 196, 198, 214, 219, 220, 222], "printf": [1, 94, 96, 121, 144, 145, 146, 175, 183, 184, 190, 191, 192, 233], "pi": [1, 89, 137, 210], "f": [1, 87, 94, 138, 151, 152, 160, 207, 220, 225, 226, 232], "n": [1, 2, 18, 24, 31, 33, 63, 64, 74, 75, 77, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 172, 175, 176, 177, 179, 183, 190, 191, 192, 193, 195, 199, 201, 202, 203, 208, 228, 229, 231, 233], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 129, 130, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 163, 165, 167, 168, 175, 178, 179, 191, 192, 201, 202, 205, 209, 213, 215, 218, 220, 222, 226, 228, 235], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 207], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 129, 170, 171, 178, 179, 203], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 127, 128, 173, 174, 175, 176, 177, 179, 183, 184, 185, 193, 199, 201, 202, 203, 225, 233], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 127, 128, 148, 149, 150, 152, 154, 156, 158, 203, 218, 222, 225, 226, 234], "parallel": [2, 72, 77, 81, 83, 85, 87, 91, 92, 121, 129, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 186, 188, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 208, 213, 224, 227, 229, 231, 232, 233, 235], "teampolici": [2, 72, 76, 85, 87, 94, 129, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 179, 190, 193, 195, 199], "kernel": [2, 11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 94, 144, 148, 150, 151, 152, 159, 168, 172, 179, 186, 188, 195, 198, 199, 200, 203, 204, 208, 209, 210, 222, 228, 232, 235], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 90, 94, 108, 109, 110, 111, 120, 121, 123, 145, 146, 151, 152, 168, 179, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 205, 209, 215, 218, 219, 221, 225, 226, 230, 235], "teamthreadrang": [2, 72, 85, 87, 144, 145, 157, 158, 190, 193, 195], "threadvectorrang": [2, 72, 85, 87, 144, 145, 146, 193], "kokkos_nestedsort": 2, "teammemb": [2, 94, 152, 193], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 57, 72, 75, 84, 87, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 139, 143, 145, 151, 152, 159, 164, 171, 176, 177, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 201, 202, 204, 207, 214, 218, 220, 232], "compar": [2, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 99, 100, 131, 179, 199, 201, 203, 214, 220, 222], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 81, 82, 86, 87, 88, 131, 132, 152, 188, 193, 194, 195, 218, 226], "entir": [2, 75, 87, 149, 175, 199, 200, 202, 204, 218, 221, 222, 231, 233], "thei": [2, 75, 78, 87, 88, 94, 129, 132, 133, 135, 137, 144, 147, 159, 172, 186, 187, 193, 197, 199, 200, 201, 203, 214, 218, 219, 220, 221, 222, 224, 227, 231, 233, 234], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 94, 128, 129, 132, 133, 134, 144, 145, 146, 152, 159, 161, 168, 179, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 211, 214, 216, 218, 220, 222, 226, 227, 229, 231, 232], "top": [2, 94, 187, 188, 193, 216, 222], "lambda": [2, 88, 94, 143, 144, 145, 193, 195, 209, 225, 226, 231], "vector": [2, 72, 73, 85, 88, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 183, 184, 185, 190, 199, 200, 203, 207, 209, 225, 230], "lane": [2, 72, 85, 149, 155, 156, 157, 158, 183, 193, 200, 201], "either": [2, 75, 76, 80, 81, 85, 94, 113, 115, 117, 131, 144, 145, 151, 172, 176, 177, 179, 185, 187, 188, 191, 192, 193, 194, 199, 203, 204, 220, 222, 232, 234], "loop": [2, 85, 88, 94, 149, 150, 186, 195, 198, 201, 203, 209, 224, 226, 229, 231, 235], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 94, 135, 149, 177, 179, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 222, 233], "simultan": [2, 186], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 94, 145, 151, 186, 188, 191, 192, 199, 219, 233], "same": [2, 17, 18, 24, 28, 29, 31, 33, 34, 37, 39, 41, 44, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 132, 134, 138, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 171, 172, 179, 186, 188, 193, 194, 195, 198, 199, 201, 202, 203, 204, 220, 221, 222, 226, 227, 228, 230, 232, 233], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 121, 134, 145, 146, 159, 160, 162, 172, 173, 174, 175, 177, 179, 193, 195, 200, 203, 223, 226, 227, 230], "It": [2, 71, 75, 76, 77, 78, 87, 128, 129, 130, 131, 132, 145, 149, 179, 183, 184, 186, 187, 188, 193, 195, 198, 199, 201, 202, 203, 208, 210, 218, 222, 230, 231], "equival": [2, 39, 40, 41, 70, 71, 78, 92, 129, 151, 178, 179, 193, 199, 201, 202, 203, 225, 230], "kei": [2, 81, 201, 227], "tupl": [2, 148, 230], "accord": [2, 35, 87, 102, 104, 105, 144, 145, 146], "commonli": [2, 198], "entri": [2, 75, 77, 80, 94, 191, 192, 195, 199, 202, 218, 224], "row": [2, 80, 190, 195, 202, 203], "cr": [2, 72, 80], "compress": [2, 80, 203, 227], "spars": [2, 203, 208, 221, 235], "matrix": [2, 190, 202, 203], "requir": [2, 75, 76, 77, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 149, 153, 154, 155, 156, 157, 158, 171, 179, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 203, 204, 207, 208, 217, 220, 222, 223, 226, 229, 230, 232], "extent": [2, 75, 76, 77, 78, 80, 129, 153, 155, 157, 172, 173, 174, 175, 176, 177, 178, 179, 186, 199, 203, 215, 218, 224, 225, 231], "version": [2, 72, 76, 84, 91, 129, 130, 131, 132, 134, 137, 138, 161, 163, 179, 187, 188, 194, 197, 199, 201, 204, 209, 215, 218, 220, 221, 222, 233], "take": [2, 76, 77, 78, 85, 87, 92, 94, 102, 104, 105, 129, 134, 135, 137, 145, 147, 152, 173, 174, 175, 186, 187, 192, 193, 194, 198, 199, 200, 201, 203, 207, 210, 215, 220, 222, 224, 226, 229, 235], "object": [2, 11, 22, 30, 75, 76, 81, 86, 87, 88, 107, 131, 132, 133, 134, 135, 136, 149, 151, 175, 179, 185, 188, 192, 193, 194, 195, 199, 201, 203, 207, 231, 233], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 146, 148, 149, 150, 154, 156, 158, 175, 179, 186, 187, 191, 193, 194, 195, 198, 199, 200, 202, 203, 204, 208, 218, 221, 222, 224, 227, 228, 229, 231], "oper": [2, 4, 11, 21, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 132, 135, 138, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 172, 173, 174, 175, 179, 181, 185, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 203, 210, 213, 215, 222, 223, 227, 232, 233, 235], "should": [2, 4, 17, 30, 55, 59, 60, 74, 75, 87, 92, 94, 118, 119, 121, 124, 129, 133, 134, 135, 144, 146, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 202, 203, 204, 207, 214, 218, 220, 222, 227, 233], "member": [2, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 139, 144, 145, 146, 151, 153, 154, 155, 156, 164, 173, 174, 175, 180, 185, 187, 190, 192, 193, 197, 199, 203, 216, 218, 221, 222, 231, 232, 233], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 148, 150, 160, 183, 184, 193, 196, 203, 220, 222, 226], "b": [2, 11, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 143, 144, 153, 154, 155, 156, 157, 158, 164, 171, 179, 183, 184, 185, 193, 195, 199, 201, 203, 215, 232], "bool": [2, 13, 14, 17, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 92, 100, 129, 130, 131, 135, 146, 158, 163, 173, 174, 175, 179, 184, 185, 192, 194, 199, 201, 207, 215, 227], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 92, 94, 100, 129, 130, 131, 134, 135, 153, 154, 155, 156, 157, 158, 159, 172, 173, 174, 178, 179, 184, 185, 186, 188, 192, 195, 201, 203, 215], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 129, 132, 135, 143, 144, 145, 146, 151, 160, 165, 172, 179, 180, 183, 185, 186, 188, 189, 190, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 209, 214, 215, 218, 220, 221, 222, 224, 227, 228, 233], "goe": [2, 203, 218], "befor": [2, 35, 69, 74, 75, 76, 86, 99, 100, 101, 132, 133, 134, 151, 172, 179, 193, 195, 196, 197, 198, 199, 202, 203, 209, 218, 221, 227, 229, 232, 233], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 48, 67, 69, 137, 138, 139, 144, 161, 163, 168, 197, 199, 201, 203, 207, 210, 231, 233], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 135, 136, 137, 139, 160, 162, 173, 174, 175, 179, 183, 184, 201, 209], "preced": [2, 194, 222], "larger": [2, 74, 76, 77, 152, 175, 179, 186, 203, 206], "final": [2, 72, 76, 79, 83, 87, 130, 131, 132, 134, 144, 145, 146, 158, 163, 168, 172, 175, 177, 179, 183, 184, 185, 189, 191, 192, 193, 196, 199, 203, 207, 215, 224, 227, 228, 233], "barrier": [2, 151, 200, 229], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 93, 118, 119, 124, 128, 129, 131, 135, 151, 171, 172, 180, 186, 190, 193, 195, 197, 198, 199, 200, 202, 204, 205, 220, 222, 224, 226, 228, 229, 230, 231, 233, 235], "immedi": [2, 144, 188, 196, 203, 204, 229], "after": [2, 11, 15, 17, 18, 22, 24, 33, 34, 43, 44, 47, 49, 50, 51, 52, 54, 55, 58, 60, 65, 66, 67, 68, 70, 71, 75, 77, 86, 87, 94, 131, 133, 134, 151, 172, 176, 177, 185, 186, 188, 194, 195, 196, 198, 199, 200, 202, 203, 204, 218, 219, 220, 221, 222, 228, 229, 232], "both": [2, 72, 75, 76, 79, 82, 87, 94, 107, 116, 117, 135, 159, 160, 172, 179, 186, 187, 190, 193, 194, 195, 196, 198, 199, 201, 203, 208, 218, 219, 220, 221, 222, 226, 227], "global": [2, 83, 87, 149, 151, 154, 156, 158, 193, 203, 229], "scratch": [2, 76, 129, 151, 152, 179, 198, 200, 235], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 92, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 143, 151, 152, 171, 173, 174, 175, 176, 177, 179, 180, 183, 188, 190, 192, 196, 197, 201, 202, 204, 205, 208, 209, 210, 222, 227, 228, 229, 230, 232, 233, 235], "space": [2, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 95, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 171, 172, 176, 177, 179, 180, 190, 192, 193, 194, 195, 204, 208, 220, 222, 226, 227, 229, 231, 232, 235], "biton": 2, "algorithm": [2, 81, 87, 90, 186, 188, 193, 194, 196, 198, 199, 200, 203, 208, 222, 224, 229, 230], "stabl": [2, 218], "mean": [2, 22, 34, 67, 68, 76, 81, 92, 94, 129, 132, 135, 143, 144, 147, 179, 181, 188, 193, 195, 198, 199, 200, 201, 202, 203, 204, 206, 209, 227, 234], "repeat": [2, 193, 220, 229, 232], "input": [2, 22, 34, 67, 68, 76, 77, 79, 94, 145, 146, 188, 190, 194, 195, 199, 203, 222, 226, 227], "correspond": [2, 76, 79, 87, 117, 121, 134, 160, 173, 174, 175, 178, 179, 193, 194, 199, 200, 203, 219, 220, 231], "might": [2, 129, 166, 185, 186, 193, 194, 195, 196, 197, 198, 199, 202, 203, 226, 233, 234], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 92, 94, 97, 127, 128, 129, 131, 134, 135, 138, 144, 148, 150, 159, 166, 172, 179, 184, 187, 188, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 211, 218, 220, 221, 222, 228, 233], "execspac": [2, 79, 129, 150, 159, 171, 172, 203], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 93, 126, 127, 128, 147, 148, 150, 159, 165, 179, 193, 194, 227], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 150, 151, 153, 155, 157, 168, 171, 172, 176, 177, 195, 203, 225, 230], "member_typ": [2, 72, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 190, 193, 195], "10": [2, 24, 34, 48, 69, 77, 78, 82, 86, 132, 133, 134, 146, 172, 179, 188, 193, 199, 203, 205, 213, 214, 220, 222, 233], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 121, 146, 193, 195, 199, 200, 203, 228], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 94, 129, 140, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 168, 179, 186, 193, 195, 197, 198, 199, 200, 203, 215, 224, 225, 226, 227, 228, 229, 231, 233], "whole": [2, 151, 186, 188, 190, 202, 231], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 97, 162, 172, 175, 177, 179, 213, 226, 235], "league_rank": [2, 144, 145, 149, 151, 153, 154, 155, 156, 157, 158, 190, 193], "ahost": 2, "create_mirror_view_and_copi": [2, 171], "hostspac": [2, 72, 75, 87, 93, 171, 172, 175, 179, 192, 195, 203, 225], "cout": [2, 129], "j": [2, 80, 149, 155, 158, 159, 193, 195, 198, 199, 203, 205, 226, 229, 231], "vectorlen": 2, "vector_length_max": [2, 152], "now": [2, 87, 129, 135, 147, 159, 172, 179, 185, 187, 193, 195, 197, 198, 201, 203, 207, 224, 233], "column": [2, 80, 195, 199, 202, 203, 222], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 92, 97, 129, 135, 143, 171, 179, 186, 195, 203, 229], "na": [2, 214, 222], "9": [2, 34, 48, 69, 78, 88, 188, 202, 209, 210, 213, 214, 220, 222], "38": 2, "68": 2, "74": [2, 205], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 188, 214], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 193], "13": [2, 4, 23, 24, 39, 40, 53, 56, 145, 203, 213, 220], "16": [2, 77, 188, 195, 214, 222], "17": [2, 84, 88, 132, 139, 145, 188, 214, 220, 221], "40": [2, 78], "44": [2, 220], "54": 2, "96": [2, 195], "18": [2, 188, 204, 205, 214, 218, 220], "77": 2, "80": [2, 175], "82": 2, "94": 2, "14": [2, 23, 88, 139, 188, 213, 214, 222], "34": [2, 53, 56, 151], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 137, 139, 146, 153, 155, 157, 172, 179, 199, 209, 213, 214, 218, 220, 235], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 130, 131, 132, 134, 137, 138, 139, 146, 148, 150, 151, 153, 155, 157, 170, 172, 175, 176, 177, 178, 179, 189, 190, 191, 204, 205, 206, 208, 209, 211, 213, 215, 218, 220, 222, 226, 230, 235], "5": [2, 11, 12, 21, 22, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 139, 148, 150, 151, 153, 155, 157, 162, 164, 170, 172, 175, 178, 179, 190, 193, 202, 205, 210, 213, 214, 215, 220, 233, 235], "20": [2, 78, 88, 89, 129, 135, 136, 137, 147, 175, 188, 204, 214, 222], "33": [2, 205], "39": 2, "60": [2, 203], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 130, 131, 132, 134, 138, 179, 188, 190, 198, 202, 204, 209, 210, 213, 214, 215, 218, 220, 222, 235], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 131, 134, 150, 152, 153, 155, 157, 173, 174, 175, 179, 186, 188, 194, 198, 199, 200, 203, 209, 210, 213, 214, 220, 222, 230, 235], "15": [2, 4, 21, 25, 28, 30, 35, 42, 151, 170, 178, 199, 213], "31": [2, 78], "42": [2, 129, 147, 227], "86": 2, "29": [2, 188, 214], "56": 2, "63": 2, "90": [2, 202, 218, 225], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 144, 145, 146, 148, 150, 152, 179, 193, 198, 199, 200, 201, 203, 207, 215, 224, 226, 229], "minimum": [3, 72, 77, 102, 104, 105, 107, 114, 115, 116, 117, 118, 119, 145, 146, 188, 189, 190, 214, 218], "modifi": [3, 4, 11, 17, 22, 24, 28, 30, 32, 33, 35, 36, 40, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 145, 146, 183, 184, 186, 187, 193, 195, 220], "sequenc": [3, 26, 61, 74, 89, 193, 198, 200], "numer": [3, 83, 137, 138, 188, 196, 198, 204, 222, 226, 231], "partit": [3, 35, 47, 207], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 207], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 121, 179, 183, 215, 225, 230], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 144, 145, 146, 152, 171, 176, 177, 179, 198, 199, 202, 203], "qualifi": [4, 87, 207, 214, 233], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 94, 130, 197, 199, 200, 201, 203, 204, 218, 228, 231, 233], "taken": [4, 187, 190, 220], "becaus": [4, 138, 159, 195, 197, 198, 199, 201, 203, 204, 218, 229, 233], "we": [4, 39, 40, 41, 76, 84, 87, 94, 132, 138, 172, 179, 185, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 214, 220, 224, 225, 227, 228, 233], "chang": [4, 72, 75, 81, 132, 151, 166, 179, 187, 194, 196, 199, 201, 202, 203, 204, 215, 217, 218, 219, 220, 222, 228, 233], "itself": [4, 76, 77, 94, 129, 135, 147, 175, 179, 186, 188, 190, 196, 198, 202, 203, 204, 220, 231, 232], "without": [4, 72, 75, 77, 86, 87, 94, 131, 143, 145, 166, 172, 176, 177, 187, 188, 189, 201, 202, 203, 204, 207, 211, 214, 226, 228, 229, 232, 233], "dereferenc": [4, 11, 22, 30, 31, 86, 231], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 133, 134, 144, 145, 146, 148, 149, 151, 153, 154, 155, 156, 171, 176, 177, 178, 179, 187, 188, 189, 191, 192, 193, 194, 195, 198, 199, 202, 203, 204, 211, 218, 219, 220, 221, 222, 226, 227, 229, 232], "done": [4, 37, 54, 69, 87, 94, 135, 188, 193, 194, 201, 203, 204, 218, 220, 227], "execut": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 126, 127, 128, 131, 133, 134, 135, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 167, 171, 172, 177, 179, 180, 185, 186, 194, 195, 196, 201, 204, 208, 209, 218, 221, 222, 226, 230, 231, 232, 233, 235], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 131, 144, 145, 148, 151, 153, 155, 157, 170, 172, 175, 176, 177, 178, 179, 193, 194, 203, 204, 207, 215, 225, 226, 227], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 97, 172, 176, 177, 179, 195, 203, 215, 226], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 97, 172, 176, 177, 179, 195, 199, 202, 203, 226], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 97, 179, 202, 203, 225], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 170], "proper": [4, 86, 188, 195, 204], "content": [4, 72, 75, 131, 145, 146, 160, 176, 177, 195, 197, 199, 203, 227, 229, 232, 233], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 103, 129, 186, 195, 198, 199, 202, 203, 228], "iteratortyp": [4, 12, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 82, 134, 169, 174, 179, 193, 194, 195, 198, 202, 203, 218, 222], "need": [4, 28, 30, 76, 77, 84, 87, 94, 128, 129, 132, 136, 138, 145, 146, 159, 172, 179, 187, 188, 189, 193, 194, 195, 196, 197, 199, 201, 202, 204, 218, 219, 220, 222, 227, 229], "go": [4, 86, 144, 145, 146, 148, 150, 151, 152, 187, 188, 193, 198, 202, 218, 220], "calcul": [4, 140, 141, 142, 152, 175, 193, 195, 203, 225, 231], "neg": [4, 18, 24, 33, 63, 64, 134, 185, 186, 201], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 20, 25, 26, 27, 38, 49, 50, 53, 54, 61, 62, 71, 76, 92, 99, 100, 131, 159, 178, 179, 183, 184, 194], "stepsb": 4, "swap": [4, 59, 65, 193], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 94, 129, 134, 135, 138, 149, 163, 179, 187, 188, 197, 198, 201, 202, 203, 209, 218, 222, 226, 227, 228, 233], "current": [4, 74, 76, 77, 81, 87, 94, 99, 100, 129, 135, 138, 159, 164, 179, 183, 184, 188, 193, 199, 200, 201, 202, 203, 204, 208, 218, 221, 222, 227], "api": [4, 17, 55, 81, 88, 133, 134, 151, 166, 194, 206, 208, 216, 226, 232], "doe": [4, 47, 75, 77, 81, 87, 91, 94, 126, 131, 143, 145, 146, 163, 179, 187, 188, 193, 194, 195, 197, 198, 202, 203, 204, 214, 215, 218, 221, 222], "fenc": [4, 72, 87, 90, 129, 135, 144, 145, 151, 159, 177, 179, 198, 203, 204, 229, 233], "min_el": [5, 39, 41], "max_el": 5, "minmax_el": 5, "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 92, 94, 97, 132, 135, 144, 151, 152, 159, 164, 171, 173, 174, 175, 177, 179, 189, 191, 192, 193, 195, 197, 198, 199, 204, 210, 215, 220, 222, 227, 229, 231, 233], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 65, 76, 77, 81, 132, 135, 151, 152, 173, 174, 175, 179, 187, 197, 215, 223, 233], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 200], "generate_n": 6, "remov": [6, 52, 88, 130, 134, 137, 138, 139, 166, 187, 194, 207, 209, 218, 220], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 130, 131, 139, 188, 195, 199, 207, 234], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136], "reverse_copi": 6, "rotat": [6, 60, 136], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 129, 143, 179, 188, 194, 198, 204, 235], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 184, 201], "any_of": [7, 184, 201], "none_of": [7, 184, 201], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 136, 186, 188, 189, 190, 197, 199, 204, 208, 209, 218, 233], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 203], "search": [7, 12, 19, 20, 25, 26, 27, 35, 53, 62, 74, 81, 131, 232], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 129, 145, 146, 151, 189, 193, 196, 198, 200, 202, 203], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 92, 129, 135, 148, 150, 159, 172, 193, 195, 228], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 127, 131, 132, 134, 143, 144, 145, 146, 161, 179, 180, 188, 194, 203, 207, 234], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 127, 129, 135, 143, 144, 145, 146, 171, 175, 176, 177, 179, 180, 203, 207, 220, 222], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 129, 135, 193, 195, 198, 211, 219, 231], "second": [11, 36, 38, 40, 42, 72, 74, 92, 94, 134, 143, 159, 160, 169, 178, 183, 184, 185, 186, 190, 193, 194, 195, 197, 198, 199, 203, 233], "comput": [11, 22, 34, 37, 59, 67, 68, 136, 145, 188, 190, 191, 192, 193, 196, 199, 200, 201, 203, 204, 205, 218, 221, 225, 226, 231], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 94, 97, 172, 187, 188, 190, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 218, 220, 222, 227, 229, 233], "adjac": 11, "pair": [11, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 91, 170, 178, 190, 202, 207, 222], "write": [11, 22, 34, 58, 66, 67, 68, 84, 94, 129, 135, 188, 189, 193, 196, 198, 199, 201, 202, 203, 208, 218, 222], "them": [11, 58, 87, 129, 186, 187, 188, 193, 194, 195, 197, 199, 200, 201, 203, 218, 227, 233], "binari": [11, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 107, 121, 187, 190, 199, 203, 209, 211], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 79, 87, 92, 94, 129, 135, 143, 150, 152, 159, 172, 176, 177, 179, 180, 185, 187, 190, 197, 199, 202, 203, 231, 233], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 92, 94, 129, 131, 135, 144, 145, 146, 147, 151, 179, 186, 187, 188, 191, 193, 198, 207, 208, 211, 222, 224, 225, 228, 233, 234], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 91, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 138, 139, 145, 148, 149, 150, 154, 156, 158, 160, 162, 171, 178, 179, 183, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 208, 218, 219, 222, 225, 229, 232, 233], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 127, 144, 145, 146, 179, 187, 188, 193, 203, 208, 209, 221, 222, 228], "purpos": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 94, 148, 150, 179, 196, 198, 200, 202, 203, 206, 208, 211, 218], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 94, 129, 134, 135, 136, 147, 164, 178, 179, 183, 198, 201, 202, 203, 215], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 129, 131, 132, 144, 145, 146, 152, 178, 179, 180, 183, 185, 188, 193, 195, 198, 199, 200, 203], "check": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 81, 84, 88, 129, 131, 135, 136, 163, 190, 194, 195, 203, 204, 209, 218, 221, 222, 226], "mode": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 187, 195, 200, 201, 214, 220], "pass": [11, 17, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 94, 129, 130, 131, 132, 134, 137, 178, 188, 194, 195, 196, 199, 202, 203, 204, 214, 220, 221, 222, 226, 227], "callabl": [11, 22, 48, 67, 69, 163, 179, 183, 184, 187], "value_typ": [11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 145, 146, 164, 172, 179, 183, 184, 190, 192, 199, 215, 227, 229], "conform": [11, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 69, 232], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 92, 118, 119, 121, 129, 131, 132, 135, 144, 145, 151, 152, 164, 173, 174, 175, 183, 184, 186, 194, 195, 200, 202, 203, 218, 219, 227], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "consecut": [12, 70, 71, 136, 152, 203, 227], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 76, 79, 87, 88, 92, 127, 128, 131, 133, 135, 139, 143, 147, 152, 171, 176, 177, 179, 183, 184, 187, 188, 193, 198, 199, 200, 203, 204, 215, 220, 221, 222, 228, 233], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 69, 72, 75, 76, 77, 83, 84, 87, 89, 91, 97, 121, 129, 132, 134, 135, 136, 137, 138, 139, 144, 147, 153, 155, 157, 163, 174, 179, 180, 183, 184, 185, 188, 189, 193, 196, 198, 199, 200, 201, 203, 204, 209, 215, 221, 225, 226, 229, 232, 233], "similar": [12, 13, 14, 20, 26, 27, 38, 45, 61, 62, 72, 76, 78, 82, 87, 94, 179, 187, 197, 198, 201, 222, 227, 233], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 44, 50, 51, 58, 60, 66, 71], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 94], "satisfi": [13, 14, 35, 45, 46, 47, 82, 145, 171, 219], "unari": [13, 14, 17, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 94, 138], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [14, 17, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 155, 160, 164, 171, 176, 177, 178, 195, 207, 211, 215, 229], "least": [14, 78, 81, 87, 135, 136, 195, 201, 221], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 94, 131, 134, 135, 136, 138, 143, 151, 153, 154, 155, 156, 159, 161, 171, 173, 174, 176, 177, 178, 179, 183, 184, 186, 187, 188, 189, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 218, 220, 222, 224, 225, 227, 231, 232, 233], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 43, 44, 50, 51, 54, 55, 58, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 94, 136, 151, 153, 154, 155, 156, 171, 178, 186, 193, 194, 195, 200, 201, 202, 203, 222, 227, 231], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 69, 70, 71, 89, 90, 134, 138, 144, 145, 187, 201, 202, 203, 207, 231], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 151, 163, 170, 179, 188, 198, 201, 204, 206, 211, 216, 220, 222, 234], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 179, 195, 227], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 159, 188, 200], "preserv": [16, 49, 52, 78, 87, 176, 177, 194], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "convert": [17, 28, 35, 36, 40, 46, 51, 52, 55, 56, 84, 92, 94, 129, 131, 134, 160, 163, 179, 183, 184, 195, 201, 225, 226], "everi": [17, 28, 30, 35, 36, 40, 46, 51, 52, 55, 56, 70, 76, 81, 94, 151, 153, 154, 155, 156, 172, 178, 179, 186, 187, 188, 190, 193, 197, 201, 202, 203, 204, 218, 219, 222, 228, 232, 233], "sizetyp": [18, 24, 31, 33, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "If": [18, 24, 33, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 126, 127, 128, 132, 135, 144, 145, 146, 152, 163, 171, 172, 177, 178, 179, 186, 187, 188, 189, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 218, 219, 220, 226, 227, 229, 231, 233], "otherwis": [18, 21, 24, 33, 35, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 92, 94, 128, 129, 131, 152, 171, 179, 187, 194, 195, 199, 203, 204, 211, 220], "count_iterator_api_default": 19, "count_view_api_default": 19, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 61, 69], "iteratortype2": [21, 26, 27, 38, 42, 61, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "fals": [21, 29, 35, 42, 74, 77, 81, 129, 131, 132, 133, 135, 163, 171, 175, 201, 203], "via": [21, 26, 27, 37, 49, 52, 69, 85, 86, 94, 118, 119, 124, 127, 135, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 179, 186, 188, 191, 193, 194, 195, 203, 204, 218, 219, 220, 221, 225, 227, 232], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 94, 97, 159, 171, 172, 175, 178, 180, 185, 186, 187, 188, 190, 195, 198, 209, 218, 219, 220, 222, 227, 231], "p": [21, 28, 30, 42, 46, 75, 77, 79, 160, 176, 177, 188, 196, 203, 204, 207, 222, 226], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 94, 121, 131, 193, 195, 198, 199, 202, 203, 224, 227], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 93, 148, 150, 152, 172, 188, 194, 196, 199, 200, 203, 204, 207, 208, 209, 214, 220, 221, 222, 229], "enabl": [21, 25, 28, 30, 42, 86, 88, 135, 149, 154, 156, 158, 165, 188, 193, 194, 199, 200, 203, 205, 218, 222, 228, 230, 232], "you": [21, 25, 28, 30, 42, 75, 94, 129, 132, 135, 138, 139, 147, 175, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 201, 202, 204, 205, 207, 209, 210, 216, 220, 231, 233], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 129, 160, 179, 188, 190, 193, 194, 195, 199, 201, 202, 221, 222], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 97, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 131, 134, 138, 150, 151, 152, 160, 164, 165, 167, 169, 173, 174, 175, 179, 181, 183, 184, 185, 186, 187, 188, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 209, 210, 214, 218, 220, 221, 222, 225, 229, 232, 233], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 191, 192], "init_valu": [22, 34, 67, 68, 193], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 146, 151, 163, 199, 202, 227], "prefix": [22, 34, 67, 68, 90, 193, 194, 199, 200, 209], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 107, 121, 145, 154, 156, 158, 189, 190, 191, 192, 193, 199], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 136, 145, 146, 152, 159, 170, 179, 189, 190, 191, 192, 193, 195, 197, 198, 200, 202, 203, 222, 225, 226, 232, 233, 234], "scan": [22, 34, 67, 68, 72, 74, 146, 151, 152, 193, 198, 200, 203, 227], "combin": [22, 34, 81, 87, 102, 104, 105, 121, 135, 145, 146, 179, 190, 193, 196, 200, 203, 214, 220, 232], "th": [22, 34, 67, 68, 74, 178], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 94, 129, 135, 187, 188, 193, 194, 195, 200, 201, 203, 221], "22": [23, 214, 222], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 143, 147, 183, 184, 186, 188, 197, 198, 218, 231, 233], "newvalu": [24, 53, 56], "forward": [25, 74, 132, 187, 195, 200, 220, 227], "find_iterator_api_default": 25, "find_view_api_default": 25, "found": [25, 28, 37, 74, 78, 81, 84, 102, 105, 121, 186, 187, 188, 197, 198, 200, 201, 218, 222, 233], "cbegin": [25, 35], "cend": [25, 35], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 129, 131, 135, 138, 163, 165, 171, 172, 179, 188, 193, 194, 195, 197, 199, 200, 203, 204, 218, 222, 223, 227, 228, 232, 233], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 129, 163, 179, 195, 199, 218, 222, 226], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 138], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 144, 145, 146, 199, 226], "incrementvalsfunctor": 30, "increment": [30, 37, 186, 195, 198, 203], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": [32, 33], "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 94, 129, 131, 133, 145, 146, 185, 196, 198, 200, 203, 211, 229, 232], "being": [32, 81, 87, 89, 94, 121, 139, 140, 141, 142, 152, 161, 178, 186, 193, 198, 201, 203, 218, 234], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "11": [34, 41, 48, 69, 78, 187, 188, 199, 213, 214, 220, 222], "12": [34, 48, 69, 72, 172, 188, 204, 205, 213, 214, 218, 227], "inclus": [34, 68, 146, 199, 202, 218, 221], "op": [34, 72, 79, 81, 84, 98, 121, 172, 186, 203], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 136, 179, 186, 203, 227], "don": [35, 72, 75, 87, 171, 179, 186, 187, 199, 214, 220], "empti": [35, 39, 40, 41, 75, 82, 207, 232], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 94, 131, 135, 151, 179, 193, 194, 202, 203, 204], "re": [35, 39, 40, 41, 87, 94, 129, 135, 147, 164, 188, 197, 199, 203, 232, 233], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 222], "less": [36, 38, 39, 40, 41, 63, 64, 87, 136, 159, 189, 194, 201, 203, 214, 218, 226, 227], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 94, 129, 131, 135, 136, 152, 178, 179, 186, 188, 193, 194, 195, 198, 199, 201, 202, 203, 204, 205, 214, 218, 226, 231], "your": [36, 40, 75, 129, 187, 188, 189, 194, 199, 201, 203, 204, 206, 227, 233], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 107, 109, 110, 111, 179, 186, 188, 190, 193, 198, 200, 201, 203, 232], "largest": [37, 39, 41, 79, 82, 136, 200], "comparison": [37, 54, 72, 138, 186, 189], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 139, 170, 171, 172, 178, 202], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 87, 91, 94, 145, 147, 171, 172, 179, 188, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 218, 224, 227, 229, 230, 231], "sever": [39, 40, 41, 87, 89, 188, 198, 199, 208, 219, 221, 222, 228], "custom": [39, 40, 41, 76, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 179, 193, 199, 203, 213, 218, 219, 226, 235], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 187, 195, 199, 200, 218, 234], "smallest": [40, 41, 136], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 93, 94, 138, 147, 186, 188, 189, 190, 193, 195, 196, 197, 200, 202, 203, 204, 208, 209, 222, 225, 226, 227, 228, 233], "cpp": [42, 131, 188, 207], "mismatchfunctor": 42, "mismatch_index": 42, "outputiter": [43, 44, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 172, 192], "move_iterator_api_default": 43, "move_view_api_default": 43, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 151, 153, 155, 157, 159, 199, 211, 220], "contain": [46, 49, 52, 74, 75, 81, 94, 131, 134, 144, 145, 146, 151, 166, 171, 173, 174, 175, 176, 177, 179, 180, 187, 188, 190, 193, 194, 195, 197, 198, 201, 208, 218, 222, 227, 231, 233, 234], "locat": [47, 75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 179, 188, 193, 198, 200, 203, 204, 209, 222, 225, 230], "alreadi": [47, 76, 78, 81, 85, 87, 172, 179, 187, 196, 199, 220, 224], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 151, 152, 190, 191, 192, 193, 198, 200, 207, 213, 229, 235], "account": [48, 68, 152, 218], "join": [48, 69, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 189, 190, 192, 193, 198, 207, 218, 222, 227], "dure": [48, 86, 121, 150, 152, 178, 186, 193, 194, 195, 200, 203, 204, 218, 219, 221, 222, 224, 227, 231], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 94, 127, 128, 129, 131, 132, 150, 168, 179, 187, 200, 201, 203, 204, 233], "associ": [48, 69, 72, 76, 94, 107, 121, 129, 133, 135, 147, 151, 159, 178, 179, 190, 193, 198, 199, 203, 227, 229, 231], "commut": [48, 69, 121], "shift": [49, 52, 63, 64, 102, 105], "remain": [49, 52, 87, 128, 198, 218], "physic": [49, 52, 74, 152, 193, 197, 200, 203, 233], "size": [49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 127, 128, 135, 140, 141, 142, 148, 150, 152, 173, 174, 175, 179, 183, 184, 193, 195, 199, 200, 201, 203, 226, 227, 230, 232], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "target": [49, 50, 72, 75, 94, 129, 144, 188, 195, 196, 198, 200, 208, 209, 222], "new": [49, 50, 51, 52, 59, 60, 70, 74, 75, 79, 81, 87, 89, 94, 99, 100, 101, 104, 106, 128, 129, 131, 132, 135, 139, 147, 159, 171, 175, 176, 177, 178, 181, 186, 187, 190, 193, 195, 196, 197, 198, 199, 203, 204, 210, 215, 216, 218, 219, 220, 221, 228, 232, 233], "ther": [50, 57], "omit": [50, 51, 75, 76, 126, 127, 128, 179], "those": [50, 51, 74, 75, 78, 92, 94, 145, 160, 179, 187, 188, 193, 195, 202, 203, 220, 224, 227], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 99, 100, 101, 102, 105], "new_valu": [53, 54, 55, 56, 99, 100, 101, 106], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135], "explanatori": [53, 54, 161], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 190, 192, 203], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 94, 181, 186, 187, 188, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 211, 226, 227, 230, 231, 233], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 143, 151, 188, 193, 197, 204, 210, 222, 224, 233], "about": [59, 60, 85, 87, 88, 92, 129, 135, 138, 147, 148, 150, 159, 179, 187, 197, 198, 199, 200, 201, 203, 204, 207, 218, 230, 233], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 178, 202, 232], "toward": [63, 64, 196, 198], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "iterator1": 65, "iterator2": 65, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "d_first": 66, "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 94, 99, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 132, 145, 179, 186, 189, 190, 193, 198, 199, 200, 201, 203, 224, 226, 227, 230], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 127, 129, 132, 133, 134, 135, 160, 187, 199, 203, 204, 218, 222], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 179, 190, 193, 197, 202, 203, 211, 221, 226, 233], "along": [69, 87, 202, 225], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 179], "group": [70, 193, 198, 200, 218, 222], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 91, 131, 136, 138, 139, 160, 163, 186, 187, 188, 194, 196, 198, 203, 204, 218, 222, 227, 230, 231, 234, 235], "categori": [72, 181, 186, 188, 196, 198, 218, 221, 222], "descript": [72, 73, 83, 85, 88, 90, 97, 107, 121, 122, 129, 131, 186, 188, 194, 209, 220, 222], "rand": 72, "plu": [72, 122, 124, 127, 186, 193, 199, 226], "random_xorshift1024_pool": 72, "1024": [72, 77, 151, 191, 192, 193], "random_xorshift1024": 72, "sampl": [72, 191, 192], "fit": [72, 94, 193, 200, 211], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 129, 144, 145, 146, 159, 167, 188, 190, 198, 199, 200, 232], "dualview": [72, 73, 82, 87, 88, 181, 235], "mirror": [72, 73, 75, 78, 171], "dynamicview": [72, 73, 181], "dynam": [72, 76, 77, 85, 88, 94, 131, 148, 150, 152, 176, 177, 179, 198, 203, 204, 232], "dynrankview": [72, 73, 172, 181], "determin": [72, 73, 76, 88, 148, 152, 155, 178, 179, 183, 184, 188, 193, 194, 198, 199, 200, 203, 204, 209, 218, 219, 221, 226, 227, 232], "runtim": [72, 73, 76, 78, 79, 85, 129, 131, 148, 150, 152, 179, 190, 193, 195, 200, 203, 209, 218, 231, 233], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 94, 129, 131, 132, 135, 137, 138, 183, 184, 187, 188, 189, 193, 195, 199, 201, 203, 204, 209, 210, 221, 222, 227, 229, 235], "error": [72, 138, 161, 179, 195, 198, 202, 203, 204, 210, 214, 220, 222, 231], "record": [72, 87, 218], "code": [72, 77, 87, 88, 90, 94, 129, 135, 137, 151, 163, 172, 179, 186, 187, 188, 189, 191, 193, 198, 199, 200, 202, 203, 204, 208, 209, 210, 211, 213, 214, 218, 219, 221, 222, 223, 226, 227, 230, 231, 232, 234], "offsetview": [72, 73, 87, 181, 207], "indici": [72, 117, 186], "scatterview": [72, 73, 181, 223, 235], "transpart": 72, "replic": [72, 186, 195, 222], "strategi": [72, 87, 94, 131, 186, 233], "scatter": [72, 79, 186], "staticcrsgraph": [72, 73, 203], "resiz": [72, 75, 77, 79, 82, 97, 176, 195], "graph": [72, 80, 83, 94, 235], "semant": [72, 76, 78, 82, 94, 179, 187, 193, 195, 199, 203, 208, 227], "unorderedmap": [72, 73, 203], "map": [72, 73, 76, 80, 81, 179, 193, 194, 195, 200, 203, 224, 226, 227], "optim": [72, 88, 150, 186, 188, 193, 195, 196, 198, 200, 203, 204, 209, 227, 233], "insert": [72, 200, 203], "interfac": [72, 82, 87, 93, 94, 149, 154, 156, 158, 181, 187, 193, 195, 196, 198, 202, 203, 225, 231, 233], "abort": [72, 96, 163], "util": [72, 83, 129, 160, 188, 193, 198, 222, 225, 230], "caus": [72, 138, 161, 163, 187, 195, 198, 203, 210, 211], "abnorm": [72, 161, 163], "program": [72, 82, 92, 94, 97, 133, 134, 135, 147, 161, 163, 194, 195, 196, 197, 201, 202, 203, 205, 209, 222, 224, 227, 232, 233, 234], "termin": [72, 132, 133, 134, 161, 163], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 148, 162, 173, 174, 175, 176, 177, 178, 180, 193, 195, 225, 226], "atomic_exchang": [72, 98, 186], "exchang": [72, 99, 100, 101, 186, 223], "old": [72, 75, 79, 81, 132, 177, 186, 199, 203], "atomic_compare_exchang": [72, 98, 186], "match": [72, 75, 76, 78, 82, 97, 144, 145, 146, 148, 160, 171, 173, 174, 179, 186, 188, 193, 203, 215], "atomic_compare_exchange_strong": [72, 98, 186], "atomic_load": [72, 98, 186], "load": [72, 76, 87, 94, 131, 179, 186, 193, 199, 200, 201, 220, 222], "atomic_": [72, 98, 186], "anyth": [72, 94, 166, 186, 187], "atomic_fetch_": [72, 98, 186], "variou": [72, 75, 83, 186, 188, 221, 222], "_fetch": [72, 98, 186], "atomic_stor": [72, 98, 186], "band": [72, 107, 121, 190, 193], "bor": [72, 107, 121, 190, 193], "Or": [72, 107, 232], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 92, 129, 134, 135, 145, 146, 160, 172, 179, 188, 194, 195, 197, 203, 210, 213, 225, 233], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 91, 121, 129, 132, 138, 143, 144, 145, 146, 148, 150, 152, 160, 172, 179, 184, 186, 187, 188, 190, 193, 195, 198, 199, 200, 201, 202, 203, 214, 218, 220, 222, 223, 226, 227, 228, 231], "create_mirror": [72, 97, 203], "relat": [72, 83, 188, 193, 204, 218, 227], "create_mirror_view": [72, 171, 172, 195, 203, 207, 229], "cudaspac": [72, 87, 88, 93, 179, 195, 203, 207, 229], "primari": [72, 84, 94, 187, 188, 194, 214, 218, 220, 221, 222], "cudauvmspac": [72, 87, 88, 93, 195, 197, 203, 204, 207, 233], "unifi": [72, 87, 135, 209], "page": [72, 94, 121, 129, 135, 147, 188, 203, 205, 206, 209, 210, 216], "migrat": [72, 135, 210, 228], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 92, 94, 97, 125, 126, 127, 128, 129, 135, 152, 159, 171, 173, 174, 175, 177, 179, 180, 186, 188, 193, 196, 197, 198, 200, 201, 203, 204, 227, 228, 229, 230, 233], "cudahostpinnedspac": [72, 93, 179, 203], "memrori": 72, "pin": [72, 135, 188], "gpu": [72, 76, 88, 91, 131, 135, 171, 179, 188, 193, 194, 195, 196, 198, 200, 201, 203, 204, 207, 209, 210, 218, 222, 227, 228, 230], "executionpolici": [72, 95, 144, 145, 146], "concept": [72, 83, 94, 95, 107, 121, 129, 135, 145, 147, 151, 173, 174, 175, 187, 189, 192, 193, 196, 198, 200, 205, 235], "hpx": [72, 85, 87, 88, 93, 148, 150, 194, 207, 208, 209], "system": [72, 87, 94, 129, 135, 187, 193, 194, 198, 200, 203, 204, 205, 218, 221, 222, 231], "mechan": [72, 87, 147, 193, 195, 196, 200, 203], "initargu": [72, 131, 132, 134, 194, 207], "programmat": [72, 130, 131, 134], "how": [72, 76, 85, 121, 129, 135, 147, 148, 179, 186, 187, 188, 189, 193, 194, 195, 196, 198, 199, 200, 201, 204, 215, 227], "deprec": [72, 77, 87, 88, 130, 131, 134, 208, 209, 215, 218, 228], "initializationset": [72, 130, 132, 134, 165, 167, 207], "is_array_layout": [72, 87, 207], "trait": [72, 75, 76, 77, 83, 84, 89, 92, 129, 137, 138, 150, 170, 179, 193, 215, 230], "detect": [72, 83, 95, 139, 173, 174, 175, 204], "model": [72, 92, 94, 95, 153, 154, 155, 156, 157, 158, 173, 174, 175, 188, 195, 196, 199, 201, 203, 205, 209, 213, 227], "layout": [72, 75, 76, 77, 78, 79, 95, 97, 171, 173, 174, 175, 176, 177, 195, 196, 198, 202], "is_execution_polici": [72, 207], "is_execution_spac": [72, 87, 129, 207], "is_memory_spac": [72, 87, 135, 207], "memoryspac": [72, 76, 92, 95, 126, 127, 128, 129, 135, 179, 203], "is_memory_trait": [72, 207], "memorytrait": [72, 75, 76, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 179, 186, 193, 203, 230], "is_reduc": [72, 207], "is_spac": [72, 129, 207], "fortran": [72, 76, 97, 173, 179, 188, 202, 203, 214, 223, 235], "arbitrari": [72, 76, 85, 97, 148, 150, 175, 179, 189, 192, 193, 200, 202, 203], "stride": [72, 75, 76, 77, 79, 97, 175, 195, 202, 225], "kokkos_fre": [72, 125, 127, 128, 195, 228], "delloc": 72, "previous": [72, 99, 101, 125, 126, 128, 135, 179, 188, 189, 193, 200, 234], "kokkos_malloc": [72, 125, 126, 128, 195, 197, 228, 233], "kokkos_realloc": [72, 125, 126, 127, 195], "expand": [72, 94, 125, 194, 199], "block": [72, 94, 125, 127, 143, 159, 188, 193, 195, 196, 202, 218, 229], "land": [72, 107, 108, 109, 111, 121, 190, 193, 222], "built": [72, 76, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 179, 188, 189, 192, 193, 194, 203, 222], "lor": [72, 107, 121, 190, 193], "maxloc": [72, 107, 118, 121, 124, 190, 193], "index": [72, 74, 76, 77, 78, 81, 82, 107, 113, 115, 116, 117, 118, 122, 124, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 173, 174, 178, 179, 185, 186, 190, 193, 195, 197, 199, 202, 233], "u": [72, 160, 183, 185, 188, 211, 215], "mdrangepolici": [72, 76, 85, 87, 144, 145, 179, 207, 215, 223, 235], "multidimension": [72, 76, 83, 85, 97, 148, 173, 174, 175, 190, 193, 195, 202, 213, 226], "min": [72, 102, 105, 107, 113, 115, 116, 117, 118, 119, 121, 122, 124, 139, 145, 186, 190, 193, 207, 234], "minloc": [72, 107, 118, 121, 190, 193], "minmax": [72, 107, 119, 121, 189, 190, 193, 207], "minmaxloc": [72, 107, 118, 121, 190, 193], "openmptarget": [72, 87, 88, 93, 188, 194], "targetoffload": 72, "analogu": 72, "bulk": [72, 200], "item": [72, 85, 129, 146, 148, 150, 152, 193, 198, 218, 227, 231], "parallelfortag": [72, 90, 152], "tag": [72, 76, 85, 87, 140, 141, 142, 145, 148, 150, 152, 173, 174, 175, 179, 192, 193, 201, 218, 220, 223, 227], "team_siz": [72, 151, 152, 193], "contribut": [72, 79, 145, 146, 186, 190, 193, 208, 219, 224, 229], "parallelreducetag": [72, 90, 152], "parallel_scan": [72, 90, 142, 143, 158, 193, 199, 200, 227, 228], "simpl": [72, 121, 129, 169, 186, 190, 193, 195, 198, 199, 200, 201, 202, 203, 204, 225, 226, 227, 231], "pre": [72, 146, 159, 183, 184, 188, 218, 224], "postfix": [72, 200], "depend": [72, 88, 94, 135, 152, 153, 157, 163, 186, 187, 188, 189, 193, 198, 199, 200, 201, 204, 226, 228, 229, 233], "parallelscantag": [72, 90], "partition_spac": [72, 93], "split": [72, 85, 149, 153, 154, 155, 156, 157, 158, 159, 193, 199, 232], "exist": [72, 75, 81, 84, 87, 88, 143, 145, 151, 159, 172, 176, 177, 187, 188, 194, 198, 200, 201, 202, 203, 218, 219, 222, 227], "multipl": [72, 87, 88, 94, 107, 145, 186, 188, 193, 194, 195, 198, 199, 201, 203, 204, 208, 209, 218, 221, 222, 227, 231], "perteam": [72, 151, 152, 153, 154, 155, 156, 158, 190, 193], "singl": [72, 94, 145, 149, 150, 153, 154, 155, 156, 158, 183, 184, 190, 195, 196, 198, 199, 200, 202, 203, 204, 226], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 134, 135, 169, 173, 174, 175, 176, 177, 179, 185, 189, 193, 195, 198, 199, 201, 202], "indic": [72, 76, 78, 79, 80, 81, 87, 107, 118, 122, 129, 140, 141, 142, 179, 186, 190, 193, 200, 202, 203, 226, 232], "per": [72, 94, 152, 190, 193, 194, 195, 199, 200, 202, 203, 224, 227], "perthread": [72, 152, 158, 193], "prod": [72, 107, 121, 190, 193], "rangepolici": [72, 85, 87, 129, 144, 145, 146, 147, 159, 193, 195, 199, 203, 229, 231], "1d": [72, 76, 144, 145, 146, 150, 152, 179, 195, 203, 225], "realloc": [72, 75, 79, 97, 128, 177, 203], "maintain": [72, 87, 187, 221], "reducerconcept": [72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 192], "cpu": [72, 88, 129, 135, 171, 186, 188, 193, 194, 200, 201, 207, 209, 210, 214, 220, 222], "aggreg": [72, 86, 193], "spaceaccess": [72, 92, 129, 135, 171, 172, 203, 207], "facil": [72, 89, 97, 136, 139, 171, 181, 218, 221], "queri": [72, 75, 131, 151, 152, 203, 207], "rule": [72, 77, 187], "multi": [72, 76, 144, 145, 179, 190, 196, 204], "dimension": [72, 76, 144, 145, 179, 202, 203], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 94, 97, 132, 134, 145, 148, 173, 174, 175, 179, 186, 190, 191, 192, 193, 195, 202, 207, 213, 222, 223, 224, 227], "crate": [72, 222], "slice": [72, 97, 170, 230, 235], "teamhandl": [72, 149, 153, 154, 155, 156, 157, 158], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 157], "teamvectorrang": [72, 85, 157, 158], "threadvectormdrang": [72, 85], "timer": [72, 96, 143], "basic": [72, 76, 87, 138, 147, 179, 188, 195, 196, 204, 205, 228], "like": [72, 75, 76, 87, 94, 97, 129, 135, 144, 147, 172, 179, 186, 187, 188, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 218, 224, 231, 233], "act": [72, 87, 196, 202], "comment": [73, 188], "offset": [73, 78, 193, 200, 203], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 195, 198, 199, 200, 203], "fix": [74, 81, 86, 187, 195, 203, 218, 219, 220, 230], "run": [74, 88, 94, 134, 135, 144, 186, 187, 188, 190, 193, 194, 195, 197, 198, 199, 200, 203, 204, 209, 218, 220, 222, 228, 229, 233], "time": [74, 75, 76, 85, 87, 88, 92, 94, 129, 148, 150, 152, 169, 179, 183, 184, 186, 187, 188, 193, 198, 199, 200, 201, 202, 203, 204, 209, 218, 219, 220, 222, 226, 228, 231], "paramet": [74, 75, 76, 77, 81, 85, 94, 97, 99, 100, 101, 102, 121, 126, 127, 128, 129, 131, 132, 135, 147, 151, 153, 155, 157, 159, 180, 188, 190, 194, 199, 201, 203, 204, 207, 214, 215, 222, 226, 229, 231], "constant": [74, 78, 83, 89, 129, 136, 138, 139, 162, 179, 183, 184, 199], "bit_scan_revers": 74, "1u": [74, 202], "mask": [74, 184, 185, 194, 201], "direct": [74, 138, 171, 193, 194, 201, 202, 203, 210, 211, 222], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 94, 148, 150, 159, 179], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "when": [74, 78, 81, 82, 86, 87, 91, 94, 129, 134, 135, 145, 149, 152, 173, 174, 175, 185, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 209, 210, 214, 215, 218, 222, 225, 226, 228, 229, 232, 233, 234], "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 179, 187, 195, 203, 209], "wa": [74, 75, 81, 88, 94, 128, 130, 131, 132, 168, 171, 179, 183, 184, 188, 190, 193, 194, 195, 203, 204, 210, 218, 220, 226, 228], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 132, 134, 144, 151, 152, 153, 155, 157, 164, 171, 173, 174, 175, 176, 177, 191, 192, 193, 199, 202, 203, 207, 210, 215], "arg_siz": 74, "reset": [74, 75, 79, 169, 188], "clear": [74, 81, 82, 87, 187], "test": [74, 88, 138, 143, 188, 195, 199, 203, 204, 208, 209, 214, 218, 219, 220], "max_hint": 74, "happen": [74, 76, 77, 94, 99, 100, 179, 186, 193, 194, 195, 197, 203, 218, 220, 222, 233], "occur": [74, 91, 172, 194, 198, 204, 218, 225, 226, 228], "smaller": [74, 76, 77, 178, 179, 195, 222], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 179], "rh": [74, 76, 77, 118, 119, 124, 179, 183, 184, 191, 192, 215, 229], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 145, 199], "src": [74, 75, 79, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 145, 164, 171, 172, 188, 191, 192, 199, 226], "kokkos_dualview": [75, 207], "refer": [75, 76, 77, 79, 82, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 137, 138, 139, 152, 172, 178, 179, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 202, 204, 208, 210, 222, 231], "capabl": [75, 83, 135, 188, 193, 194, 195, 200, 201, 215, 219], "well": [75, 76, 87, 92, 94, 121, 143, 148, 150, 151, 163, 179, 187, 188, 190, 193, 195, 196, 198, 199, 200, 202, 203, 218, 220, 221, 222, 227], "flag": [75, 129, 134, 179, 183, 185, 188, 199, 204, 209, 214, 220, 222], "respons": [75, 194, 195, 198, 201, 219, 221], "manual": [75, 188, 204, 220, 226], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 188, 192, 198, 199, 201, 203, 207, 226, 233], "synchron": [75, 82, 135, 149, 159, 172, 193, 198, 200, 229], "conveni": [75, 79, 84, 129, 195, 199, 202], "capac": [75, 81, 193, 198], "appropri": [75, 80, 94, 121, 188, 193, 198, 199, 200, 202, 203, 204, 218, 219, 222], "underli": [75, 76, 77, 78, 82, 94, 159, 179, 186, 195, 196, 198, 200, 203, 230], "four": [75, 203, 209, 218, 220], "separ": [75, 87, 186, 188, 194, 199, 203, 218, 220, 230, 231], "intend": [75, 84, 87, 89, 160, 188, 193, 197, 203, 233], "pleas": [75, 129, 135, 138, 139, 147, 187, 188, 203, 205, 206, 222], "document": [75, 87, 91, 129, 135, 144, 145, 147, 183, 184, 187, 188, 197, 211, 218, 219, 226, 227, 233], "suffic": 75, "most": [75, 76, 87, 94, 129, 134, 135, 136, 138, 147, 171, 175, 179, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 203, 204, 205, 214, 220, 222, 224, 226, 229, 233], "m": [75, 87, 149, 150, 154, 156, 158, 179, 185, 190, 195, 202, 222, 229], "d_view": [75, 172], "execution_spac": [75, 76, 81, 87, 92, 129, 135, 150, 151, 152, 159, 172, 179, 193, 195, 199, 203, 227, 230], "host_mirror_spac": [75, 76, 171, 179, 207], "h_view": [75, 172], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 179, 215], "t_dev": 75, "hostmirror": [75, 76, 77, 171, 179, 195, 229], "t_host": 75, "const_data_typ": [75, 76, 77, 179], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 129, 172, 173, 174, 175, 176, 177, 179, 203, 215], "randomaccess": [75, 76, 179, 203], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 192, 225], "t_dev_um": 75, "unmanag": [75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 175, 179, 180, 193, 195, 225, 235], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 148, 153, 155, 157, 162, 170, 173, 174, 175, 176, 177, 178, 179, 202, 203, 215], "kokkos_impl_ctor_default_arg": [75, 176, 177], "n1": [75, 76, 79, 148, 153, 155, 157, 159, 162, 170, 173, 174, 175, 176, 177, 178, 179, 202, 203, 215], "n2": [75, 76, 79, 148, 153, 155, 157, 159, 170, 173, 174, 175, 176, 177, 178, 179, 203], "n3": [75, 76, 79, 153, 155, 157, 159, 173, 174, 175, 176, 177, 179, 203], "n4": [75, 76, 79, 173, 174, 175, 176, 177, 179], "n5": [75, 76, 79, 173, 174, 175, 176, 177, 179], "n6": [75, 76, 79, 173, 174, 175, 176, 177, 179], "n7": [75, 76, 79, 173, 174, 175, 176, 177, 179], "analog": [75, 94, 168, 172], "benefit": [75, 214], "nonzero": 75, "impl": [75, 79, 87, 149, 152, 171, 176, 177, 187, 207, 230], "viewctorprop": [75, 79, 171, 176, 177], "arg_prop": [75, 79, 171, 176, 177], "enable_if": 75, "has_point": 75, "wrap": [75, 76, 179, 180, 188, 195, 203], "up": [75, 87, 94, 133, 136, 173, 174, 175, 179, 187, 188, 193, 194, 199, 200, 203, 222, 232], "viewctor": 75, "thing": [75, 87, 129, 181, 187, 188, 195, 197, 198, 200, 201, 203, 233], "ctor": 75, "ss": 75, "ls": [75, 151, 232], "ds": 75, "ms": [75, 129, 135], "shallow": [75, 195, 199, 203], "sd": 75, "s1": [75, 129, 135, 175], "s2": [75, 129, 135, 175], "s3": [75, 175], "arg0": 75, "arg": [75, 76, 77, 84, 132, 148, 150, 152, 159, 168, 170, 178, 179, 180, 194], "d_view_": 75, "h_view_": 75, "caller": [75, 129], "sure": [75, 188, 193, 199, 203, 204], "ensur": [75, 86, 132, 133, 134, 168, 187, 188, 194, 198, 201, 203, 218], "mark": [75, 199, 203, 218, 233], "if_c": 75, "is_sam": [75, 84, 92, 171, 172, 195, 202, 203], "memory_spac": [75, 76, 81, 87, 92, 126, 127, 128, 129, 135, 171, 172, 179, 180, 195, 203, 215, 228], "get_device_sid": 75, "specif": [75, 85, 87, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 143, 150, 151, 152, 159, 172, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 206, 211, 218, 221, 222, 224], "afraid": 75, "express": [75, 83, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 136, 163, 185, 188, 200, 201, 202, 204, 211, 228], "That": [75, 76, 87, 143, 179, 193, 194, 195, 199, 202, 203, 204], "tell": [75, 94, 193, 198, 199, 202, 204, 230, 233], "what": [75, 88, 121, 129, 131, 135, 181, 183, 184, 187, 195, 197, 198, 199, 201, 215, 220, 227, 231], "els": [75, 94, 145, 146, 163, 203, 206, 227, 232], "suppos": [75, 84, 201, 202, 227], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 203], "dual": [75, 82, 209], "want": [75, 84, 186, 197, 198, 199, 201, 227, 233], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 172], "non_const_data_typ": [75, 76, 77, 179], "need_sync": 75, "been": [75, 87, 88, 91, 188, 193, 195, 196, 198, 201, 202, 203, 222, 224, 231, 232], "In": [75, 76, 86, 87, 88, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 145, 147, 149, 154, 156, 158, 163, 172, 179, 181, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 218, 221, 222, 224, 225, 226, 227, 229, 231, 233], "discard": [75, 79], "modif": [75, 196, 211, 229], "doesn": [75, 143, 145, 171, 188, 193, 199, 204], "know": [75, 187, 188, 189, 195, 197, 202, 204, 233], "whether": [75, 76, 77, 82, 87, 88, 99, 129, 131, 135, 147, 152, 179, 190, 197, 198, 199, 202, 203, 209, 211, 215, 218, 219, 221, 227, 232, 233], "inlin": [75, 77, 84, 150, 152, 193, 195, 199, 207], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 179, 188, 193, 198, 209, 228], "referenc": [75, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 178, 179, 195, 203, 218], "address": [75, 76, 79, 99, 100, 101, 102, 103, 104, 105, 106, 137, 179, 183, 187, 188, 193, 196, 198, 200, 210, 218, 222], "null": [75, 76, 77, 79, 82, 126, 128, 132, 134, 179], "pointer": [75, 76, 77, 79, 81, 82, 94, 126, 127, 128, 129, 132, 134, 151, 171, 175, 176, 177, 179, 180, 186, 195, 199, 201, 207, 227, 231], "span": [75, 76, 77, 82, 179], "span_is_contigu": [75, 76, 77, 172, 179], "contigu": [75, 76, 77, 85, 172, 173, 174, 179, 183, 202, 203, 227, 230], "ityp": [75, 76, 77, 154, 156, 158, 178, 179], "stride_": 75, "is_integr": [75, 154, 156, 158, 178], "r": [75, 172, 178, 179, 201, 205, 211, 215, 226, 229], "extent_int": [75, 76, 77, 179], "integr": [75, 76, 77, 88, 136, 139, 178, 179, 218, 220, 222], "kokkos_dynrankview": [76, 207], "potenti": [76, 77, 81, 88, 94, 135, 144, 145, 149, 151, 172, 179, 186, 192, 193, 196, 198, 199, 204, 231], "compil": [76, 85, 87, 88, 92, 129, 136, 138, 148, 150, 172, 179, 183, 184, 186, 187, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 213, 218, 221, 226, 227, 230, 231, 233, 234], "Its": [76, 179, 195], "shared_ptr": [76, 179], "upper": [76, 203], "bound": [76, 77, 81, 85, 88, 148, 150, 193, 195, 203, 209, 222, 225], "layouttyp": [76, 77, 179], "fundament": [76, 84, 85, 94, 129, 135, 147, 179, 183, 184, 185, 196, 198, 200, 218, 227], "mandatori": [76, 195], "scalartyp": [76, 179, 191, 192], "storag": [76, 80, 107, 126, 127, 128, 152, 175, 179, 198, 200, 201, 230], "come": [76, 87, 179, 186, 188, 194, 196, 197, 199, 200, 202, 203, 204, 218, 226, 228, 231, 233], "some": [76, 94, 127, 129, 136, 137, 143, 151, 152, 153, 154, 155, 156, 159, 175, 179, 188, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 210, 215, 218, 222, 224, 226, 227, 229, 231, 233], "ones": [76, 130, 179, 187, 193, 194, 198, 231], "right": [76, 136, 148, 179, 194, 198, 199, 201, 202, 203, 211, 216, 226], "left": [76, 94, 136, 148, 179, 202, 203, 215, 226], "laid": [76, 179, 195], "out": [76, 86, 133, 173, 174, 175, 179, 187, 188, 195, 199, 201, 203, 211, 220, 226, 233], "control": [76, 126, 127, 128, 134, 150, 151, 179, 188, 193, 198, 199, 200, 201, 203, 204, 209, 222, 230], "finer": 76, "grain": [76, 203], "manner": [76, 91, 179], "trigger": [76, 135, 179], "textur": [76, 179, 203], "fetch": [76, 179, 203, 222], "restrict": [76, 77, 149, 176, 177, 178, 179, 195, 198, 199, 200, 203, 204, 222], "There": [76, 81, 87, 94, 129, 134, 135, 147, 159, 179, 181, 186, 187, 188, 195, 200, 201, 204, 218, 220, 226, 227, 229], "alias": [76, 81, 151, 179, 187, 194, 203], "scope": [76, 86, 133, 134, 179, 187, 199, 200, 203, 210, 231, 233], "enforc": [76, 179, 193, 201, 204], "specifi": [76, 77, 79, 81, 82, 85, 87, 88, 92, 121, 126, 127, 129, 130, 144, 145, 148, 150, 151, 152, 168, 170, 171, 178, 179, 188, 192, 193, 194, 195, 200, 204, 221, 222, 230, 233], "variabl": [76, 77, 79, 84, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 173, 174, 187, 188, 189, 190, 193, 199, 204, 210, 215, 222, 229], "rank_dynam": [76, 179], "reference_type_is_lvalue_refer": [76, 77, 179], "lvalu": [76, 77, 179, 203], "scalar_array_typ": [76, 179], "properli": [76, 91, 179, 197, 222, 233], "specialis": [76, 179, 203], "sacado": [76, 179], "fad": [76, 179], "const_scalar_array_typ": [76, 179], "non_const_scalar_array_typ": [76, 179], "strip": [76, 179], "const_value_typ": [76, 179], "non_const_value_typ": [76, 145, 172, 179], "certain": [76, 87, 88, 129, 135, 147, 150, 172, 179, 186, 188, 195, 200, 204, 211, 233], "compound": [76, 179], "memory_trait": [76, 179], "non_const_typ": [76, 77, 179], "const_typ": [76, 77, 179], "handl": [76, 77, 81, 94, 144, 145, 146, 149, 151, 154, 156, 158, 179, 193, 195, 197, 199, 201, 203, 227, 233], "reference_typ": [76, 77, 179], "pointer_typ": [76, 77, 179], "size_typ": [76, 81, 82, 87, 179, 199, 203, 227], "partial": [76, 87, 145, 146, 179, 186, 199], "No": [76, 77, 166, 179], "made": [76, 77, 87, 179, 195, 197, 198, 204, 218, 233], "nullptr": [76, 132], "dt": [76, 79, 179], "prop": [76, 179], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 179], "is_regular": [76, 179], "standard": [76, 77, 81, 83, 87, 89, 91, 136, 138, 139, 163, 179, 187, 188, 196, 199, 201, 206, 209, 218, 221, 233], "profil": [76, 77, 127, 143, 144, 145, 146, 179, 208, 235], "allocproperti": [76, 179], "view_alloc": [76, 79, 97, 171, 176, 177, 179, 203], "ptr": [76, 87, 126, 128, 135, 175, 179, 203], "required_allocation_s": [76, 179], "nr": [76, 179], "wrapper": [76, 152, 179, 188, 204], "TO": [76, 211], "BE": [76, 211], "scratchspac": [76, 179, 193], "sizeof": [76, 159, 170, 178, 179, 193, 195, 197, 203, 228, 233], "typic": [76, 135, 179, 186, 188, 193, 194, 195, 197, 199, 203, 222, 224, 227, 233], "team_handl": [76, 149, 151, 154, 156, 158, 179], "i0": [76, 77, 144, 145, 153, 155, 157, 178, 179, 215], "i1": [76, 153, 155, 157, 178, 179, 215], "i2": [76, 153, 155, 157, 178, 179], "i3": [76, 153, 155, 157, 179], "i4": [76, 179], "i5": [76, 179], "i6": [76, 179], "beyond": [76, 87, 151, 179, 188, 198, 204, 226], "kokkos_debug": [76, 179, 188], "dim": [76, 77, 79, 179, 225], "architectur": [76, 77, 83, 179, 183, 184, 186, 188, 193, 196, 198, 200, 203, 204, 208, 222, 226, 229, 230], "effici": [76, 77, 81, 179, 196, 202, 203], "cast": [76, 77, 179, 203], "applic": [76, 77, 179, 187, 188, 189, 194, 195, 196, 198, 199, 200, 202, 203, 204, 208, 218, 222, 225, 229, 231, 232, 235], "stride_0": [76, 77, 179], "stride_1": [76, 77, 179], "stride_2": [76, 77, 179], "stride_3": [76, 77, 179], "stride_4": [76, 77, 179], "stride_5": [76, 77, 179], "stride_6": [76, 77, 179], "stride_7": [76, 77, 179], "lowest": [76, 127, 139, 179], "highest": [76, 129, 179, 194, 196, 218], "due": [76, 179, 195, 196, 197, 201, 203, 233], "pad": [76, 171, 179, 180, 198, 200, 201, 203], "belong": [76, 179], "n8": [76, 179], "byte": [76, 127, 128, 135, 136, 152, 179, 203], "use_count": [76, 77, 179], "aim": [76, 179, 203, 218], "legal": [76, 78, 149, 151, 153, 154, 155, 156, 163, 179, 193, 199, 200, 203], "intercept": [76, 179], "illeg": [76, 179, 193, 203], "dsttype": [76, 179], "srctype": [76, 179], "dst_view": [76, 179], "src_view": [76, 179], "scrtype": 76, "met": [76, 179, 211, 219, 221], "is_const": [76, 179], "memoryspaceaccess": [76, 87, 179], "furthermor": [76, 179, 186, 193, 194, 195, 199, 200, 203, 214, 218, 219, 228], "neither": [76, 144, 145, 146, 179, 201, 211], "nor": [76, 144, 145, 146, 179, 201, 211], "k": [76, 87, 94, 129, 149, 150, 155, 158, 172, 179, 193, 202, 203], "hold": [76, 81, 179, 203, 231], "cstdio": [76, 144, 145, 146, 172, 179, 183, 184, 185, 215, 233], "atoi": [76, 121, 144, 145, 146, 172, 179, 215], "inita": [76, 179, 215], "initb": [76, 179, 215], "const_a": [76, 179, 215], "const_b": [76, 179, 215], "setc": [76, 179, 215], "kokkos_dynamicview": 77, "parent": [77, 202, 232], "array_typ": [77, 191, 192], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 135, 150, 152, 193, 199, 228], "rais": [77, 196, 207], "nearest": [77, 138], "power": [77, 136, 138, 195, 196, 220, 222], "resize_seri": 77, "reserv": [77, 82, 194, 203], "amount": [77, 87, 129, 186, 193, 199, 200], "suffici": [77, 187, 199, 203, 224], "chunk_siz": [77, 87, 150, 152], "outsid": [77, 94, 188, 193, 195, 198, 203, 220, 234], "region": [77, 85, 143, 144, 145, 146, 193, 194, 195, 197, 198, 203, 233], "allocation_ext": 77, "noexcept": [77, 151, 165, 167, 215], "multipli": [77, 102, 105, 120, 164, 193], "alwai": [77, 87, 94, 183, 184, 193, 201, 203, 228], "until": [77, 86, 87, 94, 132, 134, 151, 179, 186, 201, 209, 218, 228, 229, 232], "greater": [77, 131, 136, 203], "initializedata": 77, "kokkos_offsetview": [78, 207], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 129, 130, 132, 134, 135, 136, 137, 138, 139, 161, 163, 165, 167, 168, 169, 172, 179, 186, 188, 193, 195, 196, 199, 201, 202, 203, 209, 215, 228, 231], "ov": 78, "initializer_list": [78, 148], "instead": [78, 81, 129, 130, 131, 135, 138, 161, 179, 193, 194, 199, 201, 203, 210, 215], "obtain": [78, 193, 194, 195, 203, 222, 227], "begin0": 78, "end0": 78, "exactli": [78, 87, 135, 201, 203], "drop": [78, 132, 188, 195], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 160, 202], "21": [78, 188, 214], "assert_eq": 78, "deep": [78, 92, 135, 172, 195, 229], "sens": [78, 147, 197, 198, 201, 203, 233], "similarli": [78, 94, 233], "kokkos_scatterview": [79, 207], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 127, 128, 159], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 227], "exec_spac": [79, 172, 180], "scatteraccess": 79, "accumul": [79, 198, 199, 232], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 135, 138, 146, 194, 197, 198, 203, 205, 215, 229, 233], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 144, 145, 159, 179, 199, 203, 215], "bar": [79, 215], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 207], "simplifi": [80, 191], "manipul": [80, 89, 127, 128, 138, 179], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 207], "design": [81, 82, 94, 188, 195, 196, 198, 201, 208, 218, 221, 222, 227, 229, 231, 232], "ten": [81, 193], "thousand": [81, 227], "consequ": [81, 193, 199, 201], "significantli": [81, 186], "unordered_map": 81, "fail": [81, 127, 172, 201, 203, 220, 222, 231, 233, 234], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 94, 143, 159, 172, 186, 188, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 218, 224, 226, 231, 233], "cach": [81, 135, 152, 186, 188, 193, 195, 198, 200, 203], "friendli": [81, 83, 84, 139, 203, 230], "pod": [81, 145, 146, 193], "plain": [81, 183, 184, 203], "trivial": [81, 94], "copyabl": 81, "capacity_hint": 81, "enough": [81, 87, 218, 220, 226], "requested_capac": 81, "lower": [81, 193], "o": [81, 188, 198], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "success": [81, 127, 128, 222], "successfulli": [81, 219], "present": [81, 87, 131, 185, 187, 198, 218, 222], "did": [81, 190], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 233], "duplic": [81, 87, 201], "togeth": [81, 87, 199, 200, 227], "report": [81, 218, 221, 222], "impli": [81, 143, 150, 159, 211], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 109, 111, 211], "atomic_add_typ": 81, "atomic_add": [81, 104, 186], "pattern": [81, 85, 87, 92, 121, 129, 147, 149, 150, 186, 193, 203, 205, 226, 235], "umap": 81, "kokkos_vector": [82, 207], "overcom": [82, 94], "issu": [82, 83, 137, 138, 151, 172, 179, 188, 193, 195, 198, 199, 201, 203, 206, 208, 214, 217, 220, 221, 222], "reli": [82, 179, 198, 201, 218], "heavili": [82, 188, 204], "grant": 82, "mani": [82, 87, 88, 94, 129, 187, 188, 196, 198, 199, 200, 201, 203, 204, 222, 230, 231, 233], "limit": [82, 87, 94, 139, 152, 185, 187, 188, 193, 196, 198, 201, 203, 211, 214, 220, 221, 232], "below": [82, 87, 91, 94, 121, 131, 132, 136, 138, 139, 144, 145, 150, 179, 188, 191, 203, 204, 209, 218, 222, 228], "synopsi": [82, 138], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 193], "back": [82, 94, 186, 188, 193, 194, 198, 200, 229], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 181, 198], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 94, 127, 129, 201, 209], "buffer": [82, 135, 193, 227], "dispatch": [83, 85, 94, 143, 144, 145, 146, 147, 152, 157, 158, 159, 193, 195, 198, 213, 226, 231, 235], "task": [83, 85, 186, 198, 200, 218, 223, 235], "common": [83, 86, 87, 89, 129, 135, 137, 139, 147, 171, 172, 177, 188, 189, 190, 193, 195, 199, 200, 201, 204, 227], "mathemat": [83, 89, 138, 139, 201, 222], "style": [83, 134, 188, 204, 215, 221], "port": [83, 200, 203], "hardwar": [83, 135, 159, 186, 188, 193, 194, 196, 198, 199, 200, 210, 218, 221, 222], "idiom": [83, 94], "recogn": [83, 84, 134, 181, 193, 195, 201, 204], "sfina": [83, 84, 139], "macro": [83, 91, 144, 163, 188, 195, 199, 203, 222, 234], "etc": [83, 135, 151, 187, 188, 203], "kokkos_detectionidiom": [84, 207], "extens": [84, 166, 188, 205, 208, 218, 221, 222], "iso": [84, 87, 183, 184, 185, 201, 203], "iec": 84, "ts": [84, 151, 232], "19568": 84, "2017": [84, 220], "draft": [84, 87, 218], "cplusplu": 84, "github": [84, 188, 197, 206, 208, 218, 219, 220, 221, 233], "io": 84, "v2": [84, 92, 222], "html": [84, 138, 159], "meta": [84, 188], "origin": [84, 102, 104, 105, 128, 159, 186, 201, 202, 203, 205, 220, 222, 231], "propos": [84, 183, 184, 185, 201, 208, 218, 221], "www": [84, 205], "open": [84, 138, 148, 150, 152, 195, 206, 208, 219, 222], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 138], "paper": [84, 205], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 188, 204, 218], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 139], "true_typ": [84, 139], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 132, 175, 203, 218], "is_detect": 84, "alia": [84, 129, 135, 170, 183, 184, 202, 203, 228], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 94, 121, 184, 187, 193, 195, 196, 199, 201, 202, 204, 218, 219], "is_detected_convert": 84, "To": [84, 94, 127, 128, 135, 144, 171, 172, 188, 189, 193, 196, 197, 199, 202, 203, 204, 206, 209, 218, 219, 222, 225, 233], "is_convert": 84, "later": [84, 129, 187, 190, 197, 199, 201, 203, 210, 233], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 202], "Then": [84, 188, 202, 203, 204], "easili": [84, 197, 203, 232, 233], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 135, 178, 203], "diff_t": 84, "declar": [84, 138, 145, 187, 199, 203, 210], "our": [84, 197, 198, 200, 222, 225, 233], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 94, 121, 129, 135, 147, 183, 184, 193, 196, 200, 201, 208], "place": [85, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 128, 129, 135, 146, 147, 193, 194, 195, 197, 199, 200, 201, 220, 222, 227, 233], "nestedpolici": 85, "summari": [85, 220, 222], "setter": [85, 148, 150, 193], "hip": [85, 87, 88, 93, 135, 148, 150, 159, 172, 188, 194, 199, 203, 208, 209, 221, 222], "sycl": [85, 87, 88, 93, 135, 138, 148, 150, 159, 188, 194, 208, 209, 214], "schedul": [85, 87, 148, 150, 152, 193, 232], "through": [85, 94, 144, 145, 146, 148, 150, 151, 186, 188, 190, 193, 196, 197, 198, 199, 201, 202, 203, 205, 206, 218, 222, 224, 227, 233], "steal": [85, 148, 150], "queue": [85, 148, 150, 159, 218, 232], "machin": [85, 148, 150, 188, 196, 200, 201, 204, 213, 220, 222], "backend": [85, 86, 87, 131, 135, 138, 148, 150, 153, 155, 157, 159, 165, 168, 187, 188, 194, 195, 199, 204, 208, 214, 220, 221, 228, 229, 233], "indextyp": [85, 87, 148, 149, 150, 152, 193], "travers": [85, 148, 150], "launchbound": [85, 87, 148, 150], "maxthread": [85, 148, 150], "minblock": [85, 148, 150], "launch": [85, 92, 94, 143, 148, 150, 151, 152, 193, 203, 222, 229, 231, 232], "worktag": [85, 145, 146, 148, 150, 192, 207], "someclass": [85, 148, 150], "detail": [86, 87, 91, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 135, 139, 144, 162, 178, 187, 188, 189, 192, 194, 196, 199, 203, 204, 218, 219, 222], "shutdown": 86, "resourc": [86, 133, 135, 150, 159, 193, 194, 197, 198, 199, 200, 208, 221, 229, 232, 233], "destruct": [86, 87], "thu": [86, 145, 149, 151, 179, 185, 188, 193, 194, 195, 197, 199, 200, 203, 218, 220, 228, 229, 232, 233, 234], "context": [86, 87, 94, 133, 134, 153, 154, 155, 156, 157, 158, 179, 225, 226, 229, 233], "automat": [86, 121, 131, 135, 188, 194, 195, 199, 201, 203, 221, 226, 228], "aid": 86, "mistak": 86, "live": [86, 203, 218], "my_view": [86, 132, 133, 134, 173, 174], "destructor": [86, 132, 133, 134, 151, 203, 215], "switch": [86, 186, 195, 220], "subsequ": [86, 94, 134, 152, 227], "driven": [87, 218], "essenti": [87, 201, 222], "incept": 87, "recent": [87, 220], "readili": 87, "fact": [87, 231], "hasn": 87, "realli": [87, 132, 188, 197, 204], "even": [87, 94, 128, 129, 132, 133, 135, 145, 187, 188, 192, 195, 198, 200, 202, 203, 211, 224, 227, 231, 234], "agre": [87, 219], "merg": [87, 218, 220, 221, 222], "languag": [87, 88, 91, 129, 135, 147, 187, 196, 198, 199, 201, 202, 203, 204, 205, 225], "featur": [87, 88, 129, 135, 147, 166, 187, 188, 193, 195, 199, 201, 203, 204, 206, 209, 218, 219, 220, 222], "consid": [87, 181, 186, 187, 193, 197, 201, 202, 203, 218, 219, 231, 233], "formal": [87, 92, 129, 135, 147, 181, 198], "rapid": [87, 209], "expans": 87, "demand": [87, 228], "lack": [87, 199, 200], "harden": 87, "acut": 87, "ever": [87, 129, 135, 147, 193, 203], "project": [87, 187, 188, 198, 204, 206, 217, 219, 221, 222], "horizon": 87, "resili": [87, 208], "few": [87, 94, 129, 188, 193, 203, 222], "best": [87, 183, 184, 187, 194, 203, 229, 232], "core": [87, 88, 186, 188, 193, 194, 196, 198, 200, 206, 208, 218, 221, 222, 230], "addition": [87, 92, 129, 171, 179, 190, 203], "promot": [87, 129, 135, 137, 211, 218, 222], "plan": [87, 94, 199, 208], "good": [87, 94, 129, 186, 187, 193, 199, 200, 203, 206, 211, 230, 231], "holist": 87, "interact": [87, 160, 188, 219, 228, 231], "experi": [87, 196, 200, 203, 222], "garner": 87, "year": [87, 187, 205, 218, 219, 220], "particip": [87, 202, 218, 221], "executor": 87, "effort": [87, 187, 188, 203, 208, 218, 222], "2011": [87, 198, 199], "sutton": 87, "stroustrup": 87, "guid": [87, 147, 196, 199, 208], "particular": [87, 118, 119, 124, 129, 186, 188, 193, 194, 195, 199, 200, 203, 204, 211, 214, 221, 222, 227, 231], "constraint": [87, 193], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 94], "flexibl": [87, 129, 195], "eas": 87, "learn": [87, 129, 199], "far": [87, 94, 198, 203, 231], "though": [87, 135, 188, 234], "pure": [87, 195, 196, 233], "veri": [87, 94, 188, 198, 199, 201, 204, 227], "slightli": [87, 195], "By": [87, 188, 193, 198, 199, 200, 201, 203], "minim": [87, 187, 190, 194, 199, 218], "cognit": 87, "perhap": 87, "import": [87, 188, 193, 195, 198, 199, 202, 203, 218, 222, 226, 229], "subsumpt": 87, "hierarchi": [87, 129, 193, 200, 208], "branch": [87, 151, 153, 154, 155, 156, 193, 200, 206, 214, 218, 220, 221, 222], "width": [87, 201, 220], "roughli": [87, 193, 219], "speak": [87, 94, 233], "high": [87, 94, 152, 187, 193, 196, 200, 201, 203, 204, 205, 218], "major": [87, 88, 187, 195, 201, 203, 208, 218, 221, 222], "visibl": [87, 129, 135], "minor": [87, 88, 187, 218], "memorylayout": 87, "taskschedul": [87, 94], "treat": [87, 135, 198, 199, 222], "kokkos_concept": 87, "enumer": [87, 187], "iterationpattern": 87, "question": [87, 196, 211, 218, 219], "friend": [87, 94], "rather": [87, 94, 129, 135, 194, 204], "alik": 87, "extern": [87, 94, 188, 203, 206, 221, 235], "off": [87, 198, 203, 209, 232], "look": [87, 129, 194, 197, 199, 201, 202, 203, 233], "ex": [87, 92, 129], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 129, 151, 193], "ostream": [87, 129], "ostr": [87, 129], "in_parallel": [87, 129], "print_configur": [87, 129, 131], "ve": [87, 197, 233], "extrapol": 87, "progress": [87, 198, 200, 218, 219, 220], "eventu": [87, 187], "further": [87, 145, 188, 193, 197, 201, 203, 218, 222, 227, 232, 233], "cannot": [87, 129, 130, 134, 136, 143, 180, 194, 201, 218, 232], "constrain": [87, 200], "known": [87, 137, 138, 198, 202, 208, 214, 220, 227], "decid": [87, 198, 199, 221, 222], "argu": 87, "around": [87, 175, 188, 195, 197, 203, 214, 224, 227, 229, 233, 234], "wherebi": 87, "meet": [87, 92, 129, 149, 151, 171, 178, 218, 219, 221], "definit": [87, 121, 163, 181, 198, 199, 226, 227, 231, 234], "practic": [87, 94, 129, 135, 138, 147, 159, 179, 196, 201, 203, 229, 231], "converg": [87, 196], "relev": [87, 102, 104, 105, 208, 218, 227], "site": [87, 222], "artifact": 87, "assess": [87, 219], "intent": [87, 187, 203, 225], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 203], "kokkos_parallel": 87, "technic": [87, 203, 204], "correct": [87, 90, 94, 188, 193, 197, 199, 202, 203, 219, 222, 233], "rvalu": 87, "wouldn": [87, 190], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 151, 193, 199], "implexecutionspaceof": 87, "exclud": [87, 187, 199], "uniquetoken": 87, "add": [87, 121, 123, 144, 181, 186, 187, 188, 191, 193, 195, 198, 201, 203, 204, 218, 224, 231, 232], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 198], "teampolicyintern": [87, 207], "nice": [87, 201], "could": [87, 187, 190, 197, 198, 200, 202, 203, 218, 233], "refactor": 87, "noth": [87, 126, 129, 135, 147, 163, 198, 199, 203], "mind": [87, 203], "close": [87, 193, 199, 201, 206, 218], "semiregular": 87, "todo": [87, 197, 233], "openmptargetspac": 87, "hbwspace": [87, 88, 203], "mem": [87, 183, 185], "dealloc": [87, 125, 126, 127, 128, 135, 179, 195, 202, 203, 230], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 92], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 218, 222], "exec": 87, "think": [87, 94, 132, 203, 224, 233], "achiev": [87, 135, 193, 195, 203, 222, 226], "signific": [87, 136, 203, 229, 231], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 149], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 147, 150, 152], "cours": 87, "execution_polici": [87, 150, 169], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 150, 152], "complic": [87, 199, 203], "pretti": [87, 94, 129], "straightforward": [87, 171, 226, 227], "iteratetil": 87, "seem": [87, 204], "kokkos_openmp_parallel": 87, "were": [87, 129, 137, 138, 139, 185, 197, 198, 222, 233], "conceptu": [87, 230], "surfac": 87, "area": [87, 128], "Of": [87, 198, 209], "d": [87, 153, 157, 168, 175, 178, 187, 191, 192, 193, 197, 198, 199, 201, 202, 203, 226, 233], "still": [87, 88, 159, 186, 187, 190, 193, 201, 203, 229], "shortcut": [87, 129, 147], "probabl": [87, 94, 193, 199, 201], "teach": [87, 199], "advanc": [87, 129, 199, 222, 235], "ax": [87, 229], "me": 87, "why": [87, 194, 229], "axi": 87, "extend": [87, 196], "overhead": [87, 94, 143, 199, 201, 203, 226], "describ": [87, 94, 121, 129, 135, 147, 152, 185, 189, 196, 197, 198, 200, 201, 205, 206, 209, 215, 222, 229, 230, 232, 233], "isn": [87, 94, 129, 197, 233], "concern": [87, 196, 198, 227, 231], "simplest": [87, 193, 194, 227], "But": [87, 189, 193, 197, 203, 231], "kokkos_vers": 88, "patch": [88, 218], "10000": [88, 199, 203], "kokkos_enable_debug": [88, 163, 209], "kokkos_enable_debug_bounds_check": [88, 209], "kokkos_enable_debug_dualview_modify_check": [88, 209], "kokkos_enable_deprecated_code_3": 88, "kokkos_enable_deprecation_warn": 88, "warn": [88, 131, 179, 187, 203, 204, 207, 209, 214, 218, 220], "kokkos_enable_hbwspac": 88, "kokkos_enable_memkind": [88, 209], "kokkos_enable_tun": [88, 209], "bind": [88, 194, 208, 209, 225], "tune": [88, 188, 204, 209, 226, 235], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 127, 180, 201, 203, 221, 230], "kokkos_enable_aggressive_vector": [88, 209], "assumpt": [88, 194], "ignor": [88, 94, 193, 194, 201], "aggress": [88, 203, 209], "ifdef": [88, 195], "kokkos_enable_seri": [88, 188, 209], "kokkos_enable_openmp": [88, 188, 209], "kokkos_enable_openmptarget": [88, 209], "kokkos_enable_thread": [88, 188, 209], "kokkos_enable_cuda": [88, 188, 209], "kokkos_enable_hip": [88, 188, 209], "kokkos_enable_hpx": [88, 209], "kokkos_enable_sycl": [88, 188, 209], "kokkos_enable_cuda_constexpr": [88, 209], "kokkos_enable_cuda_lambda": [88, 209], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 209], "intrins": [88, 121, 136, 183, 184, 189, 195, 201, 203, 209, 225], "kokkos_enable_cuda_relocatable_device_cod": [88, 209], "relocat": [88, 204, 209, 221], "kokkos_enable_cuda_uvm": [88, 209, 223], "kokkos_enable_hip_multiple_kernel_instanti": [88, 209], "instanti": [88, 187, 198, 200, 201, 203, 209], "improv": [88, 187, 196, 199, 200, 209, 214, 219, 226], "kokkos_enable_hip_relocatable_device_cod": [88, 209], "latest": [88, 91, 187, 214], "path": [88, 131, 187, 188, 209, 218, 222, 227], "expos": [88, 129, 192, 193, 200, 226], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 121, 163, 187, 189, 194, 198, 200, 203, 204, 218, 219, 222, 224, 227, 230, 233], "libari": 88, "kokkos_enable_hwloc": [88, 188, 209], "libhwloc": [88, 188], "numa": [88, 194], "kokkos_enable_librt": [88, 209], "link": [88, 91, 179, 188, 204, 208, 222, 226], "posix": 88, "librt": [88, 188, 209], "backward": [88, 134, 213], "memkind": [88, 209], "heap": 88, "kokkos_enable_libdl": [88, 209], "linker": [88, 188, 204], "libdl": [88, 209], "kokkos_enable_libquadmath": 88, "gcc": [88, 188, 204, 210, 214, 220, 221], "quad": 88, "precis": [88, 188, 197, 225, 227, 231, 233], "math": [88, 89, 201, 208, 235], "kokkos_arch_sse42": 88, "sse": 88, "kokkos_arch_armv80": [88, 209], "armv8": [88, 188, 209], "kokkos_arch_armv8_thunderx": [88, 209], "cavium": [88, 222], "thunderx": [88, 188, 222], "kokkos_arch_armv81": [88, 209], "kokkos_arch_armv8_thunderx2": [88, 209], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 209], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 209], "intel": [88, 188, 193, 201, 209, 214, 218, 220, 221, 222], "knight": [88, 222], "corner": [88, 216], "xeon": [88, 188, 222], "phi": [88, 137, 188], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power7": [88, 209], "ibm": [88, 188, 214, 220], "power7": [88, 188, 209], "kokkos_arch_power8": [88, 209], "power8": [88, 188, 209, 220], "kokkos_arch_power9": [88, 209], "power9": [88, 209], "kokkos_arch_intel_gen": [88, 209], "kokkos_arch_intel_dg1": [88, 209], "iri": [88, 209], "xemax": [88, 209], "kokkos_arch_intel_gen9": [88, 209], "gen9": [88, 209], "kokkos_arch_intel_gen11": [88, 209], "gen11": [88, 209], "kokkos_arch_intel_gen12lp": [88, 209], "gen12lp": [88, 209], "kokkos_arch_intel_xehp": [88, 209], "xe": [88, 209], "hp": [88, 209], "kokkos_arch_intel_pvc": [88, 209], "pont": [88, 209], "vecchio": [88, 209], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 188, 193, 200, 201, 209, 218, 221, 222, 227], "kepler": [88, 188], "kokkos_arch_kepler30": [88, 209], "cc": [88, 188, 209, 225], "kokkos_arch_kepler32": [88, 209], "kokkos_arch_kepler35": [88, 209], "kokkos_arch_kepler37": [88, 209], "kokkos_arch_maxwel": 88, "maxwel": [88, 188], "kokkos_arch_maxwell50": [88, 209], "kokkos_arch_maxwell52": [88, 209], "kokkos_arch_maxwell53": [88, 209], "kokkos_arch_navi": 88, "amd": [88, 218, 221], "navi": 88, "kokkos_arch_navi1030": [88, 209], "v620": [88, 209], "w6800": [88, 209], "gfx1030": [88, 209], "kokkos_arch_pasc": 88, "pascal": 88, "kokkos_arch_pascal60": [88, 209], "kokkos_arch_pascal61": [88, 209], "kokkos_arch_volta": 88, "volta": 88, "kokkos_arch_volta70": [88, 209], "kokkos_arch_volta72": [88, 209], "kokkos_arch_turing75": [88, 209], "ture": 88, "kokkos_arch_amper": 88, "amper": [88, 209], "kokkos_arch_ampere80": [88, 209], "kokkos_arch_ampere86": [88, 209], "kokkos_arch_ada89": [88, 209], "ada": [88, 209], "kokkos_arch_hopp": 88, "hopper": [88, 209], "kokkos_arch_hopper90": [88, 209], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 209], "kokkos_arch_amd_zen3": 88, "zen3": [88, 209], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 209], "mi25": [88, 209], "gfx900": [88, 209], "kokkos_arch_vega906": [88, 209], "mi50": [88, 209], "mi60": [88, 209], "gfx906": [88, 209], "kokkos_arch_vega908": [88, 209], "mi100": [88, 209], "gfx908": [88, 209], "kokkos_arch_vega90a": [88, 209], "mi200": [88, 209], "seri": [88, 196, 209, 222], "gfx90a": [88, 209], "kokkos_mathematicalconst": [89, 137, 207], "backport": [89, 218], "sqrt2": [89, 137], "kokkos_mathematicalfunct": [89, 138, 207], "consist": [89, 138, 168, 188, 193, 198, 200, 201, 221, 227], "portabl": [89, 129, 137, 186, 195, 196, 198, 199, 201, 205, 210, 218, 225, 226, 228, 230, 235], "fab": [89, 138], "sqrt": [89, 138, 183, 185, 201, 210], "sin": [89, 137, 138, 183], "kokkos_numerictrait": [89, 139, 207], "ad": [89, 102, 104, 105, 139, 168, 185, 187, 188, 193, 201, 204, 218, 232, 233], "23": [89, 139, 205, 208, 221], "numeric_limit": [89, 139], "kokkos_bitmanipul": [89, 136], "individu": [89, 94, 138, 139, 195, 204, 222, 231], "compos": [90, 227], "team_size_max": [90, 152], "team_size_recommend": [90, 140, 141, 142, 152], "strive": [91, 201], "howev": [91, 94, 129, 159, 193, 195, 196, 197, 198, 199, 200, 201, 203, 211, 214, 222, 226, 233], "deviat": 91, "approach": [91, 94, 186, 196, 198, 199, 201, 203, 231, 235], "section": [91, 188, 193, 195, 197, 198, 199, 203, 209, 220, 222, 233], "usag": [91, 93, 131, 133, 134, 143, 144, 158, 160, 168, 183, 184, 185, 188, 195, 200, 202, 203, 204, 225], "guidanc": [91, 183, 206], "relationship": [92, 94, 159, 193, 203], "entiti": [92, 94, 187, 198], "msp1": 92, "msp2": 92, "retriev": [92, 94, 150, 190, 232], "v1": [92, 222], "word": [92, 129, 135, 147, 188, 201], "shape": 92, "attribut": [92, 200, 201, 203, 207], "intercessori": 92, "executionspaceconcept": [93, 143, 171], "defaulthostexecutionspac": [93, 167, 194, 195], "hipspac": [93, 203, 207], "hiphostpinnedspac": [93, 203], "hipmanagedspac": [93, 210], "sycldeviceusmspac": 93, "syclhostusmspac": 93, "syclsharedusmspac": 93, "sharedspac": [93, 223], "sharedhostpinnedspac": [93, 228], "memoryspaceconcept": [93, 171], "lightweight": 94, "substanti": 94, "futur": [94, 129, 194, 196, 200, 203, 213, 218, 220, 232], "Not": [94, 194, 203], "too": [94, 143, 203, 214, 233], "small": [94, 134, 135, 199, 232], "inher": 94, "plenti": 94, "scale": [94, 129, 188, 222], "easier": [94, 199, 206, 228, 230], "hierarch": [94, 153, 154, 155, 156, 157, 158, 198, 199, 200, 213, 232, 235], "ordinari": [94, 199], "portion": [94, 201], "haev": 94, "addit": [94, 129, 138, 172, 189, 194, 196, 198, 199, 201, 203, 218, 226, 231, 233], "output": [94, 129, 175, 186, 192, 194, 200, 222, 226], "mytask": 94, "produc": [94, 196, 199, 201, 227, 229], "task_spawn": [94, 232], "host_spawn": 94, "tasksingl": [94, 232], "taskteam": [94, 144, 145, 146], "former": [94, 188, 199, 203, 222], "worker": [94, 145, 232], "spawn": [94, 232], "basicfutur": [94, 232], "when_al": [94, 232], "scheduler_typ": 94, "discuss": [94, 193, 198, 201, 203, 218, 219], "fut": 94, "mytaskfunctor": 94, "readi": [94, 187, 203], "earliest": 94, "fut2": 94, "myothertaskfunctor": 94, "my_funct": [94, 129], "sched": 94, "my_result_typ": 94, "my_task_result": 94, "ff": [94, 220], "better": [94, 188, 193, 203, 204, 215, 229], "never": [94, 129, 187, 188, 201, 203, 204], "share": [94, 151, 186, 188, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 208, 218, 226, 227, 233], "transit": [94, 209, 218], "undefin": [94, 127, 128, 131, 179, 195, 203, 210, 234], "worst": 94, "kind": [94, 198, 199, 202, 222], "bug": [94, 129, 187, 197, 214, 218, 219, 220, 233], "segfault": [94, 204], "hour": [94, 187], "is_nul": 94, "attempt": [94, 198], "poll": 94, "is_readi": [94, 232], "forbidden": 94, "anywher": 94, "abil": [94, 144, 198, 201, 225], "yet": [94, 128, 166, 181, 187, 196, 198, 201, 202, 218, 220], "extrem": [94, 197, 198, 203, 233], "expens": [94, 202], "sledgehamm": 94, "sparingli": 94, "alon": [94, 188], "pend": 94, "decis": [94, 193, 218, 227], "piec": 94, "help": [94, 191, 194, 196, 199, 203, 204, 233], "cost": [94, 186, 196, 202, 203], "tradit": [94, 135], "reus": [94, 193, 231], "successor": 94, "respawn": [94, 232], "future_typ": [94, 232], "got": 94, "redund": [94, 227], "lead": [94, 129, 187, 193, 197, 203, 204, 218, 228, 233], "lazi": 94, "third": [94, 188, 193, 195, 198, 202, 204, 218, 226], "serv": [94, 129, 218], "observ": [94, 143, 194, 233], "effect": [94, 129, 143, 179, 187, 188, 193, 199, 200, 201, 231, 233], "taskprior": 94, "regular": [94, 203, 218], "low": [94, 186, 196, 199, 201, 203], "boolean": [95, 129, 173, 174, 175, 199, 201], "kokkos_assert": 96, "device_id": [96, 130, 131, 167, 194], "num_thread": [96, 130, 131, 165, 194], "critic": [97, 198, 218], "_view": 97, "awar": [97, 193, 198, 203, 205, 226], "bundl": [97, 180], "loos": [97, 171, 181], "behav": [97, 172, 181, 201, 202, 203], "old_val": [99, 101], "ptr_to_valu": [99, 100, 101, 102, 103, 104, 105, 106], "comparison_valu": [99, 100], "was_exchang": 100, "update_valu": [102, 104, 105], "previou": [102, 134, 137, 138, 152, 177, 193, 207, 220], "atomic_fetch_add": [102, 104, 186, 193], "tmp": [102, 193, 226], "atomic_fetch_and": 102, "atomic_fetch_div": 102, "divid": [102, 105, 144, 145, 146, 164, 191, 192, 224, 229], "atomic_fetch_lshift": 102, "atomic_fetch_max": 102, "atomic_fetch_min": 102, "atomic_fetch_mul": 102, "atomic_fetch_mod": 102, "atomic_fetch_or": 102, "atomic_fetch_rshift": 102, "atomic_fetch_sub": [102, 104], "substract": [102, 105], "atomic_fetch_xor": 102, "atomic_and": 104, "atomic_assign": 104, "atomic_decr": 104, "atomic_incr": [104, 186], "atomic_max": 104, "atomic_min": 104, "atomic_or": 104, "atomic_sub": 104, "subtract": 104, "atomic_add_fetch": 105, "atomic_and_fetch": 105, "atomic_div_fetch": 105, "atomic_lshift_fetch": 105, "atomic_max_fetch": 105, "atomic_min_fetch": 105, "atomic_mul_fetch": 105, "atomic_mod_fetch": 105, "atomic_or_fetch": 105, "atomic_rshift_fetch": 105, "atomic_sub_fetch": 105, "atomic_xor_fetch": 105, "conjunct": [107, 149, 186, 188, 193, 194, 218], "bitwis": [108, 109, 136, 203], "AND": [108, 110, 211], "remove_cv": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "result_view_typ": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 192], "value_": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 192], "local": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 135, 145, 146, 188, 193, 194, 198, 199, 200, 202, 203, 209, 210, 220, 222, 228], "reduction_ident": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 189, 191, 199], "resid": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 135, 200, 228], "customtyp": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123], "_min": [112, 113, 116, 117], "vallocscalar": [113, 115, 122, 193], "loc": [113, 115, 124, 190], "_max": [113, 114, 115, 116, 117], "minmaxscalar": [116, 122, 193], "min_val": [116, 117, 118, 119, 190], "max_val": [116, 117, 118, 119, 190], "minmaxlocscalar": [117, 122, 193], "min_loc": [117, 118, 190], "max_loc": [117, 118, 190], "minvalu": [118, 119], "maxvalu": [118, 119], "hypothet": 121, "brief": [121, 215, 218], "build": [121, 129, 172, 187, 193, 194, 196, 199, 206, 208, 209, 220, 222, 235], "monoid": 121, "val1": 121, "val2": 121, "ident": [121, 150, 152, 171, 191, 193, 198, 199, 203, 224], "el": 121, "under": [121, 172, 187, 188, 199, 203, 206, 211, 218, 222], "reducesum": 121, "lval": 121, "l": [121, 138, 155, 198, 220], "resultvalu": 124, "resultindex": 124, "shrink": [125, 176, 177], "throw": [126, 127, 128, 152, 195, 203], "runtime_error": 126, "failur": [126, 127, 128, 152, 179, 220, 221], "uniniti": [127, 148, 150, 152, 171, 176, 177, 203], "metadata": 127, "succe": 127, "suitabl": [127, 187, 199, 226], "rawmemoryallocationfailur": [127, 128], "thrown": 127, "memadvis": [127, 128, 179], "tool": [127, 131, 144, 145, 146, 187, 208, 209, 235], "kokkosp": 127, "On": [127, 128, 186, 188, 193, 202, 209, 233], "avoid": [127, 128, 129, 187, 193, 202, 203, 204, 210, 218, 220, 233], "leak": [127, 128, 203], "freed": [128, 193, 203], "new_siz": 128, "invalid": [128, 203], "rare": [129, 135], "offload": 129, "talk": [129, 135, 147, 197, 233], "theoret": [129, 135, 147], "treatment": [129, 135, 147], "disclaim": [129, 135, 147, 211], "term": [129, 135, 147, 198, 203, 206, 211, 218, 231], "anyon": [129, 135, 147, 206], "who": [129, 135, 147, 196, 203, 218, 219, 221, 227, 230], "knew": [129, 135, 147], "confus": [129, 135, 147, 203], "often": [129, 135, 147, 179, 186, 193, 195, 196, 198, 199, 201, 203, 222, 227], "shini": [129, 135, 147], "pramet": 129, "surpris": 129, "answer": [129, 193, 203], "ll": [129, 197, 203, 233], "nowher": 129, "intermedi": [129, 199], "static_assert": [129, 172, 202, 228], "incompat": [129, 188], "prefer": [129, 187, 194, 199, 203, 204, 209, 210, 234], "explicit": [129, 138, 144, 173, 174, 175, 193, 199, 200, 210, 218], "simpli": [129, 188, 193, 195, 197, 201, 204, 225, 226, 227, 231, 233], "mental": 129, "exercis": [129, 222], "translat": [129, 197, 233], "tend": [129, 186, 200], "verbos": 129, "much": [129, 144, 187, 192, 196, 198, 199, 201, 203], "risk": [129, 187], "lose": 129, "caution": [129, 188], "necessarili": [129, 172, 193, 195, 200, 203], "strengthen": 129, "unspecifi": [129, 162, 179, 200], "care": [129, 187, 201], "print": [129, 131, 161, 168, 175, 194, 209], "arraylayout": 129, "recommend": [129, 152, 193, 199, 201, 203, 214, 222], "scratchmemoryspac": 129, "ex2": 129, "ex1": 129, "usabl": [129, 136, 203], "shorthand": [129, 135], "typetrait": [129, 135], "num_numa": [130, 194], "ndevic": [130, 194], "skip_devic": [130, 194], "disable_warn": [130, 131, 194], "favor": [130, 197, 233], "One": [130, 152, 186, 188, 190, 193, 195, 201, 203, 226, 227, 231, 233], "distinguish": [130, 139, 199], "kokkoscor": 131, "set_num_thread": [131, 132, 134], "set_device_id": 131, "set_disable_warn": [131, 134], "initializ": 131, "introduc": [131, 193, 199, 200, 221, 228], "unset": 131, "let": [131, 151, 188, 193, 195, 197, 198, 199, 202, 203, 227, 233], "tabl": [131, 188, 194, 203, 222], "set_parameter_nam": 131, "parameter_typ": 131, "parameter_nam": 131, "has_parameter_nam": 131, "get_parameter_nam": 131, "summar": 131, "id": [131, 165, 167, 193, 194, 195], "minu": 131, "map_device_id_bi": 131, "mpi_rank": 131, "round": [131, 138, 194, 198], "robin": [131, 194], "mpi": [131, 133, 134, 186, 188, 194, 196, 202, 204, 223, 230, 235], "disabl": [131, 188, 199], "messag": [131, 194, 196, 202, 218, 220, 222], "configur": [131, 194, 201, 209, 218, 220, 221, 222, 228], "tune_intern": 131, "autotun": 131, "heurist": 131, "tools_lib": 131, "full": [131, 181, 183, 186, 194, 195, 197, 200, 201, 233], "ld_library_path": 131, "tools_help": 131, "command": [131, 132, 134, 188, 204, 222], "line": [131, 132, 134, 135, 186, 188, 203, 221, 234], "tools_arg": 131, "set_print_configur": 131, "set_map_device_id_bi": [131, 132, 134], "environ": [131, 133, 134, 135, 165, 167, 188, 194, 195, 199, 203, 204, 210, 220, 222], "thats": 132, "correctli": [132, 188, 199, 204], "presenc": [132, 139, 210], "unhandl": 132, "charact": 132, "uncondition": 132, "precondit": 132, "is_initi": [132, 133, 134, 163], "unique_ptr": 132, "make_opt": 132, "nullopt": 132, "regardless": [132, 198], "clean": [133, 220], "is_fin": [133, 134, 146, 163], "detroi": 133, "ill": 133, "mpi_fin": [133, 194], "erron": 134, "pars": [134, 188], "whenev": 134, "seen": [134, 187, 196, 222], "decrement": [134, 179, 186, 203], "implicitli": [134, 171], "multibyt": 134, "mpi_init": [134, 194], "side": [135, 143, 163, 179, 193, 199, 200, 202, 219], "virtual": [135, 203, 213, 223], "xnack": 135, "unit": [135, 188, 193, 195, 196, 198, 219], "movement": 135, "os": 135, "driver": [135, 222, 228], "moment": [135, 188, 203], "preprocessor": [135, 188, 204, 234], "kokkos_has_shared_spac": 135, "has_shared_spac": [135, 228], "correspoind": 135, "stai": 135, "availab": 135, "event": [135, 149, 193, 211, 222], "nevertheless": [135, 193, 198, 203, 233], "kokkos_has_shared_host_pinned_spac": 135, "has_shared_host_pinned_spac": 135, "bit_cast": 136, "byteswap": 136, "has_single_bit": 136, "bit_ceil": 136, "bit_floor": 136, "bit_width": 136, "rotl": 136, "rotr": 136, "countl_zero": 136, "countl_on": 136, "countr_zero": 136, "countr_on": 136, "popcount": 136, "reinterpret": 136, "represent": [136, 201, 203], "counterpart": 136, "_builtin": 136, "suffix": [136, 138], "magic": 136, "log2": [137, 138], "log10": [137, 138, 183], "inv_pi": 137, "inv_sqrtpi": 137, "ln2": 137, "ln10": 137, "sqrt3": 137, "inv_sqrt3": 137, "egamma": 137, "toolchain": [137, 188, 210], "henc": [137, 199, 210], "pi_v": 137, "motiv": [138, 196, 201, 230], "borrow": 138, "llvm": 138, "compilecudawithllvm": 138, "clang": [138, 188, 204, 214, 220, 221, 235], "ok": [138, 153, 155, 157, 179, 203, 210], "everyth": [138, 201, 203], "__device__": [138, 195, 210], "nvcc": [138, 188, 214, 220], "overrid": [138, 188, 204, 233], "sinf": 138, "goal": [138, 193, 195, 196, 218, 222, 226, 230], "cmath": 138, "sqrtf": 138, "sqrtl": 138, "integraltyp": 138, "arithmet": [138, 139, 159], "reader": [138, 187, 188, 196, 198], "cpprefer": 138, "com": [138, 205, 208, 219, 220, 221], "fmod": 138, "remaind": 138, "remquo": 138, "fma": [138, 183], "fmax": 138, "fmin": 138, "fdim": 138, "nan": 138, "exp": [138, 183], "exp2": [138, 183], "expm1": 138, "log": [138, 183, 220], "log1p": 138, "exponenti": 138, "pow": [138, 183], "cbrt": [138, 183], "hypot": [138, 183], "co": [138, 183, 187, 218], "tan": [138, 183], "asin": [138, 183], "aco": [138, 183], "atan": [138, 183], "atan2": [138, 183], "trigonometr": 138, "sinh": [138, 183], "cosh": [138, 183], "tanh": [138, 183], "asinh": [138, 183], "acosh": [138, 183], "atanh": [138, 183], "hyperbol": 138, "erf": [138, 183], "erfc": [138, 183], "tgamma": [138, 183], "lgamma": [138, 183], "gamma": 138, "ceil": 138, "floor": 138, "trunc": 138, "lround": 138, "llround": 138, "nearbyint": 138, "rint": 138, "lrint": 138, "llrint": 138, "frexp": 138, "ldexp": 138, "modf": 138, "scalbn": 138, "scalbln": 138, "ilog": 138, "logb": 138, "nextaft": 138, "nexttoward": 138, "copysign": [138, 183], "fpclassifi": 138, "isfinit": 138, "isinf": 138, "isnan": 138, "isnorm": 138, "signbit": 138, "isgreat": 138, "isgreaterequ": 138, "isless": 138, "islessequ": 138, "islessgreat": 138, "isunord": 138, "classif": 138, "4767": 138, "feel": [138, 205], "keep": [138, 202, 203, 230], "track": [138, 218, 219], "bewar": 138, "unqualifi": [138, 210], "qualif": [138, 210], "exeriment": 138, "p1841": 139, "break": [139, 179, 187, 197, 204, 233], "monolith": 139, "apart": [139, 186, 187, 203], "denot": [139, 152, 179], "infin": 139, "finite_min": 139, "finite_max": 139, "epsilon": 139, "round_error": 139, "norm_min": 139, "denorm_min": 139, "reciprocal_overflow_threshold": 139, "quiet_nan": 139, "signaling_nan": 139, "characterist": [139, 198, 200, 203, 222, 232], "digit": 139, "digits10": 139, "max_digits10": 139, "radix": 139, "min_expon": 139, "min_exponent10": 139, "max_expon": 139, "max_exponent10": 139, "finite_min_v": 139, "floatingpoint": 139, "norm_min_v": 139, "finite_max_v": 139, "epsilon_v": 139, "round_error_v": 139, "infinity_v": 139, "quiet_nan_v": 139, "signaling_nan_v": 139, "denorm_min_v": 139, "digits_v": 139, "digits10_v": 139, "max_digits10_v": 139, "radix_v": 139, "min_exponent_v": 139, "min_exponent10_v": 139, "max_exponent_v": 139, "max_exponent10_v": 139, "absenc": 139, "has_infin": 139, "enable_if_t": 139, "legacy_std_numeric_limits_infin": 139, "kokkos_execpolici": [140, 141, 142], "policytyp": [140, 141, 142], "recommended_team_s": [140, 141, 142], "outstand": [143, 172, 198], "exec1": 143, "exec2": 143, "stuff": [143, 201], "touch": [143, 203], "wait": [143, 151, 159, 193, 199, 232], "finish": [143, 144, 172, 186, 199, 203], "asynchron": [144, 145, 172, 198, 203, 229, 235], "calle": 144, "execpolici": [144, 145, 146], "functortyp": [144, 145, 146, 152], "hook": [144, 145, 146, 194], "integertyp": [144, 145, 146], "work_tag": [144, 145, 146, 150, 152], "iN": [144, 145], "captur": [144, 193, 199, 203, 225, 231], "loop1": [144, 145, 146], "greet": 144, "taga": 144, "implicit": [144, 149, 154, 156, 158, 179, 193, 199, 225, 229], "tagb": 144, "thread_rank": 144, "loop2": [144, 145], "deduc": [145, 170, 202, 233], "reducerargu": 145, "reducerargumentnonconst": 145, "fulfil": [145, 191, 192], "handletyp": [145, 146], "reducervaluetyp": 145, "value_count": [145, 199], "length": [145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 176, 177, 179, 190, 195, 203, 230], "overwritten": [145, 146, 151, 203], "neutral": [145, 146], "lsum": [145, 149, 154, 156, 158, 193], "lf": [145, 190], "lmin": [145, 190], "tagmax": 145, "tagmin": 145, "lmax": 145, "team_rank": [145, 151, 193, 195], "post": [146, 218, 231], "returntyp": 146, "return_valu": 146, "postfix_sum": 146, "prefix_sum": 146, "partial_sum": 146, "li": 146, "domin": [147, 196], "elsewher": 147, "parallel_pattern": 147, "hand": [147, 186, 193, 201, 209, 233], "wavi": 147, "beginn": 147, "tile": [148, 203, 226], "interv": [148, 150, 152], "outer": [148, 193, 203, 226], "inner": [148, 193, 203], "ot": 148, "IT": 148, "tt": 148, "policy_1": [148, 150, 152, 193], "policy_2": [148, 150, 152, 193], "t0": 148, "t1": [148, 160, 164], "t2": [148, 160, 164], "teammembertyp": [149, 154, 156, 158], "threadvectorrangeboundariesstruct": 149, "threadsinglestruct": 149, "vectorsinglestruct": 149, "team_barri": [149, 151, 153, 154, 155, 156, 157, 158, 193], "encount": [149, 175, 210, 232], "thread_sum": 149, "team_sum": [149, 154, 156, 158, 193], "a_rowsum": [149, 153, 154, 155, 156, 158], "inherit": [150, 172, 222], "policytrait": 150, "schedule_typ": [150, 152], "iteration_pattern": [150, 152], "launch_bound": [150, 152], "work_spac": 150, "work_begin": 150, "work_end": 150, "discret": [150, 159, 190, 226], "chunk_size_": 150, "init_arg": 150, "chunksiz": 150, "workgroup": 150, "policy_3": [150, 152, 193], "policy_4": [150, 152], "policy_6": 150, "policy_7": 150, "teamtask": 151, "subject": [151, 166, 187, 203], "leagu": [151, 152, 193, 200, 232], "league_s": [151, 152, 193], "workitem": 151, "team_shmem": [151, 193], "team_scratch": [151, 193], "thread_scratch": 151, "lexic": [151, 187], "arriv": [151, 193], "team_broadcast": 151, "source_team_rank": 151, "var": 151, "broadcast": [151, 193], "reducertyp": 151, "team_reduc": 151, "accross": [151, 201], "team_scan": 151, "teampolcii": 151, "policy_typ": 151, "set_scratch_s": [151, 152, 193], "4096": 151, "tid": 151, "lid": 151, "scratch_memory_typ": 151, "vector_length": [152, 207, 230], "auto_t": 152, "lazili": 152, "perteamvalu": 152, "per_team": 152, "perthreadvalu": 152, "per_thread": 152, "closest": 152, "bandwidth": [152, 193, 200, 201, 203], "twice": [152, 203], "overwrit": [152, 188, 199], "scratch_size_max": 152, "maxim": [152, 195], "scratch_siz": 152, "team_size_": 152, "team_scratch_s": 152, "thread_scratch_s": 152, "policy_5": 152, "extent_1": [153, 155, 157], "extent_2": [153, 155, 157, 203], "extent_i": [153, 155, 157], "violat": [153, 155, 157, 193, 199, 203, 233], "num": [153, 155, 157, 194, 222], "leaguerank": [153, 155, 157], "teamsum": [153, 155, 157], "threadsum": [153, 157, 158], "leaguesum": [153, 155], "itype1": [154, 156, 158], "itype2": [154, 156, 158], "teamtyp": 155, "vectorsum": [155, 157], "tsum": 158, "weigth": 159, "weight": 159, "fraction": 159, "is_arithmetic_v": 159, "n_partit": 159, "3rd": 159, "stream": [159, 172, 200, 203, 235], "otherparam": 159, "param": [159, 215], "f1": [159, 232], "f2": [159, 232], "functor1": 159, "functor2": 159, "f3": 159, "functor3": 159, "kokkos_pair": [160, 207], "fulli": [160, 227, 233], "std_pair": 160, "int_float": 160, "converted_std_pair": 160, "converted_kokkos_pair": 160, "to_std_pair": 160, "first_typ": 160, "second_typ": 160, "kokkos_defaulted_funct": [160, 233], "kokkos_forceinline_funct": [160, 191], "wise": [160, 173, 174, 175], "whose": [160, 187, 199, 202, 203, 226, 230], "msg": 161, "kokkos_abort": 161, "ndebug": 163, "endif": [163, 188, 195], "assert": [163, 178, 201], "diagnost": 163, "text": 163, "predefin": [163, 193], "__file__": 163, "__line__": 163, "imag": 164, "real": [164, 225], "imaginari": 164, "im": 164, "convers": [164, 179, 195, 201, 218, 225, 231], "realtyp": 164, "nodiscard": [165, 167], "anounc": 166, "kokkos_printf": 168, "format": [168, 195, 203, 221], "stdout": 168, "across": [168, 196, 198, 200, 201, 208], "hello": 168, "world": 168, "affect": [168, 188, 203, 214], "regist": [168, 185, 186, 193, 201], "measur": [169, 198], "time1": 169, "time2": 169, "impl_detail": [170, 178], "view_arg": 170, "subviewhold": 170, "deal": [171, 197, 202, 233, 234, 235], "host_mirror": 171, "a_view": 171, "host_mirror_view": 171, "host_mirror_view_spac": 171, "withoutiniti": [171, 176, 177, 180, 203, 207], "implmirrortyp": 171, "viewctorarg": [171, 176, 177], "conduct": [171, 218, 221], "circumst": [172, 218], "viewdest": 172, "viewsrc": [172, 179, 215], "copy_spac": 172, "submit": [172, 193, 222], "cudamemcpyasync": 172, "d_a": [172, 195], "d_a_2": 172, "d_a_5": 172, "h_a": [172, 195, 229], "h_a_2": 172, "d_a_2_5": 172, "deviceview": 172, "temporari": [172, 190, 200, 203, 210], "h_view_tmp": 172, "kokkos_layout": [173, 174, 175], "lai": [173, 174, 175], "convent": [173, 174, 200, 203], "signifi": [173, 174, 175], "is_extent_construct": [173, 174, 175], "full_mesh": 175, "mesh": [175, 224], "mesh_subcompon": 175, "z": [175, 183, 201], "frequent": 175, "noncontigu": [175, 203], "array_layout_max_rank": 175, "s0": 175, "s4": 175, "s5": 175, "s6": 175, "s7": 175, "order_dimens": 175, "itypeord": 175, "itypedimen": 175, "dimen": 175, "3d": [175, 195, 225], "grow": [176, 177, 196], "subext": 177, "191": 178, "subset": [178, 185, 186, 188, 202, 222], "arg_r": 178, "remove_const_t": [178, 202], "s3415": 178, "star": 179, "bracket": 179, "2d": [179, 190, 195, 225], "5d": 179, "Their": [179, 230], "integral_const": [179, 183, 184], "nullari": 179, "encourag": [179, 188, 193, 204, 206, 221], "akin": [179, 226], "_dynam": 179, "yield": [179, 234], "sign": [179, 194, 203], "msvc": [179, 188, 214], "i7": 179, "is_assign": 179, "assign_data": 179, "arg_data": 179, "anywai": [179, 195], "viewdst": [179, 215], "dynamic_rank": 179, "a1": [179, 203, 232], "a2": [179, 232], "a3": [179, 232], "a4": 179, "a5": 179, "a6": 179, "a7": 179, "a8": 179, "a9": 179, "a10": 179, "a11": 179, "a12": 179, "a13": 179, "kokkos_view": 180, "viewstr": 180, "view_wrap": 180, "pointer_to_wrapping_memori": 180, "bypass": 180, "allowpad": 180, "impl_defin": 180, "notabl": 181, "simd_mask": [182, 183, 185, 201], "where_express": 182, "kokkos_simd": [183, 184, 185, 201], "abi": [183, 184, 185, 201], "simd_abi": [183, 184], "fallback": [183, 184], "nativ": [183, 184, 203], "extract": [183, 184, 195, 226], "mask_typ": [183, 184, 201], "abi_typ": [183, 184], "element_aligned_tag": [183, 185, 201], "copy_from": [183, 185, 201], "copy_to": [183, 185, 201], "lh": [183, 184], "mag": 183, "sgn": 183, "native_simd": [183, 185, 201], "simd_typ": [183, 184, 185, 201], "zu": [183, 233], "simd": [184, 185, 208, 213, 235], "iff": 184, "native_simd_mask": [184, 201], "basi": [185, 188, 226], "const_where_express": 185, "scatter_to": 185, "gather_from": 185, "safer": 185, "domain": [185, 205], "chapter": [186, 188, 193, 195, 198, 199, 200, 202, 203, 222], "understand": [186, 188, 195, 197, 198, 202, 203, 233], "resolv": [186, 218], "histogram": 186, "create_histogram": 186, "try": [186, 194, 198, 203, 204, 206, 218], "lost": 186, "race": [186, 195, 198, 224], "situat": [186, 189, 198, 201, 218, 231], "particl": [186, 230, 231], "neighbour": 186, "forc": [186, 188, 193, 198, 200, 201, 231], "compute_forc": 186, "forceloop": 186, "neighbor": [186, 231], "particle_id": 186, "neighbour_id": 186, "some_contribut": 186, "colour": 186, "ii": [186, 195, 225], "iii": 186, "disadvantag": 186, "transfer": [186, 203], "fall": [186, 193, 196, 203, 221, 232], "uninterrupt": 186, "cycl": [186, 188, 218, 219, 222], "hinder": 186, "throughput": [186, 196], "createhistogram": 186, "scheme": 186, "find_indici": 186, "findindici": 186, "div": 186, "lshift": 186, "mod": 186, "mul": 186, "rshift": 186, "sub": [186, 202], "xor": 186, "histogram_atom": 186, "transpar": 186, "clever": 187, "constitut": [187, 193, 222], "tension": 187, "freedom": 187, "frustrat": [187, 201], "pain": 187, "deliber": 187, "accident": [187, 218], "breakag": [187, 218], "unless": [187, 188, 199, 201, 203, 234], "kokkos_": [187, 209], "chanc": 187, "inadvert": 187, "broken": 187, "kokkos_impl_": 187, "notic": [187, 211, 227, 228, 233], "period": [187, 218], "hous": 187, "prime": 187, "incomplet": 187, "newer": [187, 188, 214], "particularli": [187, 226], "problemat": [187, 234], "obei": 187, "interfer": [187, 198], "collison": 187, "prefac": 187, "myproject_": 187, "disambigu": 187, "cap": 187, "usual": [187, 188, 195, 198, 199, 203, 220], "syntact": 187, "revis": [187, 218], "behind": [187, 201, 225, 229], "publish": 187, "drive": [187, 194, 201], "advantag": [187, 201, 229, 231], "workaround": [187, 220], "older": [187, 218], "recompil": 187, "against": [187, 188, 193, 204, 206, 220, 221, 234], "occasion": [187, 214], "overal": [187, 203, 222, 229], "migratori": 187, "evolutionari": 187, "ideal": [187, 218], "wrong": [187, 202, 203], "wast": [187, 203], "continu": [187, 188, 195, 196, 204, 218, 222, 227], "subdirectori": [187, 188], "union": 187, "fashion": [187, 202], "sole": [187, 196], "invok": [187, 198, 203, 209], "explain": [188, 193, 198, 203], "embed": [188, 196], "mix": [188, 195, 198, 203, 204, 214], "advic": 188, "mainli": [188, 203], "directori": [188, 218, 220, 222], "protect": [188, 193, 195, 196, 198, 201, 234], "prevent": [188, 193, 195, 203, 224], "kokkoscore_config": 188, "h": [188, 205, 223, 229], "mention": [188, 222], "compliant": [188, 233], "date": [188, 218, 220], "nightli": [188, 222], "readm": [188, 206, 220, 222], "repositori": [188, 218, 220, 221], "At": [188, 194, 197, 199, 201, 203, 218, 222, 233], "88": [188, 214], "nvc": [188, 214, 221], "rocm": [188, 214, 233], "xl": [188, 214, 220], "fujitsu": [188, 214], "arm": [188, 214], "linkag": [188, 214], "fopenmp": 188, "hwloc": [188, 194, 209, 222], "As": [188, 189, 193, 196, 198, 199, 201, 204, 222, 227, 233], "robust": [188, 204, 218], "strongli": [188, 203, 204], "cmakelist": [188, 204], "txt": [188, 204], "find_packag": [188, 204, 209], "target_link_librari": [188, 204], "mytarget": [188, 204], "processor": [188, 193, 196, 198, 200, 222], "dkokkos_root": [188, 204], "lib64": 188, "especi": [188, 198, 199, 201, 219, 222, 228], "nvcc_wrapper": 188, "dcmake_cxx_compil": [188, 204], "bin": 188, "cmake_cxx_flag": 188, "propag": [188, 204], "illustr": [188, 193, 203, 204, 225], "add_subdirectori": [188, 204], "dir": [188, 209], "include_directori": 188, "kokkos_include_dirs_ret": 188, "arch": [188, 209], "mkdir": [188, 220], "cd": [188, 220], "srcdir": [188, 204], "dcmake_install_prefix": [188, 204], "my_install_fold": 188, "dkokkos_enable_openmp": [188, 204], "parti": [188, 195, 198, 204], "tpl": [188, 204], "altern": [188, 195, 201, 204, 209, 222], "download": [188, 204, 222], "env": [188, 204], "folder": [188, 204], "setup": [188, 204, 222, 229], "sh": [188, 204, 222], "variant": [188, 199, 203, 204, 218], "deactiv": [188, 204], "chosen": [188, 204], "exact": [188, 204], "info": [188, 204, 208, 209], "hash": [188, 203, 204], "human": [188, 204], "readabl": [188, 201, 204], "spec": [188, 204], "dii": 188, "wish": [188, 194], "downstream": [188, 204], "almost": [188, 196, 201, 224], "myproject": 188, "myvers": 188, "idiosyncrasi": 188, "annoi": 188, "dspack_workaround": 188, "spack_workaround": 188, "spack_cxx": 188, "cmake_cxx_compil": 188, "cxx": [188, 225], "technolog": [188, 196, 211], "orient": [188, 231], "softwar": [188, 196, 201, 211, 218, 221], "framework": [188, 198, 205], "solut": [188, 196, 197, 201, 211, 218, 222, 226, 233], "larg": [188, 201, 203, 204, 209, 226, 232], "multiphys": 188, "scientif": [188, 196, 203], "problem": [188, 195, 196, 219, 222, 228], "organ": [188, 209, 218, 219, 231], "stand": 188, "trilinos_enable_kokko": 188, "tpetra": 188, "infer": [188, 202], "trilinos_enable_openmp": 188, "ON": [188, 204, 209, 211], "autogener": 188, "cmake_c_compil": 188, "cmake_fortran_compil": 188, "kokkos_arch_": 188, "archcod": 188, "kokkos_arch_hsw": [188, 209], "haswel": [188, 222], "uvm": [188, 195, 197, 200, 203, 227, 233], "export": 188, "cuda_launch_block": [188, 204], "cuda_managed_force_device_alloc": [188, 204], "aris": [188, 211], "stabil": 188, "symbol": 188, "ln": 188, "kokkos_source_dir_overrid": 188, "kokkoskernel": 188, "kokkoskernels_source_dir_overrid": 188, "script": [188, 204, 220, 221], "ompi_cxx": 188, "openmpi": 188, "digest": 188, "matter": [188, 198], "kokkos_link_depend": 188, "kokkos_cpp_depend": 188, "kokkos_cppflag": 188, "kokkos_cxxflag": 188, "kokkos_ldflag": 188, "kokkos_lib": 188, "tutori": [188, 196, 208], "kokkos_path": [188, 220], "IN": [188, 211], "root": [188, 201, 209], "cuda_path": 188, "toolkit": [188, 220], "kokkos_devic": 188, "kokkos_arch": [188, 201], "knl": [188, 209, 220], "knc": [188, 209], "snb": [188, 209], "hsw": [188, 209], "bdw": [188, 209], "kepler30": [188, 209], "kepler35": [188, 209], "kepler37": [188, 209], "maxwell50": [188, 209], "pascal60": [188, 209], "pascal61": [188, 209], "armv81": [188, 209], "bgq": [188, 209], "kokkos_use_tpl": 188, "experimental_memkind": 188, "kokkos_opt": 188, "aggressive_vector": 188, "kokkos_cuda_opt": [188, 199], "force_uvm": 188, "use_ldg": 188, "rdc": [188, 209], "enable_lambda": [188, 199], "hwloc_path": 188, "ye": 188, "kokkos_cxx_standard": 188, "lib": 188, "cxxflag": [188, 222], "emb": 188, "metaprogram": [188, 203], "shortcom": 188, "prepend": 188, "xcompil": 188, "shell": [188, 204, 222], "analyz": [188, 222], "ccbin": 188, "edit": [188, 198, 216, 218, 220, 222], "nvcc_wrapper_default_compil": 188, "peopl": [188, 197, 233], "modul": [188, 200, 220, 222, 225, 235], "icpc": 188, "pgc": 188, "attach": [188, 194, 217, 222, 232], "degrad": 188, "accommod": 189, "click": [189, 216], "head": [189, 232], "summat": 190, "parabl": 190, "minreduc": 190, "min_reduc": 190, "minloc_typ": 190, "minlocreduc": 190, "lminloc": 190, "reducer_typ": 190, "team_typ": 190, "team_minmaxloc": 190, "row_minmaxloc": 190, "thread_minmaxloc": 190, "gui": [190, 199, 235], "hurt": 190, "team_minmax": 190, "resolut": [191, 218, 219, 231], "the_arrai": 191, "tr": [191, 192], "upd": [191, 192], "ndx": [191, 192], "myarrai": 192, "summyarrai": 192, "references_scalar": 192, "arraysumresult": 192, "exploit": [193, 226], "syntax": [193, 199, 202, 203, 209], "parallel_": [193, 200, 203, 207], "node": [193, 194, 196, 200, 208, 222, 223, 232], "modern": [193, 204], "character": [193, 200], "higher": [193, 196], "orthogon": [193, 198], "heterogen": [193, 194, 200, 222, 230], "cluster": [193, 227], "multicor": [193, 196, 198, 200], "hyper": 193, "instruct": [193, 201, 206], "socket": [193, 204], "network": [193, 222], "llc": [193, 211], "l1": 193, "l2": 193, "sm": 193, "warp": [193, 195, 203], "wave": 193, "collabor": [193, 196], "adapt": [193, 197, 200, 233], "suggest": [193, 222], "tightli": [193, 226, 235], "gather": 193, "choic": [193, 195, 198, 203, 204], "sometim": [193, 203, 204, 219, 220], "flat": [193, 232], "grid": [193, 195, 202], "inter": [193, 198], "guess": 193, "n_workset": 193, "choos": [193, 194, 199, 200, 203], "sometag": 193, "action": [193, 218, 219, 221, 222], "team_memb": [193, 232], "coordin": 193, "everyon": 193, "consum": 193, "indirect": [193, 211], "workset": 193, "lifetim": 193, "recycl": 193, "cell": [193, 226], "team_shmem_s": 193, "double_s": 193, "team_shared_a": 193, "get_shmem": 193, "team_shared_b": 193, "160": 193, "kilobyt": 193, "gigabyt": 193, "mostli": [193, 195], "adjust": 193, "raw": [193, 199, 207], "shared_int_2d": 193, "shared_s": 193, "shmem_siz": 193, "layer": [193, 195, 196, 201, 225], "teamthreadloop": 193, "threadvectorloop": 193, "consciou": 193, "difficult": [193, 201, 226], "claus": [193, 199, 206, 211, 231], "catch": [193, 203, 218, 221], "loop_count": 193, "emploi": [193, 196, 198], "prepar": [193, 220], "stage": 193, "innermost": 193, "compris": [193, 198], "workset_s": 193, "vectoriz": 193, "decor": 193, "pragma": [193, 195, 199], "ivdep": 193, "repetit": [193, 201], "bodi": [193, 203, 214, 232], "shared_arrai": 193, "somefunct": [193, 195], "global_arrai": 193, "my_offset": 193, "inner_lsum": 193, "inner_": 193, "subpackag": [194, 203], "alphabet": [194, 208], "interpret": 194, "primarili": [194, 218, 219], "job": [194, 222], "workstat": 194, "screen": 194, "promis": [194, 198, 199, 200], "conflict": [194, 203], "field": [194, 196, 197, 218, 220, 226, 230, 233], "shut": 194, "down": [194, 197, 228, 233], "exit": 194, "atexit": 194, "mpi_comm_self": 194, "adopt": [195, 200], "facilit": 195, "lift": 195, "inde": [195, 203, 231], "cumbersom": 195, "enter": [195, 196, 203, 232], "__host__": [195, 210], "__cuda_arch__": 195, "blockidx": 195, "threadidx": 195, "blockdim": 195, "omp_set_num_thread": 195, "bookkeep": 195, "ask": [195, 198, 200, 203, 218, 221], "princip": 195, "insur": 195, "app": 195, "placement": [195, 197, 233], "150": 195, "2d_arrai": 195, "200": [195, 203], "scenario": [195, 200, 201], "receiv": [195, 222], "straight": 195, "mykokkosfunct": 195, "host_spac": 195, "t_1d_device_view": 195, "t_2d_device_view": 195, "d_b": 195, "h_b": 195, "t_team": 195, "t_1d_view": 195, "t_3d_view": 195, "had": [195, 231], "whatev": 195, "a_old": 195, "unfortun": [195, 231, 233], "leav": [195, 203, 229], "unrestrict": 195, "push": [195, 214, 220], "bring": [195, 199, 225], "massiv": 195, "penalti": [195, 203], "1000": [195, 199, 203], "uneven": 195, "polymorph": [195, 200, 205], "bla": [195, 203, 235], "matric": [195, 203], "dot": 195, "cubla": 195, "kokkos_have_cuda": 195, "call_cublas_dot": 195, "ptr_on_devic": 195, "extent_0": [195, 203], "cbla": 195, "call_cblas_dot": 195, "hpc": [196, 208, 218, 231], "verg": 196, "era": [196, 205], "angl": 196, "rate": 196, "flop": 196, "poor": 196, "workload": 196, "challeng": 196, "energi": 196, "mid": 196, "1990": [196, 199], "enjoi": 196, "seemingli": 196, "homogen": [196, 198, 222, 230], "decad": 196, "deriv": [196, 197, 211, 233], "commun": [196, 202, 218, 219, 227, 229], "realiz": 196, "review": [196, 218, 221, 222], "broad": 196, "latenc": [196, 198, 203], "medium": 196, "graphic": [196, 198], "gp": 196, "toler": 196, "degre": [196, 200], "divers": 196, "interest": [196, 201, 215, 218], "heritag": 196, "offer": 196, "guidelin": [196, 210], "todai": [196, 198], "cilk": 196, "tbb": 196, "linux": 196, "contemporari": [196, 198], "openacc": 196, "opencl": 196, "Such": [196, 225, 226], "varieti": [196, 222, 230], "pose": 196, "reminisc": 196, "becam": 196, "invest": [196, 203], "seek": 196, "isol": 196, "fluctuat": 196, "coverag": 196, "supplementari": 196, "gradual": 196, "odditi": [197, 233], "face": [197, 202, 233], "subtl": [197, 233], "classwithvirtualfunct": [197, 233], "somebas": [197, 233], "virtualfunct": [197, 233], "hostclassinst": [197, 233], "deviceclassinst": [197, 233], "cudamalloc": [197, 233], "cudamemcpi": [197, 233], "cudamemcpyhosttodevic": [197, 233], "devicekernel": [197, 233], "somecudapolici": [197, 233], "glanc": [197, 233], "fine": [197, 203, 233], "crash": [197, 233], "nomin": [197, 233], "vpointer": [197, 233], "vtabl": [197, 233], "among": [197, 222, 233], "okai": [197, 233], "rememb": [197, 199, 203, 222, 233], "amongst": [197, 233], "hidden": [197, 203, 233], "derefer": [197, 233], "credit": [197, 233], "pablo": [197, 233], "aria": [197, 221, 233], "intro": [197, 233, 235], "faithfulli": [197, 233], "merrili": [197, 233], "pseudocod": [197, 233], "hostinst": [197, 233], "deviceinst": [197, 233], "deivc": [197, 233], "techniqu": [197, 233], "ugli": [197, 233], "repo": [197, 208, 233], "setafield": [197, 233], "somehostvalu": [197, 233], "naiv": [197, 201, 233], "wit": [197, 233], "said": [197, 202, 233], "solv": 197, "educ": [197, 233], "slack": [197, 208, 218, 219, 221, 233], "aspect": [198, 200, 201, 222], "programm": [198, 199, 201, 203, 227], "distinct": 198, "exascal": [198, 205], "consult": [198, 203], "ang": 198, "elect": 198, "show": [198, 199, 200, 203, 220], "die": [198, 200], "acceler": [198, 199, 222, 229, 231], "reachabl": 198, "et": [198, 218], "al": [198, 205], "proxi": 198, "sandia": [198, 211, 222], "nation": [198, 211], "laboratori": 198, "lawrenc": 198, "berkelei": 198, "consider": 198, "finit": [198, 224, 226], "packag": [198, 205, 218, 220, 221, 226], "slower": [198, 203], "dram": 198, "volatil": [198, 200, 203, 207], "routin": [198, 225, 226], "collis": 198, "gain": 198, "topic": [198, 199, 218], "coher": [198, 203], "hennessi": 198, "paterson": 198, "weak": 198, "therebi": 198, "fifth": [198, 202], "quantit": 198, "morgan": 198, "kaufmann": 198, "tempt": 198, "author": [198, 205], "background": 198, "scientist": 198, "stick": 198, "proof": 198, "forbid": [198, 203], "implic": 198, "filesystem": 198, "overlap": [198, 223], "reproduc": [198, 211, 219], "earli": [198, 221], "awai": [198, 201, 202], "wonder": 198, "great": 198, "markup": 199, "unnecessari": [199, 203], "harmless": 199, "anonym": 199, "suppli": 199, "outermost": 199, "turn": [199, 201, 203], "surround": 199, "stack": [199, 203, 218, 221], "secondli": 199, "circumvent": 199, "harder": 199, "interoper": [199, 201, 213, 225, 235], "omp": [199, 222], "prior": [199, 203, 204, 211, 218, 219, 225, 229], "faster": 199, "trip": 199, "fewer": 199, "encapsul": [199, 200, 202], "semir": 199, "maxplu": 199, "x_": 199, "inf": 199, "columnsum": 199, "Be": 199, "convinc": 199, "numrow": 199, "numcol": 199, "cs": 199, "sequenti": [199, 203, 226], "blelloch": 199, "book": 199, "hi": [199, 219], "phd": 199, "dissert": [199, 201], "val_i": 199, "mit": 199, "press": 199, "necess": 199, "unus": [199, 231], "differenti": 199, "bartag": 199, "rabtag": 199, "foobar": [199, 215], "formul": 200, "vari": [200, 203], "figur": 200, "hybrid": 200, "pim": 200, "principl": [200, 203], "remot": [200, 208, 222, 235], "send": 200, "undetermin": 200, "prescript": 200, "primit": 200, "spin": 200, "dead": 200, "persist": 200, "diverg": 200, "inspir": 200, "vocabulari": [200, 222], "comfort": 200, "reflect": [200, 203], "rewrit": 200, "unoptim": 200, "optimis": 200, "histori": [201, 222], "struggl": 201, "blog": 201, "insight": 201, "drawback": [201, 231], "quot": 201, "stanford": 201, "tim": 201, "folei": 201, "heart": 201, "black": 201, "box": 201, "matthia": 201, "kretz": 201, "deliv": 201, "vendor": [201, 218, 235], "fairli": 201, "pictur": 201, "clearli": 201, "odd": 201, "quirk": 201, "tag_typ": 201, "sx": 201, "sy": 201, "sz": 201, "sr": 201, "squar": 201, "emit": [201, 202], "4x": 201, "speedup": [201, 229], "skip": [201, 203], "troublesom": 201, "pitfal": [201, 203], "evenli": 201, "divis": 201, "cleaner": 201, "wide": [201, 203, 218, 222], "reach": [201, 203], "throughout": 201, "slight": 201, "quadratic_formula": 201, "x1": 201, "x2": 201, "discrimin": 201, "sqrt_discrimin": 201, "classic": [201, 214], "familiar": [201, 203, 218], "quadrat": 201, "formula": 201, "liter": 201, "mimic": 201, "roadmap": [201, 218], "regard": 201, "very_expensive_funct": 201, "statement": 201, "spend": [201, 203], "lot": [201, 203, 220], "pick": [202, 203, 218], "notat": 202, "vice": 202, "versa": 202, "cross": [202, 221], "plane": 202, "cube": 202, "n_0": 202, "n_1": 202, "n_": 202, "a_0": 202, "a_1": 202, "a_": 202, "a_j": 202, "n_j": 202, "handi": 202, "boundari": 202, "matlab": 202, "python": [202, 208, 220, 222, 235], "colon": 202, "fourth": 202, "elabor": 202, "a_sub": 202, "won": [202, 203], "cheaper": 202, "keyword": [202, 204, 207, 208], "easiest": [202, 204], "dens": [202, 208, 235], "inconveni": 202, "my_view_typ": 202, "my_subview_typ": 202, "my_subview_type_deduc": 202, "fast": [203, 220], "intim": 203, "factor": 203, "coder": 203, "tie": 203, "hard": 203, "evolv": 203, "reliev": 203, "burden": [203, 218], "ty": 203, "expert": 203, "easi": [203, 204], "ellips": 203, "asterisk": 203, "typecast": 203, "a_ptr": 203, "malloc": 203, "a0": 203, "arbitrarili": 203, "unprotect": 203, "badli": 203, "therefor": [203, 234], "advis": [203, 211], "deconstructor": 203, "disallow": 203, "indirectli": 203, "novic": 203, "THE": [203, 211, 220], "FOR": [203, 211], "IS": [203, 211], "NO": [203, 211], "rag": 203, "reorgan": 203, "v_outer": 203, "assigne": 203, "wors": 203, "yourself": [203, 220], "destroi": [203, 215], "rid": 203, "inner_view_typ": 203, "outer_view_typ": 203, "numout": 203, "numinn": 203, "to_str": 203, "device_out": 203, "dispos": 203, "nonown": 203, "a_nonconst": 203, "nonconst": 203, "a_const": 203, "readonlyfunct": 203, "skew": 203, "parenthes": 203, "enclos": 203, "comma": 203, "delimit": 203, "a_ijk": 203, "rest": 203, "slow": 203, "leftmost": 203, "exempt": 203, "unwind": 203, "incorrect": 203, "100x50x4": 203, "50": 203, "200x50x4": 203, "300x60x4": 203, "300": 203, "java": 203, "s_1": 203, "s_2": 203, "s_3": 203, "dim1": 203, "extent_n": 203, "conserv": 203, "benefici": 203, "heavi": 203, "stringent": 203, "overflow": 203, "lapack": [203, 235], "idea": 203, "lda": 203, "morton": 203, "thereof": 203, "viewmap": 203, "renam": 203, "coalesc": 203, "callbla": 203, "callsomeblasfunct": 203, "invalid_argu": 203, "100000": 203, "biject": 203, "accessspac": 203, "viewallocatewithoutiniti": 203, "affin": 203, "memcopi": 203, "discourag": [203, 210], "circumv": 203, "defeat": 203, "polymorp": 203, "legaci": [203, 213], "legacyfunct": 203, "x_raw": 203, "len": 203, "myfunct": 203, "somelibraryfunct": 203, "reference_is_lvalu": 203, "sometrait": 203, "someothertrait": 203, "ca": 203, "a_atom": 203, "irregularli": 203, "a_ra": 203, "shorter": 203, "fault": 203, "prolifer": 203, "csr": 203, "spmatvec": 203, "ind": 203, "x_ra": 203, "y_i": 203, "accordingli": 203, "x_view": 203, "functionthattakeskokkosview": 203, "safest": 203, "tree": [204, 220, 232], "exceedingli": 204, "devil": 204, "kokkos_install_prefix": 204, "compiler_used_to_build_kokko": 204, "cmake_polici": 204, "cmp0074": 204, "cmake_build_instal": 204, "cmake_build_in_tre": 204, "kokkos_install_fold": 204, "craype_link_typ": 204, "miss": 204, "benchmark": [204, 222], "bytes_and_flop": 204, "nvlink": [204, 227], "displai": 204, "dev": [204, 220, 222], "articl": 205, "9485033": 205, "trott": [205, 211], "christian": [205, 211, 218], "lebrun": 205, "grandi\u00e9": 205, "damien": [205, 218], "arndt": 205, "daniel": 205, "ciesko": 205, "jan": 205, "dang": 205, "vinh": 205, "ellingwood": 205, "nathan": 205, "gayatri": 205, "rahulkumar": 205, "harvei": 205, "evan": 205, "hollman": 205, "daisi": 205, "ibanez": 205, "dan": 205, "liber": 205, "nevin": 205, "madsen": 205, "jonathan": 205, "mile": 205, "jeff": 205, "poliakoff": 205, "david": 205, "powel": 205, "ami": 205, "rajamanickam": 205, "sivasankaran": 205, "simberg": 205, "mikael": 205, "sunderland": 205, "turcksin": 205, "bruno": 205, "wilk": 205, "jeremiah": 205, "journal": 205, "ieee": 205, "transact": 205, "titl": 205, "2022": [205, 214], "volum": 205, "805": 205, "817": 205, "doi": 205, "1109": 205, "tpd": 205, "2021": [205, 214], "3097283": 205, "ecosystem": [205, 208], "9502936": 205, "berger": 205, "vergiat": 205, "luc": 205, "grandi": 205, "nader": 205, "gligor": 205, "milo": 205, "shipman": 205, "galen": 205, "womeldorff": 205, "geoff": 205, "scienc": [205, 221], "comprehens": [205, 214, 220], "mcse": 205, "3098509": 205, "carteredwards20143202": 205, "manycor": 205, "3202": 205, "3216": 205, "issn": 205, "0743": 205, "7315": 205, "1016": 205, "jpdc": 205, "07": [205, 220], "003": 205, "url": 205, "sciencedirect": 205, "pii": 205, "s0743731514001257": 205, "carter": 205, "edward": 205, "pull": [206, 218, 220, 222, 232], "licens": [206, 208], "bsd": [206, 211], "commerci": 206, "req": 206, "activeexecutionmemoryspac": 207, "host_execution_spac": 207, "host_memory_spac": 207, "kokkos_restrict_execution_to_": 207, "data_spac": 207, "hip_safe_cal": 207, "create_inst": 207, "partition_mast": 207, "num_partit": 207, "partition_s": 207, "kokkos_openmp_inst": 207, "access_error": 207, "kokkos_hip_spac": 207, "hip_internal_safe_call_deprec": 207, "kokkos_hip_error": 207, "kokkos_openmp": 207, "openmpintern": 207, "validate_partit": 207, "profilingsect": 207, "getnam": 207, "kokkos_profiling_profilesect": 207, "getsectionid": 207, "kokkos_hip_parallel_team": 207, "kokkos_sycl_parallel_team": 207, "kokkos_openmptarget_exec": 207, "kokkos_cuda_parallel_team": 207, "kokkos_cudaspac": 207, "number_of_alloc": 207, "kokkos_hpx": 207, "masterlock": 207, "kokkos_attribute_nodiscard": 207, "amathfunct": 207, "clamp": 207, "is_reducer_typ": 207, "index_list_typ": 207, "always_use_kokkos_sort": 207, "finalize_al": 207, "withoutinitializing_t": 207, "wi": 207, "kokkos_thread_loc": 207, "thread_loc": 207, "is_view": 207, "cuda_internal_safe_call_deprec": 207, "cuda_safe_cal": 207, "trail": 207, "kokkosviewlabel": 207, "kokkos_macro": 207, "kokkos_atom": 207, "kokkos_arrai": 207, "kokkos_half": 207, "kokkos_tim": 207, "kokkos_sort": 207, "kokkos_bit": 207, "kokkos_errorreport": 207, "batch": [208, 235], "pykokko": 208, "checkpoint": 208, "mdspan": 208, "p0009": 208, "stdbla": 208, "p1673": 208, "kokkosteam": [208, 219], "instal": [208, 209, 222, 227], "cmake": [208, 214, 228], "video": 208, "lectur": 208, "slide": 208, "cite": 208, "sensit": 209, "recal": 209, "dkeyword_nam": 209, "kokkos_enable_compiler_warn": 209, "relax": 209, "kokkos_enable_cuda_ldg_intrins": 209, "um": 209, "kokkos_enable_deprecated_cod": 209, "kokkos_enable_exampl": 209, "kokkos_enable_large_mem_test": 209, "kokkos_enable_test": 209, "kokkos_cuda_dir": 209, "cuda_root": 209, "kokkos_hwloc_dir": 209, "hwloc_root": 209, "kokkos_memkind_dir": 209, "memkind_root": 209, "kokkos_libdl_dir": 209, "libdl_root": 209, "kokkos_librt_dir": 209, "librt_root": 209, "hpx_dir": 209, "hpx_root": 209, "config": [209, 220, 222], "kokkos_arch_n": 209, "kokkos_arch_a64fx": 209, "sve": 209, "kokkos_arch_amd_gfx906": 209, "kokkos_arch_amd_gfx908": 209, "kokkos_arch_amd_gfx90a": 209, "kokkos_arch_amd_gfx1030": 209, "kokkos_arch_amd_gfx1100": 209, "7900xt": 209, "gfx1100": 209, "kokkos_arch_amdavx": 209, "amdavx": 209, "armv80": 209, "armv8_thunderx": 209, "armv8_thunderx2": 209, "kokkos_arch_bdw": 209, "kokkos_arch_bgq": 209, "kepler32": 209, "kokkos_arch_knl": 209, "maxwell52": 209, "maxwell53": 209, "kokkos_arch_skx": 209, "skx": 209, "kokkos_arch_snb": 209, "kokkos_arch_spr": 209, "sapphir": 209, "turing75": 209, "volta70": 209, "volta72": 209, "kokkos_arch_wsm": 209, "wsm": 209, "kokkos_arch_zen": 209, "kokkos_arch_zen2": 209, "kokkos_arch_zen3": 209, "wherea": 209, "ahead": [209, 218], "amd_gfx1100": 209, "amd_gfx906": 209, "amd_gfx908": 209, "mi210": 209, "mi250": 209, "mi250x": 209, "amd_gfx90a": 209, "amd_gfx1030": 209, "hsa_xnack": 210, "explan": 210, "compatibilti": 210, "do_math": 210, "sqrt5": 210, "ambigu": 210, "highli": 210, "z1": 210, "z2": 210, "z3": 210, "copyright": 211, "2020": 211, "ntess": 211, "contract": [211, 229], "de": [211, 218], "na0003525": 211, "govern": 211, "retain": 211, "redistribut": 211, "permit": 211, "materi": 211, "corpor": 211, "contributor": 211, "endors": 211, "permiss": [211, 220, 222], "BY": 211, "AS": 211, "warranti": 211, "BUT": 211, "OF": 211, "merchant": 211, "shall": [211, 219], "liabl": 211, "incident": 211, "exemplari": 211, "consequenti": 211, "damag": 211, "procur": [211, 218], "substitut": 211, "servic": 211, "loss": 211, "profit": 211, "busi": 211, "interrupt": 211, "theori": [211, 229], "liabil": 211, "strict": 211, "tort": 211, "neglig": 211, "IF": 211, "SUCH": 211, "contact": 211, "crtrott": 211, "gov": 211, "introduct": [213, 222, 235], "unawar": 214, "appleclang": 214, "intelllvm": 214, "2023": 214, "pthread": [214, 220, 222], "wall": [214, 220], "wunus": 214, "wshadow": [214, 220], "pedant": [214, 220], "werror": [214, 220], "wsign": [214, 220], "wtype": [214, 220], "wignor": 214, "wempti": 214, "wclobber": 214, "wuniniti": 214, "master": [214, 220, 222], "rigor": 214, "some_var": 215, "frobrnic": 215, "foobat": 215, "frobnic": 215, "pencil": 216, "button": 216, "feedback": [217, 218, 221], "workflow": [217, 221, 224], "ramp": 218, "overarch": 218, "outdat": 218, "anymor": 218, "facto": 218, "month": [218, 220], "phase": [218, 221], "defect": 218, "upcom": 218, "seamless": 218, "anticip": 218, "soon": 218, "deploy": [218, 221], "engag": 218, "fund": [218, 221], "agenc": [218, 221], "monitor": 218, "hpe": 218, "kit": 218, "research": 218, "channel": [218, 219, 221], "hackathon": 218, "chanel": 218, "bi": 218, "annual": 218, "usergroup": [218, 219], "influenc": 218, "sustain": 218, "mainten": [218, 222], "proven": 218, "audienc": 218, "committe": 218, "greatest": 218, "matur": 218, "train": 218, "bump": 218, "leadership": 218, "prioriti": [218, 219], "thrust": 218, "person": [218, 222], "refin": 218, "unassign": 218, "aren": 218, "weekli": [218, 219], "reassign": 218, "obsolet": 218, "changelog": [218, 220], "avenu": 218, "week": [218, 221], "mondai": 218, "urgent": 218, "triag": 218, "preliminari": 218, "agenda": 218, "kept": 218, "nucleu": 218, "ongo": 218, "ephemer": 218, "dai": [218, 220], "unpaid": 218, "longer": 218, "wherev": 218, "nda": 218, "held": 218, "wednesdai": 218, "2pm": 218, "pm": 218, "mt": 218, "00": [218, 220], "utc": 218, "zoom": 218, "six": 218, "candid": [218, 221], "cherri": 218, "nearing": 218, "delai": 218, "creation": 218, "ship": 218, "partner": [218, 219], "announc": 218, "invit": [218, 221], "onto": 218, "regress": 218, "unaddress": 218, "approxim": 218, "overview": [218, 226], "enhanc": [219, 220, 231], "priorit": 219, "mileston": 219, "slot": 219, "15feb18": 220, "x86": [220, 222], "043": 220, "196": 220, "128": 220, "pgi": 220, "103": 220, "174": 220, "cygwin": 220, "64bit": 220, "test_all_sandia": [220, 222], "trilino": [220, 221, 222, 226], "atdm": 220, "lammp": [220, 221], "sparc": 220, "master_histori": 220, "snapshot": [220, 222], "clone": [220, 222], "git": 220, "nohup": 220, "tail": 220, "watch": 220, "white": [220, 222], "shepard": [220, 222], "shepard_jenkins_run_script_serial_intel": [220, 222], "pristin": [220, 222], "rerun": 220, "token": [220, 235], "oldtag": 220, "newtag": 220, "04": 220, "rubi": 220, "gitthub_changelog_gener": 220, "indevelop": 220, "cat": 220, "md": 220, "cleanup": 220, "commit": [220, 222], "owner": [220, 222, 227], "clariti": [220, 231], "noteworthi": 220, "checkout": [220, 222], "majornumb": 220, "minornumb": 220, "weekssinceminornumberupd": 220, "sha1": 220, "append": [220, 232], "03": 220, "27": 220, "da314444": 220, "29ccb58a": 220, "amend": 220, "mm": [220, 225], "dd": 220, "yyyi": 220, "sem": [220, 222], "checkin": [220, 222], "disk": [220, 229], "ram": 220, "ceerws1113": 220, "trilinos_path": 220, "pwd": 220, "untrack": 220, "py": [220, 222], "backtrack": 220, "server": [221, 222], "approv": [221, 222], "jenkin": [221, 222], "travi": 221, "institut": 221, "durat": 221, "pipelin": 221, "verif": 221, "offici": [221, 222], "judg": 221, "thorough": 221, "wider": 221, "poc": 221, "reproduct": 221, "arborx": 221, "million": 221, "nnsa": 221, "offic": 221, "snl": 221, "empir": 221, "sparta": 221, "sierra": 221, "ornl": 221, "cabana": [221, 223], "anl": 221, "petsc": 221, "publicli": 221, "advertis": 221, "role": 222, "databas": 222, "fork": 222, "privileg": 222, "865": 222, "begun": 222, "conclus": 222, "haap": 222, "secondari": 222, "outag": 222, "scroll": 222, "ohpc": 222, "srn": 222, "apollo": 222, "bowman": 222, "elli": 222, "hansen": 222, "e5": 222, "2698": 222, "kokkos_dev": 222, "ride": 222, "p8": 222, "tuleta": 222, "fireston": 222, "garrison": 222, "tesla": 222, "k40": 222, "k80": 222, "p100": 222, "36": 222, "sullivan": 222, "mac": 222, "bed": 222, "submiss": 222, "connect": 222, "webcar": 222, "intranet": 222, "staff": 222, "leader": 222, "assist": 222, "csri": 222, "csu": 222, "administ": 222, "daili": 222, "regimen": 222, "suit": 222, "dashboard": 222, "identif": 222, "flow": 222, "terminolog": 222, "joint": 222, "simul": [222, 227, 230, 231], "qthread": 222, "briefli": 222, "generate_makefil": 222, "bash": 222, "makefil": 222, "spot": 222, "jenkins_test_driv": 222, "testing_script": 222, "sha": 222, "accomplish": [222, 226], "prepare_trilinos_repo": 222, "shepard_jenkins_run_script_pthread_intel": 222, "workspac": 222, "white_run_jenkins_script_cuda": 222, "white_run_jenkins_script_omp": 222, "test_kokkos_master_develop_promot": 222, "checkintest": 222, "flavor": 222, "speed": 222, "central": 222, "equat": 222, "viz": 222, "accuraci": 222, "replica": 222, "nearli": 222, "hundr": 222, "unit_test": 222, "performance_test": 222, "perf_test": 222, "scrutini": 222, "inadequaci": 222, "defici": 222, "halo": 223, "averag": 223, "interop": [223, 235], "window": 223, "demonstr": [224, 225, 226, 229], "quantiti": 224, "ratio": 224, "ultim": 224, "count_adjacent_el": 224, "elements_to_nod": 224, "number_of_nod": 224, "elements_per_nod": 224, "scatter_elements_per_nod": 224, "create_scatter_view": 224, "access_elements_per_nod": 224, "node_of_el": 224, "sum_to_nod": 224, "element_valu": 224, "node_valu": 224, "scatter_node_valu": 224, "access_node_valu": 224, "average_to_nod": 224, "flcl": 225, "daxpi": 225, "ndarrai": 225, "flcl_ndarray_t": 225, "dope": 225, "flatten": [225, 226], "_flcl_nd_array_t": 225, "flcl_ndarray_max_rank": 225, "f90": 225, "nd_array_t": 225, "c_size_t": 225, "nd_array_max_rank": 225, "c_ptr": 225, "procedur": 225, "to_nd_arrai": 225, "to_nd_array_l_1d": 225, "to_nd_array_i32_1d": 225, "to_nd_array_i64_1d": 225, "to_nd_array_r32_1d": 225, "to_nd_array_r64_1d": 225, "to_nd_array_l_2d": 225, "to_nd_array_i32_2d": 225, "to_nd_array_i64_2d": 225, "to_nd_array_r32_2d": 225, "to_nd_array_r64_2d": 225, "to_nd_array_l_3d": 225, "to_nd_array_i32_3d": 225, "to_nd_array_i64_3d": 225, "to_nd_array_r32_3d": 225, "to_nd_array_r64_3d": 225, "view_from_ndarrai": 225, "axpi": 225, "flcl_mod": 225, "c_doubl": 225, "allocat": 225, "f_y": 225, "c_y": 225, "alpha": 225, "subroutin": 225, "iso_c_bind": 225, "inout": 225, "f_axpi": 225, "nd_arrai": 225, "earlier": 225, "c_axpi": 225, "nd_array_i": 225, "nd_array_x": 225, "tensor": 226, "pde": 226, "inputdata": 226, "inputfield": 226, "outputfield": 226, "tripl": 226, "paral": 226, "for_all_cel": 226, "merit": 226, "notion": 226, "natur": 226, "mdr_for_all_cel": 226, "wiki": 226, "intrepid2": 226, "intrepid2_arraytoolsdef": 226, "intrepid": 226, "complementari": 227, "scalabl": 227, "walk": 227, "source_rank": 227, "destination_rank": 227, "number_of_doubl": 227, "my_rank": 227, "mpi_comm": 227, "comm": 227, "mpi_comm_world": 227, "mpi_comm_rank": 227, "mpi_send": 227, "mpi_doubl": 227, "mpi_recv": 227, "quit": 227, "pcie": 227, "unstructur": 227, "sent": 227, "redudantli": 227, "filter": 227, "subset_scann": 227, "keys_in": 227, "desired_key_in": 227, "subset_indices_in": 227, "m_kei": 227, "m_desired_kei": 227, "m_subset_indic": 227, "final_pass": 227, "is_in": 227, "find_subset": 227, "desired_kei": 227, "subset_s": 227, "local_sum": 227, "subset_indic": 227, "transmit": 227, "pack_messag": 227, "all_element_data": 227, "kokkos_enable_deprecated_code_4": 228, "tediou": 228, "appar": 228, "acess": 228, "spell": [228, 233], "myview": 228, "c_style_memori": 228, "c_style_alloc": 228, "concur": 229, "stagger": 229, "littl": 229, "hostexecspac": 229, "deviceexecspac": 229, "device_range_polici": 229, "host_range_polici": 229, "viewvectortyp": 229, "viewmatrixtyp": 229, "xval": 229, "init_src_view": 229, "p_x": 229, "p_a": 229, "init_a": 229, "init_x": 229, "h_x": 229, "h_y": 229, "nrepeat": 229, "synch": 229, "yax": 229, "temp2": 229, "ini_src_view": 229, "occupi": 229, "attent": 229, "paid": 229, "opportun": [229, 231], "range_polici": 229, "v_r": 229, "v_r1": 229, "h_v": 229, "get_initial_st": 229, "get_rhs_func": 229, "serialize_st": 229, "view_r": 229, "exhibit": 230, "cabana_soa": 230, "vectorlength": 230, "membertyp": 230, "cabana_aosoa": 230, "performancetrait": 230, "memorymanag": 230, "carri": 230, "evolut": 231, "particleinteract": 231, "particleposit": 231, "po": 231, "particleforc": 231, "particleneighbor": 231, "pairforc": 231, "parallelis": 231, "rectifi": 231, "qualiti": 231, "plai": 231, "tagphase1": 231, "tagphase2": 231, "compute1": 231, "compute2": 231, "prescrib": 232, "predetermin": 232, "surrog": 232, "roll": 232, "b1": 232, "b2": 232, "b3": 232, "fib": 232, "wait_list": 232, "a_f1": 232, "b_f1": 232, "b_f2": 232, "a_f2": 232, "tm": 232, "vertex": 232, "subteam": 232, "visit": 232, "vertic": 232, "exce": 232, "threshold": 232, "unvisit": 232, "frontier": 232, "st": 232, "edg": 232, "greatli": 232, "neccessari": 233, "myloop": 233, "kokkos_class_lambda": 233, "implementationptr": 233, "make_shar": 233, "oh": 233, "strictli": 233, "nominmax": 234, "uninterpret": 234, "redefin": 234, "dnominmax": 234, "multidim": 235, "safeti": 235, "pga": 235, "analysi": 235, "linear": 235, "algebra": 235, "solver": 235}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [179, 5, 1, "_CPPv410HostMirror", "HostMirror"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [175, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [132, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [132, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [132, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [132, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [132, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [179, 5, 1, "_CPPv412array_layout", "array_layout"], [179, 5, 1, "_CPPv415const_data_type", "const_data_type"], [179, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [179, 5, 1, "_CPPv410const_type", "const_type"], [179, 5, 1, "_CPPv416const_value_type", "const_value_type"], [179, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [179, 5, 1, "_CPPv411device_type", "device_type"], [179, 5, 1, "_CPPv49dimension", "dimension"], [179, 5, 1, "_CPPv415execution_space", "execution_space"], [179, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [179, 5, 1, "_CPPv412memory_space", "memory_space"], [179, 5, 1, "_CPPv413memory_traits", "memory_traits"], [179, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [179, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [179, 5, 1, "_CPPv414non_const_type", "non_const_type"], [179, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [179, 5, 1, "_CPPv412pointer_type", "pointer_type"], [179, 5, 1, "_CPPv414reference_type", "reference_type"], [179, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [179, 5, 1, "_CPPv49size_type", "size_type"], [179, 5, 1, "_CPPv410specialize", "specialize"], [179, 5, 1, "_CPPv410value_type", "value_type"], [108, 6, 1, "_CPPv4I00E4BAnd", "BAnd"], [108, 7, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [108, 7, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [108, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [108, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [108, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [108, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [108, 7, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [108, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [108, 7, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [108, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [108, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [108, 10, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [108, 7, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [108, 10, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [108, 10, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [108, 7, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [109, 6, 1, "_CPPv4I00E3BOr", "BOr"], [109, 7, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [109, 7, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [109, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [109, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [109, 9, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [109, 9, 1, "_CPPv4I00E3BOr", "BOr::Space"], [109, 7, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [109, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [109, 7, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [109, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [109, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [109, 10, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [109, 7, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [109, 10, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [109, 10, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [109, 7, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [215, 6, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [215, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [215, 8, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [215, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [215, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [215, 10, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [215, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [215, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [215, 8, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [215, 10, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [215, 10, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [215, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [215, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 6, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 7, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 7, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 10, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 7, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 7, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 10, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 10, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 10, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 10, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 10, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 10, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 10, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 10, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 10, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 10, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 10, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 10, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 7, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 6, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 10, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 10, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 10, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 10, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 10, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 10, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 10, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 10, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 8, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 10, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 10, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 10, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 10, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 8, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 10, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 10, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 10, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 10, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 10, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 6, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 10, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 7, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 10, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 7, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 10, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 7, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 7, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 10, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 10, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 10, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 8, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 7, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 7, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 7, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 10, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 7, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [130, 6, 1, "_CPPv413InitArguments", "InitArguments"], [130, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [130, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [130, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [130, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [130, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [130, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [130, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [131, 6, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [131, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [131, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [131, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [131, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [131, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [131, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [131, 8, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [172, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [172, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [172, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [172, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [172, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [172, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [172, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [172, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [172, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [172, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [172, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [172, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [172, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [172, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [172, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [172, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [172, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [172, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [172, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [172, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [172, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [172, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [172, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [172, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [172, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [110, 6, 1, "_CPPv4I00E4LAnd", "LAnd"], [110, 7, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [110, 7, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [110, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [110, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [110, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [110, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [110, 7, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [110, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [110, 7, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [110, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [110, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [110, 10, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [110, 7, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [110, 10, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [110, 10, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [110, 7, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [111, 6, 1, "_CPPv4I00E3LOr", "LOr"], [111, 7, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [111, 7, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [111, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [111, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [111, 9, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [111, 9, 1, "_CPPv4I00E3LOr", "LOr::Space"], [111, 7, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [111, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [111, 7, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [111, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [111, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [111, 10, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [111, 7, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [111, 10, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [111, 10, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [111, 7, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [173, 6, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [173, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [173, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [173, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [173, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [173, 10, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [173, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [173, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [173, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [173, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [174, 6, 1, "_CPPv411LayoutRight", "LayoutRight"], [174, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [174, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [174, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [174, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [174, 10, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [174, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [174, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [174, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [174, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [175, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [175, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [175, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [175, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [148, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [148, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [148, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [112, 6, 1, "_CPPv4I00E3Max", "Max"], [112, 7, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [112, 7, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [112, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [112, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [112, 9, 1, "_CPPv4I00E3Max", "Max::Scalar"], [112, 9, 1, "_CPPv4I00E3Max", "Max::Space"], [112, 7, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [112, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [112, 7, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [112, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [112, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [112, 10, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [112, 7, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [112, 10, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [112, 10, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [112, 7, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [113, 6, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [113, 7, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [113, 7, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [113, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [113, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [113, 7, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [113, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [113, 7, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [113, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [113, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [113, 10, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [113, 7, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [113, 10, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [113, 10, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [113, 7, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [114, 6, 1, "_CPPv4I00E3Min", "Min"], [114, 7, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [114, 7, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [114, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [114, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [114, 9, 1, "_CPPv4I00E3Min", "Min::Scalar"], [114, 9, 1, "_CPPv4I00E3Min", "Min::Space"], [114, 7, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [114, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [114, 7, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [114, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [114, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [114, 10, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [114, 7, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [114, 10, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [114, 10, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [114, 7, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [115, 6, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [115, 7, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [115, 7, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [115, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [115, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [115, 7, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [115, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [115, 7, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [115, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [115, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [115, 10, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [115, 7, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [115, 10, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [115, 10, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [115, 7, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [116, 6, 1, "_CPPv4I00E6MinMax", "MinMax"], [116, 7, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [116, 7, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [116, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [116, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [116, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [116, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [116, 7, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [116, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [116, 7, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [116, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [116, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [116, 10, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [116, 7, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [116, 10, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [116, 10, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [116, 7, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [117, 6, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [117, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [117, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [117, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [117, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [117, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [117, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [117, 10, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [117, 7, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [117, 10, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [117, 10, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [118, 6, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [118, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [118, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [118, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [118, 8, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [119, 6, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [119, 9, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [119, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [119, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [119, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [119, 8, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [149, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [149, 8, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [149, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [149, 8, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [120, 6, 1, "_CPPv4I00E4Prod", "Prod"], [120, 7, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [120, 7, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [120, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [120, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [120, 9, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [120, 9, 1, "_CPPv4I00E4Prod", "Prod::Space"], [120, 7, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [120, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [120, 7, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [120, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [120, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [120, 10, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [120, 7, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [120, 10, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [120, 10, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [120, 7, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [150, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [150, 11, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 11, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [121, 7, 1, "_CPPv47ReducerR10value_type", "Reducer"], [121, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [121, 8, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [121, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 6, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 8, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 10, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 10, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 10, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 10, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 10, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 10, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 8, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [123, 6, 1, "_CPPv4I00E3Sum", "Sum"], [123, 9, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [123, 9, 1, "_CPPv4I00E3Sum", "Sum::Space"], [123, 7, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [123, 7, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [123, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [123, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [123, 7, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [123, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [123, 7, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [123, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [123, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [123, 10, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [123, 7, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [123, 10, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [123, 10, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [123, 7, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [151, 6, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [151, 10, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [151, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 10, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [151, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [151, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [151, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [151, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [152, 6, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [152, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [152, 10, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [152, 10, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [152, 10, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [152, 10, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [152, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [152, 10, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [152, 10, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [152, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [152, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [152, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [152, 8, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [152, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [152, 8, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [152, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [152, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [152, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [152, 10, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [153, 6, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [153, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [153, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [153, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [149, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [149, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [155, 6, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [155, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [155, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [155, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [157, 6, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [157, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [157, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [157, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [149, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [149, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 6, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 8, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 7, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 7, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 7, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 7, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 8, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 7, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 7, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 6, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 6, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [179, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [179, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [179, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [179, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [179, 11, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [179, 11, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [179, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [179, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [179, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [179, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [179, 11, 1, "_CPPv44ViewRR4View", "View"], [179, 11, 1, "_CPPv44Viewv", "View"], [179, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [179, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [179, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [179, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [179, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [179, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [179, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [179, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [179, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [179, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [179, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [179, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [179, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [179, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [179, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [179, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [179, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [179, 8, 1, "_CPPv44ViewRR4View", "View::rhs"], [179, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [179, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [179, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [179, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [175, 10, 1, "_CPPv412array_layout", "array_layout"], [179, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [179, 8, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [104, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [104, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [104, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [105, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [104, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [104, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [104, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [105, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [104, 11, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [104, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [104, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [104, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [99, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange"], [99, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::T"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::comparison_value"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::new_value"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::ptr_to_value"], [100, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong"], [100, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::T"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::comparison_value"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::new_value"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::ptr_to_value"], [104, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [104, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [104, 8, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [105, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [101, 11, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange"], [101, 9, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::T"], [101, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::new_value"], [101, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::ptr_to_value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [102, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [102, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [102, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [102, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [102, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [102, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [104, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [104, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [104, 8, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [103, 11, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load"], [103, 9, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::T"], [103, 8, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::ptr_to_value"], [105, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [105, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [104, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [104, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [104, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [105, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [104, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [104, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [104, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [105, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [104, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [104, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [104, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [104, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [105, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [105, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [105, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [105, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [105, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [106, 11, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [106, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [106, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [106, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [104, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [104, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [104, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [105, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 7, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 7, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 7, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [164, 6, 1, "_CPPv4I0E7complex", "complex"], [164, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [164, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [164, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [164, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [164, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [164, 7, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [164, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [164, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [164, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [164, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [164, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [164, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [164, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [164, 8, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [164, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [164, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [164, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [164, 7, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [164, 7, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [164, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [164, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [164, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [164, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [164, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [164, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [164, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [164, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [164, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [164, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [164, 8, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [164, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [164, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [164, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [164, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [164, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [164, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [164, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [164, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [164, 8, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [164, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [164, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [164, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [164, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [164, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [164, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [164, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [164, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [164, 8, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [164, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [164, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [164, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [164, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [164, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [164, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [164, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [164, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [164, 8, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [164, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [164, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [164, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [164, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [164, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [164, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [164, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [164, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [164, 8, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [164, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [164, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [164, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [164, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [164, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [164, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [164, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [164, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [164, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [164, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [164, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [164, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [164, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [164, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [164, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [164, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [164, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [164, 8, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [164, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [164, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [164, 7, 1, "_CPPv4N7complex4realEv", "complex::real"], [164, 7, 1, "_CPPv4NK7complex4realEv", "complex::real"], [164, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [164, 10, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [171, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [171, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [171, 11, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror"], [171, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [171, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [171, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [171, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [171, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewCtorArgs"], [171, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [171, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [171, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewType"], [171, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [171, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [171, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::arg_prop"], [171, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [171, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [171, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [171, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [171, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::v"], [171, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [171, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [171, 11, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view"], [171, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [171, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [171, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [171, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [171, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewCtorArgs"], [171, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [171, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [171, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewType"], [171, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [171, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [171, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::arg_prop"], [171, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [171, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [171, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [171, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::src"], [171, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [171, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [171, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [171, 11, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy"], [171, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [171, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewCtorArgs"], [171, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [171, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewType"], [171, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::arg_prop"], [171, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [171, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::src"], [179, 11, 1, "_CPPv4NK4dataEv", "data"], [175, 12, 1, "_CPPv49dimension", "dimension"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 7, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [179, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [179, 8, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [179, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [179, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [179, 8, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [179, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [215, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [215, 8, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [121, 7, 1, "_CPPv4NK4initER10value_type", "init"], [121, 8, 1, "_CPPv4NK4initER10value_type", "init::val"], [179, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [179, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [179, 8, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [175, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [121, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [121, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [126, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [126, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [126, 8, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [127, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [127, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [128, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [128, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [128, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [128, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [179, 11, 1, "_CPPv4NK5labelEv", "label"], [179, 11, 1, "_CPPv4NK6layoutEv", "layout"], [179, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [179, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [179, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [179, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [179, 8, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [175, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [175, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [179, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [215, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [179, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [179, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [215, 9, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [175, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [175, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [175, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [175, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [159, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [159, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [159, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [159, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [159, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [159, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [159, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [159, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weigths"], [179, 11, 1, "_CPPv44rankv", "rank"], [179, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [121, 7, 1, "_CPPv4NK9referenceEv", "reference"], [179, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [179, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [179, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [179, 8, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [179, 11, 1, "_CPPv4NK4sizeEv", "size"], [179, 11, 1, "_CPPv4NK4spanEv", "span"], [179, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [179, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [179, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [175, 12, 1, "_CPPv46stride", "stride"], [179, 8, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [179, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [179, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [179, 8, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [179, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [179, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [179, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [179, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [179, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [179, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [179, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [179, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [178, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [178, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [178, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [178, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [178, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [179, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 6, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 10, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 10, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 10, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 8, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 10, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 7, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 7, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 10, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 8, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 10, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 8, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 8, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 10, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [121, 7, 1, "_CPPv4NK4viewEv", "view"], [180, 11, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc"], [180, 9, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::Args"], [180, 8, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::args"], [180, 11, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap"], [180, 9, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::Args"], [180, 8, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::args"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:class", "7": "cppkokkos:kokkosinlinefunction", "8": "cppkokkos:functionParam", "9": "cppkokkos:templateParam", "10": "cppkokkos:type", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "class", "C++ class"], "7": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "8": ["cppkokkos", "functionParam", "C++ function parameter"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "type", "C++ type"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 182, 187, 218], "algorithm": [0, 3, 72, 207, 232], "random": [1, 203], "number": [1, 224], "rand": 1, "gener": [1, 32, 88, 129, 188, 221], "synopsi": [1, 2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 149, 150, 154, 156, 158, 160, 169], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 121, 130, 131, 132, 133, 134, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 168, 169, 170, 172, 175, 176, 177, 178, 179, 183, 184, 185, 191, 192, 194, 198, 199, 201, 215, 223, 229, 232], "sort": [2, 10], "nest": [2, 84, 85, 193], "polici": [2, 85, 90, 94, 148, 150, 193, 200], "team": [2, 90, 187, 193, 200], "thread": [2, 193, 195, 198], "level": [2, 85], "addit": [2, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "inform": [2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 188], "sampl": 2, "output": 2, "std": [3, 195], "iter": [4, 81], "kokko": [4, 86, 87, 94, 129, 135, 149, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 187, 188, 195, 197, 198, 203, 204, 205, 207, 208, 214, 217, 218, 220, 221, 222, 225, 226, 232, 234], "experiment": [4, 129, 135, 166, 183, 184, 185], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 132, 136, 137, 138, 161, 163, 168], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 134, 143, 144, 145, 146, 148, 150, 172, 179, 183, 184, 185, 230], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 121, 133, 134, 143, 144, 145, 146, 159, 170, 172, 214, 218, 219, 228], "distanc": 4, "return": [4, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": 5, "maximum": 5, "modifi": [6, 7], "sequenc": [6, 7, 232], "non": [7, 74, 129, 135, 195, 215, 230], "numer": [8, 89, 139], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 99, 100, 101, 102, 103, 104, 105, 106, 126, 127, 128, 132, 149, 151, 152, 153, 154, 155, 156, 157, 158, 164, 170, 171, 173, 174, 175, 176, 177, 178, 180, 215], "adjacent_find": 12, "all_of": 13, "any_of": 14, "copi": [15, 129, 143, 172, 203], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 203], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 228], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 107, 121, 190, 191, 192, 199], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 203, 207], "core": [72, 83, 207], "bitset": 74, "class": [74, 121, 140, 141, 142, 148, 150, 160, 169, 179, 207], "interfac": [74, 78, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 133, 134, 143, 144, 145, 146, 148, 153, 155, 157, 159, 170, 172, 179, 183, 184, 185, 215], "constbitset": 74, "member": [74, 121, 124, 129, 135, 140, 141, 142, 148, 150, 160, 169, 179, 207, 215, 230], "function": [74, 121, 125, 129, 135, 138, 140, 141, 142, 147, 160, 179, 183, 185, 186, 197, 199, 203, 207, 210, 215, 230, 233], "dualview": 75, "usag": [75, 76, 80, 82, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 132, 140, 141, 142, 145, 146, 148, 149, 150, 152, 154, 156, 159, 164, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 226, 229, 232], "dynrankview": 76, "assign": [76, 124, 160, 179, 185, 201], "rule": [76, 179, 203], "dynamicview": 77, "offsetview": 78, "construct": [78, 129, 203], "scatterview": [79, 186, 224], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 129, 143, 188, 199, 203, 204, 223, 225, 226, 228, 232], "default": [81, 129, 203], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 193, 195, 201], "detect": [84, 129], "idiom": [84, 203], "an": [84, 87, 147, 199, 201, 219], "express": 84, "typedef": [84, 121, 129, 135, 140, 141, 142, 160, 179, 183, 184], "execut": [85, 88, 90, 129, 148, 150, 188, 193, 198, 199, 200, 203, 229], "top": [85, 232], "common": [85, 138, 148, 150], "argument": [85, 148, 150, 194], "all": [85, 129, 148, 150, 162], "initi": [86, 134, 194, 203, 226], "final": [86, 133, 194], "scopeguard": [86, 132], "concept": 87, "introduct": [87, 196], "approach": 87, "overview": 87, "The": [87, 197, 201, 208, 228, 233], "executionspac": 87, "implement": [87, 226], "deviceexecutionspac": 87, "some": [87, 172], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 147], "teammemb": 87, "functor": [87, 94, 199, 232], "A": [87, 202, 220], "deleg": 87, "macro": [88, 187, 207], "version": [88, 214], "set": 88, "space": [88, 92, 93, 129, 135, 188, 198, 199, 200, 203], "backend": [88, 209, 222], "option": [88, 150, 209], "c": [88, 125, 187, 195, 202, 208, 218, 231], "standard": [88, 203, 208], "third": [88, 209], "parti": [88, 209], "librari": [88, 195, 201, 208, 209], "architectur": [88, 209], "parallel": [90, 94, 193, 199, 226], "dispatch": [90, 199], "pattern": [90, 94, 200, 229, 232], "tag": [90, 199, 231], "calcul": 90, "stl": 91, "compat": [91, 187, 218], "issu": [91, 204, 210, 218, 219], "access": [92, 179, 183, 184, 203], "task": [94, 232], "Will": 94, "work": [94, 197, 208, 229, 232, 233], "my": [94, 197, 233], "problem": [94, 197, 203, 226, 233], "basic": [94, 193, 201], "predecessor": 94, "schedul": 94, "wait": 94, "aggreg": 94, "prioriti": 94, "trait": [95, 139, 186, 200, 203], "is_array_layout": 95, "is_execution_polici": 95, "is_memory_spac": 95, "is_memory_trait": 95, "is_reduc": 95, "is_spac": 95, "util": 96, "view": [97, 172, 179, 181, 195, 202, 203], "relat": [97, 208], "atom": [98, 186, 203], "atomic_compare_exchang": 99, "atomic_compare_exchange_strong": 100, "atomic_exchang": 101, "atomic_fetch_": 102, "op": [102, 104, 105], "atomic_load": 103, "atomic_": [104, 105], "_fetch": 105, "atomic_stor": 106, "built": [107, 121, 190, 191], "band": 108, "bor": 109, "land": 110, "lor": 111, "max": [112, 183], "maxloc": 113, "min": [114, 183], "minloc": 115, "minmax": 116, "minmaxloc": 117, "minmaxlocscalar": 118, "minmaxscalar": 119, "prod": 120, "reducerconcept": 121, "public": [121, 124, 140, 141, 142, 148, 150, 160, 169, 179, 207], "constructor": [121, 129, 135, 140, 141, 142, 148, 150, 160, 169, 179, 183, 184], "In": [121, 190, 191], "reduct": [122, 184, 189, 199, 201], "scalar": [122, 191], "type": [122, 181, 191, 201, 202, 203, 207], "sum": [123, 224], "vallocscalar": 124, "variabl": 124, "oper": [124, 183, 184, 186, 201, 225, 226, 229, 231], "style": 125, "memori": [125, 135, 186, 193, 195, 198, 200, 203], "manag": [125, 195, 203, 222], "kokkos_fre": 126, "kokkos_malloc": 127, "kokkos_realloc": 128, "cuda": [129, 188, 195, 204, 227], "hip": [129, 210], "sycl": 129, "hpx": 129, "openmp": [129, 195], "openmptarget": 129, "serial": [129, 226, 229], "executionspaceconcept": 129, "alias": [129, 207], "base": 129, "configur": [129, 188, 204], "defaultexecutionspac": 129, "defaulthostexecutionspac": 129, "veri": 129, "simplest": 129, "Not": 129, "Being": 129, "more": 129, "facil": [129, 135], "initargu": 130, "see": [130, 131, 132, 134, 137, 138, 163], "also": [130, 131, 132, 134, 137, 138, 163], "initializationset": 131, "semant": [133, 134, 143, 144, 145, 146, 159, 172], "cudaspac": 135, "cudahostpinnedspac": 135, "cudauvmspac": 135, "hipspac": 135, "hiphostpinnedspac": 135, "hipmanagedspac": 135, "sycldeviceusmspac": 135, "syclhostusmspac": 135, "syclsharedusmspac": 135, "hostspac": 135, "sharedspac": [135, 228], "sharedhostpinnedspac": 135, "memoryspaceconcept": 135, "bit": 136, "manipul": 136, "mathemat": [137, 210], "constant": [137, 210], "math": 138, "parallelfortag": 140, "parallelreducetag": 141, "parallelscantag": 142, "fenc": 143, "time": 143, "kernel": [143, 193, 229], "asynchron": 143, "deep": [143, 203], "parallel_for": 144, "parallel_reduc": 145, "parallel_scan": 146, "what": [147, 203, 233], "mdrangepolici": [148, 226], "specif": 148, "nestedpolici": 149, "list": [149, 188], "perteam": 149, "perthread": 149, "teamthreadrang": [149, 154], "teamthreadmdrang": [149, 153], "teamvectorrang": [149, 156], "teamvectormdrang": [149, 155], "threadvectorrang": [149, 158], "threadvectormdrang": [149, 157], "rangepolici": [150, 226], "initarg": 150, "teamhandleconcept": 151, "teampolici": 152, "partition_spac": 159, "pair": 160, "convers": [160, 203], "abort": 161, "kokkos_assert": 163, "complex": 164, "device_id": 165, "num_thread": 167, "printf": 168, "timer": 169, "subview": [170, 178, 202], "create_mirror": 171, "_view": 171, "deep_copi": 172, "thing": 172, "you": [172, 203], "can": [172, 203], "cannot": 172, "do": [172, 203, 233], "how": [172, 197, 202, 203, 233], "get": [172, 203], "layout": [172, 179, 200, 203], "incompat": 172, "layoutleft": 173, "layoutright": 174, "layoutstrid": 175, "realloc": 176, "resiz": [177, 203], "enum": 179, "data": [179, 195, 203], "dimens": [179, 202, 203], "stride": [179, 203], "other": [179, 187, 203, 207], "nonmemb": 179, "view_alloc": 180, "like": 181, "simd": [182, 183, 201], "templat": [183, 184, 185, 216, 230, 231], "width": [183, 184], "load": [183, 185], "store": [183, 185], "method": [183, 184, 185], "valu": [183, 184, 224], "arithmet": 183, "comparison": [183, 184], "cmath": 183, "global": [183, 184], "simd_mask": 184, "boolean": 184, "where_express": 185, "where": 185, "gather": [185, 218], "scatter": 185, "10": 186, "1": [186, 188, 190, 193, 194, 195, 196, 198, 199, 200, 202, 203, 229], "write": 186, "conflict": 186, "Their": 186, "resolut": 186, "With": 186, "2": [186, 188, 191, 193, 194, 195, 198, 199, 200, 202, 203, 229], "free": [186, 207], "3": [186, 188, 192, 193, 194, 195, 198, 199, 200, 202, 203, 207, 214, 232], "4": [186, 188, 193, 194, 195, 199, 200, 203, 214], "12": [187, 195], "backward": 187, "futur": [187, 198], "user": 187, "defin": 187, "abi": 187, "deprec": [187, 207], "header": [187, 194, 207], "right": 187, "reserv": 187, "miscellan": 187, "proof": 187, "compil": [188, 214, 220, 222], "cmake": [188, 204, 209], "build": [188, 204, 214], "system": [188, 214], "instal": [188, 204], "packag": [188, 204], "tree": 188, "spack": [188, 204], "develop": [188, 204, 218], "keyword": [188, 209], "trilino": 188, "branch": 188, "gnu": 188, "makefil": [188, 204], "5": [188, 194, 199, 200, 203], "6": [188, 200, 203], "restrict": [188, 193], "9": [189, 190, 191, 192], "custom": [189, 191, 192, 221], "8": 193, "hierarch": 193, "motiv": [193, 198], "creat": [193, 203], "instanc": [193, 198], "scratch": 193, "pad": 193, "loop": [193, 199], "barrier": 193, "singl": [193, 227], "executor": 193, "0": 194, "includ": 194, "command": 194, "line": 194, "struct": 194, "code": [194, 195, 197, 201, 228, 229, 233], "13": 195, "interoper": 195, "legaci": 195, "structur": [195, 225, 230], "raw": [195, 203, 204], "alloc": [195, 225], "through": [195, 232], "extern": 195, "fundament": 195, "own": 195, "call": 195, "14": 197, "virtual": [197, 233], "v": [197, 233], "tabl": [197, 233], "pointer": [197, 203, 233], "eri": [197, 233], "annoi": [197, 233], "gpu": [197, 233], "Then": [197, 233], "why": [197, 203, 233], "doesn": [197, 233], "t": [197, 203, 233], "fix": [197, 233], "thi": [197, 203, 218, 233], "complic": [197, 233], "question": [197, 208, 233], "follow": [197, 233], "up": [197, 233], "machin": 198, "model": [198, 200, 208, 218], "abstract": 198, "figur": 198, "conceptu": 198, "high": 198, "perform": [198, 201, 208, 222, 229], "comput": [198, 222, 224, 229], "node": [198, 224], "program": [198, 200, 208, 213, 218, 225], "safeti": 198, "7": [199, 203, 207], "specifi": [199, 203], "bodi": 199, "lambda": 199, "should": 199, "i": [199, 203, 233], "join": 199, "init": 199, "arrai": [199, 203, 225, 226, 230], "result": 199, "scan": 199, "name": [199, 204], "rang": 200, "15": 201, "background": 201, "idea": 201, "deal": [201, 231], "remaind": 201, "condit": [201, 232], "ternari": 201, "11": 202, "slice": 202, "take": 202, "deduct": 202, "degener": 202, "obtain": 202, "multidimension": [203, 225], "need": [203, 233], "mai": 203, "make": 203, "probabl": 203, "don": 203, "want": 203, "s": 203, "realli": [203, 233], "const": 203, "entri": 203, "index": 203, "refer": [203, 226], "lifetim": 203, "depend": 203, "explicitli": 203, "placement": 203, "hostmirror": 203, "unmanag": 203, "special": 203, "philosophi": 204, "known": [204, 210], "knownissu": 204, "crai": 204, "fortran": [204, 225], "inlin": 204, "vs": 204, "uvm": 204, "cite": 205, "contribut": 206, "document": [206, 216], "x": [207, 214], "namespac": 207, "updat": 207, "portabl": [208, 233], "websit": 208, "content": 208, "devic": [209, 229, 233], "enabl": 209, "tpl": 209, "amd": 209, "licens": 211, "guid": 213, "coolerview": 215, "plan": [217, 218], "test": [217, 221, 222], "project": 218, "stabil": 218, "activ": 218, "support": [218, 220], "platform": [218, 222], "capabl": 218, "iso": 218, "releas": [218, 221], "priorit": 218, "coordin": 218, "process": [218, 221], "feedback": 219, "report": 219, "attach": 220, "identif": 220, "b": 220, "file": 220, "promot": 220, "txt": 220, "chang": 221, "pull": 221, "request": 221, "nightli": 221, "integr": 221, "intern": 221, "prefer": 221, "commun": 221, "workflow": 222, "compon": 222, "softwar": 222, "git": 222, "repositori": 222, "batch": 222, "queue": 222, "account": 222, "script": 222, "unit": 222, "case": [223, 225, 226, 232, 233], "averag": 224, "element": 224, "adjac": 224, "full": 224, "interop": 225, "multi": 226, "dimension": 226, "formul": 226, "mpi": 227, "halo": 227, "exchang": 227, "send": 227, "messag": 227, "awar": 227, "separ": 227, "out": 227, "identifi": 227, "subset": 227, "indic": 227, "extract": 227, "from": 228, "kokkos_enable_cuda_uvm": 228, "altern": 228, "transit": 228, "overlap": 229, "host": 229, "actor": [229, 232], "subject": [229, 232], "assumpt": [229, 232], "constraint": [229, 232], "precondit": [229, 232], "while": 229, "cabana": 230, "soa": 230, "aosoa": 230, "pre": 231, "17": 231, "post": 232, "recurs": 232, "fibonacci": 232, "flow": 232, "n": 232, "divid": 232, "graph": 232, "down": 232, "bf": 232, "But": 233, "side": 233, "doe": 233, "nvcc": 233, "solv": 233, "window": 234, "h": 234, "video": 235, "lectur": 235, "slide": 235}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})